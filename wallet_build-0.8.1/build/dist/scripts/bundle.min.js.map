{"version":3,"sources":["scripts/bundle.min.js"],"names":["baseClientApp","angular","module","constant","SESSION_STORAGE_NAMESPACE","FALLBACK_HOST_URL","AUTO_PAGE_REFRESH_INTERVAL","TOKEN_QUANTS","TX_DEADLINE","apiEndPoint","SESSION_CURRENT_BLOCK","SESSION_APP_OPTIONS","SESSION_PEER_ENDPOINTS","SESSION_MAX_RETRIES","SESSION_CURRENT_TRY","EPOCH","config","$localStorageProvider","baseConfig","setKeyPrefix","apiUrl","peerEndPoint","SESSION_PEER_URL_KEY","endPoint","DEFAULT","DEVTESTNET","TESTNET","SESSION_ACCOUNT_DETAILS_KEY","SESSION_ACCOUNT_PRIVATE_KEY","SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY","SESSION_ACCOUNT_CONTROL_JSONCONTROL_KEY","factory","Restangular","peerConfig","withConfig","RestangularConfigurer","setBaseUrl","service","PeerRestangular","SessionStorageService","peerEndpoints","$injector","peerEndpointsMap","PeerService","this","getPeers","getPeerEndPoints","all","customGET","getStats","searchIp","ip","params","option","OptionsService","get","getOption","endPoints","loginConfig","NodeService","$sanitize","dontSanitizeNumber","object","isNaN","iterate","obj","callback","property","hasOwnProperty","CommonsService","convertToArray","Array","isArray","getAccountDetailsFromSession","keyName","accountDetails","getFromSession","broadcastTransaction","transactionBytes","getNodeUrl","requestType","customPOST","iterateAndExecuteFunctionOnJson","sanitizeJson","localhostConfig","getPeerState","url","isValidUrl","then","success","error","$sessionStorage","saveToSession","key","value","deleteFromSession","e","undefined","resetSession","$reset","directive","scope","alert","link","element","on","event","preventDefault","$compile","restrict","replace","ele","attrs","$watch","dynamic","html","contents","$timeout","focus","message","backdrop","delay","minDuration","filter","$sce","moment","val","actual","unix","format","toLocaleString","minimumFractionDigits","numOfDecimals","Math","pow","parseInt","parseFloat","actualPow","divider","multiplier","maximumFractionDigits","type","subType","$eval","compile","input","total","i","push","data","JSON","stringify","row","account","attachment","encryptedMessage","senderRS","recipientRS","trustAsHtml","amount","amountTqt","template","controller","$scope","$rootScope","FiatService","$q","quantToAmountFilter","getXinPrice","finalAmount","btcPricePromise","getBtcPrice","xinPricePromise","btcPriceJson","xinPriceJson","xinUSDBTC","averages","day","xinPriceUSD","price_usd","xinPriceBTC","price_btc","xinVolume24","xinChange24","percent_change_24h","console","log","newValue","templateUrl","elem","attr","btcEndpoint","xinEndpoint","fiatConfig","provider","getCharacterLength","length","$get","getSetAccountFee","name","description","totalLength","totalFee","normalizedLength","floor","getIssueAssetFee","getDeleteAssetFee","getDeleteCurrencyFee","transferAssetFee","getTransferCurrencyFee","getIssueCurrencyFee","currencyCode","getCreatePollFee","getCastVoteFee","getSetAliasFee","getDeleteAliasFee","$validationProvider","FeeServiceProvider","sumJson","json","extend","validCallback","$","parents","removeClass","invalidCallback","addClass","setErrorHTML","msg","setSuccessHTML","showSuccessMessage","setExpression","secretphrase","param","hasPrivateKeyInSession","fee","minFee","sendForm","setAccountInfoForm","accountName","accountDescription","result","accountname","accountdesc","currencycode","currencytype","issueCurrencyForm","types","newPrefix","setAliasForm","prefix","aliasSearch","nodeUrl","optionsForm","CONNECTION_MODE","setDefaultMsg","afterValidate","$uibModal","openAddressBookModal","accountRS","tag","open","animation","resolve","openOptionsModal","searchAliases","searchTerm","form","searchAlias","aliases","alias","aliasName","toUpperCase","aliasURI","aliasType","split","$uibModalInstance","cancel","dismiss","showResult","run","openErrorModal","errorMessage","size","connectionMode","setTestNet","setHttpsNet","setDevNet","setMainNet","testnet","setStatus","extensions","setExtensions","sanitizeJsonResponse","response","indexOf","$http","index","responseError","status","reject","OptionsConfigurationService","currentTry","loadOptions","$httpProvider","interceptors","$state","hasAuthenticated","authenticate","nextState","go","$window","converters","thirdParty","PassPhraseGenerator","curve25519","pako","curve25519_","CryptoJS_SHA256","CryptoJS","SHA256","CryptoJS_CipherParams","lib","CipherParams","AES","rsAddress","init","SHA256_init","update","SHA256_write","getBytes","SHA256_finalize","byteArrayToBigInteger","byteArray","startIndex","temp1","temp2","BigInteger","multiply","add","toString","sha256","algo","cryptoUtils","RsAddress","_hash","curve25519_clamp","curve","simpleHash","b1","b2","sha","create","byteArrayToWordArray","hash","finalize","wordArrayToByteArrayImpl","getPrivateKey","secretPhrase","bytes","stringToByteArray","shortArrayToHexString","byteArrayToShortArray","getSharedSecret","key1","key2","shortArrayToByteArray","getRandomValues","nonce","window","crypto","msCrypto","getUtf8Bytes","str","utf8","unescape","encodeURIComponent","arr","charCodeAt","encryptMessage","msgStrg","senderSecretHex","receiverPublicKey","secret","hexStringToString","senderPrivateKeyBytes","hexStringToByteArray","receiverPublicKeyBytes","sharedKey","Uint8Array","msgBytes","msgCompressed","gzip","msgWordArray","tmp","iv","encrypted","encrypt","ivOut","wordArrayToByteArray","ciphertextOut","ciphertext","concat","byteArrayToHexString","decryptMessage","msgHex","nonceHex","recieverSecretHex","senderPublicKey","recieverPrivateKeyBytes","senderPublicKeyBytes","ivCiphertext","slice","decrypted","decrypt","compressedPlaintext","binData","byteArrayToString","inflate","generatePassPhrase","getAccountDetails","publicKey","secretPhraseToPublicKey","accountId","publicKeyToAccountId","accountRs","accountIdToAccountRS","secretPhraseBytes","digest","keygen","p","getBlockTime","epoch","Date","now","generateToken","secretHex","messageBytes","pubKeyBytes","token","tsb","ts","signatureHex","buf","ptr","nbr","number","secretPhraseToPrivateKey","stringToHexString","secretPhraseFromPrivateKey","privateKey","hex","address","set","unsignedHex","privateHex","unsignedBytes","s","m","x","y","h","v","sign","signTransactionHex","substr","SESSION_HAS_LOCAL","SESSION_LOCAL_NODE","SESSION_PEER_NODES","nodeConfig","LocalHostService","getLocalNode","node","hasLocal","getPeerNode","peerNodes","$broadcast","clearNodeConfig","getNodesCount","getNode","selectRandom","random","_id","apiServerPort","test","getLocalNodeUrl","Error","connectedURL","totalNodes","CryptoService","controlConfig","copyJson","fromJson","toJson","createPhasingParameters","hasPhasing","phasingParams","accountPhasingOptions","phased","phasingVotingModel","votingModel","phasingQuorum","quorum","phasingMinBalance","minBalance","phasingMinBalanceModel","minBalanceModel","phasingWhitelisted","getWhitelistedAccountsFromPhasingJson","whitelist","blockHeight","phasingFinishHeight","options","TX_HEIGHT","controlWhiteListJson","accounts","whitelisted","createTransaction","requestParameters","messageParameters","phasingParameters","finalJson","getBlockChainStatus","numberOfBlocks","mainAlertName","sendTokenModalAlert","setInfoModalAlert","leaseBalanceModalAlert","startFundingMonitorModalAlert","blockGenerationModalAlert","setApproveTransactionAlert","issueAssetModalAlert","deleteAssetModalAlert","cancelBidOrderModalAlert","transferAssetModalAlert","deleteCurrencyModalAlert","transferCurrencyModalAlert","setAccountControlModalAlert","optionModalAlert","createPollModalAlert","buyAliasModalAlert","cancelAliasModalAlert","deleteAliasModalAlert","editAliasModalAlert","setAliasModalAlert","transferAliasModalAlert","dividendPaymentModalAlert","placeAssertOrderModalAlert","issueCurrencyModalAlert","readMessageModalAlert","sendMessageModalAlert","castVoteModalAlert","controlApproveModalAlert","controlRemoveModalAlert","publishExchangeOfferModalAlert","buyCurrencyModalAlert","sellCurrencyModalAlert","currencyReserveClaimModalAlert","currencyReserveIncreaseModalAlert","welcomeFaucetModalAlert","claimSecretTransaction","decodeToken","parseTransaction","calculateHash","chainStatistics","expectedAssetOrderModalAlert","setPropertyAlert","deletePropertyAlert","createCampaignAlert","reserveCampaignAlert","createSubscriptionAlert","createEscrowAlert","signEscrowAlert","createShuffleModalAlert","registerShuffleModalAlert","startShuffleModalAlert","stopShuffleModalAlert","cancelShuffleModalAlert","readNewsAlert","deleteAssetFullModalAlert","createATModalAlert","startFundingMonitorAlert","stopFundingMonitorAlert","alertConfig","getAlertName","alertName","ALERT_NAME","alerts","alertHandlers","addAlert","notify","closeAlert","splice","getAlerts","subscribe","handler","$on","$emit","getNoConnectionMessage","AlertService","handleAlertEvent","alertInit","tableAddressBook","$indexedDBProvider","addressBookConfig","connection","upgradeDatabase","db","tx","objStore","createObjectStore","keyPath","createIndex","unique","$indexedDB","createAddress","successCallBack","errorCallBack","openStore","store","insert","tags","getAllContacts","contacts","find","query","$eq","$index","eachWhere","clearContacts","successCallback","errorCallback","clear","getContactsCount","count","deleteContact","delete","AddressService","DTOptionsBuilder","DTColumnBuilder","searchTermFilter","rowCallback","nRow","aData","iDisplayIndex","iDisplayIndexFull","unbind","bind","$apply","closeOnClick","close","reloadData","dtInstance","_renderer","rerender","contact","dtOptions","newOptions","withPaginationType","withDOM","withOption","withDataProp","settings","iTotalRecords","iTotalDisplayRecords","withDisplayLength","withBootstrap","dtColumns","newColumn","withTitle","notSortable","renderWith","meta","dtColumnsLite","dtInstanceCallback","_dtInstance","createNewContact","tableOptions","DEADLINE","REFRESH_INTERVAL_MILLI_SECONDS","USER_NODE_URL","USE_LOCAL_NODE","AUTO_UPDATE","VERSION","RANDOMIZE_NODES","TESTNET_URL","DEVTESTNET_URL","LOCALTESTNET_URL","FOUNDATION_URL","HTTPS_URL","LOCAL_HOST_URL","EXTENSIONS","optionsConfig","DEFAULT_OPTIONS","insertOption","optionName","insertOptions","values","updateOptions","upsert","getAllOptions","clearOptions","finalOptions","parse","optionObject","isNodeSameAsInSession","URL","hostname","setUserPeerNode","uri","$validation","getOptionsJsonObject","$watchCollection","optionsObject","validateForm","isRequired","Promise","validateAndUpdate","updateConnectionMode","reload","validate","CONNECTION_MODES","DEVNET","BLOCKR_URL_END_POINT","BLOCKR_ADDRESS_END_POINT","exchangesConfig","BlockrRestangular","getAddressBalance","one","BlockrService","openBtcDetailsModal","getBtcAdressBalance","BlockrServicePromise","addrStr","balance","totalReceived","totalSent","unconfirmedBalance","txApperances","$stateProvider","$urlRouterProvider","state","sessionCleared","localCleared","calculateAccountDetailsFromSecret","storeToSession","calculatePrivateKeyFromSecret","LoginService","$stateParams","OptionsConfigureService","loginToAccount","rememberSecret","getAccountFromSession","activePeer","localPeer","openSignUpModal","openSignOutModal","postLogOut","steps","title","createNewAccount","confirmAndLogin","confirmPassPhrase","logout","clearLocal","assetsEndPoint","abstract","assetsConfig","TransactionService","GET_ASSET_ORDERS","BID_ORDER","ASK_ORDER","getAssets","firstIndex","lastIndex","order","orderColumn","includeCounts","getAsset","asset","getAccountAssets","includeAssetInfo","getAccountSingleAsset","getMultipleAssetLastTrades","assets","getAccountCurrentBidOrders","getAccountCurrentAskOrders","issueAsset","quantity","decimals","quantityQNT","feeTQT","deadline","broadcast","deleteAssetShares","deleteAssetFull","serachAssets","cancelOrder","transferAsset","recipient","dividendPayment","height","amoountPerQNT","amountTQTPerQNT","placeOrder","price","request","priceTQT","getAssetLastTrades","getAssetOrders","orderType","getAllTrades","getAllOpenAskOrders","getAllOpenBidOrders","getAllLastTransfers","getMyTrades","getExpectedAskOrders","sortByPrice","getExpectedBidOrders","getExpectedAssetDeletes","getExpectedAssetTransfers","getExpectedOrderCancellations","getBidOrderTrades","orderid","bidOrder","getAskOrderTrades","askOrder","getDividendsHistory","timestamp","AssetsService","amountTQTFilter","timestampFilter","supplyFilter","openIssueAssetModal","openDeleteAssetModal","assetId","openDeleteAsseFulltModal","openPlaceOrderModal","openTradeDeskModal","openSearchAssetModal","openExpectedOrderModal","openOrderTradesModal","openExpectedTransfersModal","openExpectedDeletesModal","openExpectedBidModal","openExpectedCancellationsModal","openCancelOrderModal","orderId","openTransferAssetModal","openSendAssetModal","openDividendPaymentModal","openAssetDetailsModal","openDividendsDetailsModal","sort_order","sort_orderColumn","sort_default","reloadAssets","sort_supply","sort_height","sort_decimals","sort_name","sort_toggle","endIndex","start","dtOptionsAssets","accountAssets","dtColumnsAssets","currentQuantityQNT","divi_tag","issuerAccountRS","numberOfAccounts","numberOfTrades","numberOfTransfers","del","dtInstanceCallbackAssets","numberStringFilter","dtBidOrdersOptions","bidOrders","dtBidOrdersColumns","dtBidOrdersInstanceCallback","dtInstanceBidOrder","reloadBidOrders","dtAskOrdersOptions","askOrders","dtAskOrdersColumns","dtAskOrdersInstanceCallback","dtInstanceAskOrder","reloadAskOrders","issueAssetSteps","isolatedScope","deleteAssetSteps","placeOrderSteps","tradeDeskSteps","searchAssetSteps","expectedOrderSteps","expectedTransfersSteps","orderTradesSteps","expectedDeletesSteps","expectedCancellationsSteps","cancelOrderSteps","transferAssetSteps","sendAssetSteps","dividendPaymentSteps","deleteAssetFullSteps","issueAssetForm","deleteAssetForm","placeOrderForm","tradeDeskForm","searchAssetForm","expectedOrderForm","expectedCancellationForm","expectedTransfersForm","orderTradesForm","expectedDeletesForm","cancelOrderForm","transferAssetForm","sendAssetForm","dividendPaymentForm","deleteAssetFullForm","buysellFilter","numericalStringFilter","dtOptionsLastTrades","trades","lastTrades","dtColumnsLastTrades","tradeType","dtInstanceCallbackLastTrades","reloadLastTrades","initAssetDetails","assetDetails","AccountService","dtOptionsLastTransfers","transfers","lastTransfers","dtColumnsLastTransfers","dtInstanceCallbackLastTransfers","reloadLastTransfers","dtOptionsMyTrades","mytrades","dtColumnsMyTrades","dtInstanceCallbackMyTrades","reloadMyTrades","dtOptionsDividendsDetails","dividends","dtColumnsDividendsDetails","dtInstanceCallbackDividendsDetails","multiStepFormScope","FeeService","copy","units","shares","secretPhraseHex","issueAssetPromise","errorCode","errorDescription","unsignedTransactionBytes","validBytes","tx_fee","transactionJSON","tx_amount","amountTQT","tx_total","transaction","multiStepFormInstance","shareToQuantiyFilter","initStep1","$getActiveStep","deleteAsset","deleteAssetPromise","deleteAssetFullPromise","onSubmit","$valid","$nextStep","nameSearch","idSearch","cancelOrderPromise","nextStep","sendAssetPromise","amountToQuantFilter","CurrenciesService","amountPerQuant","dividendPaymentPromise","quantityToShareFilter","placeAssetOrderPromise","amountToDecimalFilter","eventType","getTradeData","optionSize","resultPriceArray","resultQuantityArray","priceObject","quantityObject","bar","map","series","d","unconfirmedQuantityQNT","buyOrderForm","totalPrice","enableBuy","askOrderForm","enableSell","placeOrderClick","promisesArray","assetOrdersPromise","assetDetailsPromise","offersResponse","assetDetailsResponse","fireFormFillEvent","eventName","dtAskOrderInstance","dtBidOrderInstance","dtTradeOptions","tradeData","labels","apply","Number","call","lastTrade","dtTradeColumns","dtLastTradesInstanceCallback","dtLastTradesrInstance","chartOptions","chart","margin","top","right","bottom","left","bars","forceY","bars2","focusEnable","isArea","color","xAxis","axisLabel","showMaxMin","show","tickFormat","y1Axis","axisLabelDistance","y2Axis","errorResponse","addedUnknown","dtAskOptions","expectedAskOrdersPromise","dtAskColumns","dtAskInstanceCallback","dtBidOptions","expectedBidOrdersPromise","dtBidColumns","dtBidInstanceCallback","expectedOrderCancellationForm","orderCancellations","bidOrderTrades","askOrderTrades","allTrades","deletes","currenciesEndPoint","currenciesConfig","getCurrencies","getCurrency","code","getCurrencyById","currencyId","currency","getAccountCurrencies","includeCurrencyInfo","getSingleAccountCurrency","getMultipleCurrenctLastExchanges","currencies","issueCurrency","initialSupply","maxSupply","minCurrencyAmount","activHeight","reserveSupply","minReservePerUnitTQT","issuanceHeight","canDeleteCurrency","deleteCurrency","searchCurrencies","transferCurrency","publishExchangeOffer","limits","supply","expirationHeight","buyRateTQT","buyRate","sellRateTQT","sellRate","totalBuyLimit","totalBuy","totalSellLimit","totalSell","initialBuySupply","initialBuy","initialSellSupply","initialSell","getAllExchanges","currencyReserveClaim","currencyReserveIncrease","amountPerUnit","amountPerUnitTQT","buyCurrency","rateTQT","sellCurrency","getAvailableToBuy","getAvailableToSell","getBuyOffers","availableOnly","sortByRate","getSellOffers","getCurrencyAccounts","getCurrencyFounders","getCurrencyTransfers","getExchanges","getDeskExchanges","getAccountExchangeRequests","getExpectedCurrencyTransfers","getExpectedExchangeRequests","getExpectedSellOffers","openIssueCurrencyModal","openDeleteCurrencyModal","ticker","openPublishExchangeOfferModal","openPublishExchangeBuyOfferModal","openPublishExchangeSellOfferModal","openCancelExchangeOfferModal","typeOnly","openCurrencyReserveClaimModal","openCurrencyReserveIncreaseModal","openBuyCurrencyModal","openSellCurrencyModal","openSearchCurrencyModal","openTransferCurrencyModal","openSendCurrencyModal","openCurrencyDetailsModal","openTradeDesk","trade_tag","currentSupply","reloadCurrencies","currencyModelFilter","dtOptionsCurrencies","accountCurrencies","dtColumnsCurrencies","trade","transfer","exchange","dtInstanceCallbackCurrencies","exchanges","issueCurrencySteps","deleteCurrencySteps","searchCurrenciesSteps","transferCurrencySteps","sendCurrencySteps","publishExchangeOfferSteps","cancelExchangeOfferSteps","publishExchangeBuyOfferSteps","publishExchangeSellOfferSteps","currencyReserveClaimSteps","currencyReserveIncreaseSteps","buyCurrencySteps","sellCurrencySteps","deleteCurrencyForm","searchCurrencyForm","transferCurrencyForm","sendCurrencyForm","publishExchangeOfferForm","publishExchangeBuyOfferForm","publishExchangeSellOfferForm","cancelExchangeOfferForm","currencyReserveClaimForm","currencyReserveIncreaseForm","buyCurrencyForm","sellCurrencyForm","initCurrencyDetails","currencyDetails","dtMyExchangesOptions","myexchanges","dtMyExchangesColumns","dtMyExchangesInstanceCallback","reloadMyExchanges","dtMyTransfersOptions","dtMyTransfersColumns","dtMyTransfersInstanceCallback","reloadMyTransfers","dtMyBuyOffersOptions","buyoffers","offers","dtMyBuyOffersColumns","dtMySellOffersOptions","dtMySellOffersColumns","dtMyBuyOffersInstanceCallback","dtInstanceBuyOffer","reloadMyBuyOffers","dtMySellOffersInstanceCallback","dtInstanceSellOffer","reloadMySellOffers","sumArray","sum","issueCurrencyForm2","currencyTypes","reservable","currentHeight","validateAndMoveNextStep","minAmount","issueCUrrencyPromise","deleteCurrencyPromise","canDelete","currencyForm","transferCurrencyPromise","checkControlEnabled","accountControl","hasControl","controlDetails","days","increment","decrement","max","min","sellLimit","buyLimit","publishExchangeOfferPromise","currencyReserveClaimPromse","currencyReserveIncreasePromise","rate","buyCurrencyPromise","sellCurrencyPromise","hasBuyOffers","bidLength","hasSellOffers","askLength","unconfirmedUnits","currencyOrdersPromise","currencyDetailsPromise","currencyDetailsResponse","cancelExchangeOffer","cancelExchangeOfferPromise","accountEndPoint","accountConfig","getAccountTransaction","subtype","getAccountUnconfirmedTransactions","includeAssets","includeCurrencies","includeEffectiveBalance","includeLessors","getAccountLessors","includeCurrentHeight","createPhasedTransaction","recipientPublicKey","messageToEncryptIsText","compressMessageToEncrypt","encryptedMessageData","encryptedMessageNonce","encryptedMessageIsPrunable","setAccountInfo","searchAccounts","setBalanceLeasing","period","blockGeneration","mode","command","aliasPrefix","getVoterPhasedTransactions","approveTransactions","accountPublicKey","transactionFullHash","revealedSecret","revealedSecretIsText","getPhasingOnlyControl","setAccountControl","controlQuorum","controlWhitelisted","controlVotingModel","removeAccountControl","setPhasingOnlyControl","controlMinBalance","controlMinBalanceModel","controlHolding","controlMaxFees","controlMinDuration","controlMaxDuration","getAccountProperties","setter","setAccountProperty","deleteAccountProperty","getAccountLedger","startFundingMonitor","threshold","interval","holding","holdingType","adminPassword","stopFundingMonitor","getActivationHeights","names","getFundingMonitors","includeMonitoredAccounts","welcomeFaucetCall","email","publickey","EscrowService","SubscriptionService","openSendTokenModal","openSearchAccountModal","openSetAccountModal","openTransactionTypeModal","openBalanceLeasingModal","openBlockGenerationModal","openStartFundingMonitorModal","openWelcomeFaucetModal","openSetAccountPropertyModal","openDeleteAccountPropertyModal","stopped","getAssetsXmcValue","getCurrenciesXmcValue","balanceTQT","unconfirmedBalanceTQT","forgedBalanceTQT","effectiveBalance","multisig","controlDetected","multisigModel","maxFees","WhitelistAccountRS","whitelistedRS","leasesDetected","currentLesseeRS","getChart","holdingData","accountAssetXmcValue","accountCurrencyXmcValue","graphData","currentData","accountHoldingData","responsive","width","showLegend","noData","tooltip","valueFormatter","assetsInfos","assetsIds","currentAsset","currenciesInfos","currencyIds","currentCurrency","approvals","escrows","subscriptions","getBadges","transactions","getAccountEscrowTransactions","getAccountSubscriptions","transactionConfFilter","transactionTypeFilter","transactionIconSubTypeFilter","dtUnconfirmedOptions","unconfirmedTransactions","dtUnconfirmedColumns","reloadUnconfirmedTransactions","dtInstanceUnconfirmedTransactions","dtInstanceUnconfirmedTransactionsCallback","isEnabledFilter","isMessageFilter","hasMessageFilter","txDirectionFilter","filter_type","filter_subtype","filter_phasedOnly","filter_nonPhasedOnly","filter_withMessage","filter_includePhasingResult","filter_numberOfConfirmations","includeFinished","filterAsset","reloadTransactions","filterPayment","filterCurrency","filterNone","filterAccount","filterMessages","filterAlias","filterShuffles","filterEscrow","filterSubscription","filterAT","filterVoting","filterMultiSig","dtOptionsTransactions","dtColumnsTransactions","fullHash","dtInstanceTransactions","dtInstanceTransactionsCallback","amountTKNFilter","dtAccountLessorsOptions","accountLeases","lessors","dtAccountLessorsColumns","currentHeightFrom","diff","toFixed","range","reloadLessors","dtInstanceLessors","dtInstanceLessorsCallback","sendTokenSteps","setAccountInfoSteps","searchAccountSteps","setControlAccountSteps","welcomeFaucetSteps","setAccountPropertiesForm","deleteAccountPropertiesForm","sendTokenForm","welcomeFaucetForm","blockheight","initStep","leaseForm","validForm","hasPublicKeyAdded","hasMessageAdded","createAndSignTransaction","transactionOptions","setBalanceLeasingPromise","getAndVerifyAccount","pubkey","hasSecretAdded","displayNotificationAlert","generationStatus","runBlockGeneration","blockGenerationForm","foundAndStopped","dtMyPropertiesOptions","properties","dtMyPropertiesColumns","reloadMyProperties","dtInstanceMyProperties","dtInstanceMyPropertiesCallback","dtForeignPropertiesOptions","dtForeignPropertiesColumns","reloadForeignProperties","dtInstanceForeignProperties","dtInstanceForeignPropertiesCallback","setAccountPropertyForm","setAccount","createSetAccountPropertyTransaction","setAccountPropertyPromise","setAccountPromise","createDeleteAccountPropertyTransaction","local","deletePropertyPromise","holdingTypeFilter","ledgerHoldingFilter","ledgerTXTypesFilter","dtLedgerOptions","entries","dtLedgerColumns","reloadLedgerEntries","dtInstanceLedgerEntries","dtInstanceLedgerCallback","dFundingOptions","monitors","dtColumnsFunding","_","reloadFunding","dtInstanceFunding","dtInstanceFundingCallback","startFundingMonitorForm","holdingOptions","label","fundingMonitorActions","fundingMonitorForm","sendTokenPromise","createSetAccountInfoTransaction","searchAccountForm","openClaimSecretModal","openSendReferencedModal","openSendDeferredModal","openSendSecretModal","openApproveControlModal","approve","openRemoveControlModal","openSetAccountControlModal","openSetAssetControlModal","openSetCurrencyControlModal","dtOptionsControl","dtColumnsControl","reloadControl","dtInstanceControl","dtInstanceCallbackControl","controlApproveSteps","removeAccountControlSteps","setAccountControlSteps","controlAssetSteps","controlCurrencySteps","sendDeferredSteps","sendReferencedSteps","sendSecretSteps","claimSecretSteps","removeAccountControlForm","setAccountControlForm","fullhash","sender","setApproveTransaction","confirmControlledTransaction","controlApprovePromise","sendDeferredForm","deferredHeight","sendDeferedPromise","cuurHeight","defOffset","deferredBlocks","phasingHolding","phasingLinkedFullHash","phasingHashedSecret","phasingHashedSecretAlgorithm","sendReferencedForm","sendReferencePromise","sendSecretForm","sendSecretPromise","secretHash","claimSeceretForm","secretText","claimSecretPromise","totalAccounts","approveAccounts","totalValid","addNewAccount","foo","setAccountControlPromise","jsonControl","removeAccountControlPromise","disableElement","isElementDisabled","activationHeight","heightPromise","activationHeightPromise","MAX_VALUE","finally","FaucetService","makeWelcomFaucetCall","closeForm","pollEndPoint","RestangularProvider","pollConfig","setRestangularFields","fillOptionsToJson","pollJson","pollOptions","getOptionName","getPolls","getAccountPolls","getPoll","poll","getPollData","pollId","searchPolls","castVote","optionNames","createPoll","minNumberOfOptions","maxNumberOfOptions","minRangeValue","maxRangeValue","finishHeight","getPollVotes","includeWeights","PollService","openCreatePollModal","openPollDetailsModal","windowClass","openPollVotesModal","openPollData","openCastVoteModal","openSearchPollModal","$interval","votingModelFilter","replaceQuotesFilter","votingModelLabelFilter","pollDaysFilter","activePolls","reloadPolls","allPolls","polls","finished","createPollSteps","castVoteSteps","searchPollSteps","createPollForm","castVoteForm","searchPollForm","loadDetails","votes","sumResults","results","divisor","buildPollDataArray","finalResults","pollResult","weight","percentage","resultArray","resultObject","loadPollResults","pollDetailsPromise","pollDataPromise","pollDetailsResponse","pollDataResponse","pollName","pollDescription","pollResults","pollLabels","pollData","pollResultTableDate","x2Axis","createPollForm2","addNewOption","votingOptions","minbalance","createPollPromise","getOptionNames","votedOptions","totalVoted","getOptionNameFormat","votedOptionsLength","castVotePromise","messagesEndPoint","messagesConfig","getMessages","withMessage","sendMessage","prunable","broadcastMessage","prunableAttachmentJSON","MessageService","hasMessageDirectionFilter","filterMessage","reloadMessages","dtOptionsMessages","dtColumnsMessages","bolPrunable","has","reply_tag","replyAddress","openSendMessageModal","openReadMessageModal","dtInstanceMessages","dtInstanceMessagesCallback","sendMessageSteps","readMessageSteps","sendMessageForm","readMessageForm","isPrunable","sendMessagePromise","readMessage","encrpytedMessageData","encrpytedMessageNonce","readMessagePromise","aliasesEndPoint","aliasesConfig","getAccountAliases","setAlias","deleteAlias","sellAlias","cancelAlias","buyAlias","getAliasesOpenOffers","getAliasesPrivateOffers","getAliasesPublicOffers","AliasService","openSetAliasModal","openSellAliasModal","openBuyAliasModal","openSearchAliasModal","openDeleteAliasModal","openTransferAliasModal","openCancelAliasModal","openEditAliasModal","substring","lastIndexOf","edit","sell","reloadAliases","recipientId","sort_price","setAliasSteps","sellAliasSteps","buyAliasSteps","deleteAliasSteps","searchAliasesSteps","transferAliasSteps","editAliasSteps","cancelAliasSteps","buyAliasForm","deleteAliasForm","searchAliasForm","editAliasForm","disableFields","formFinalAlias","aliasUri","aliasFinal","uriold","prefixes","editAlias","editAliasPromise","cancelAliasForm","cancelAliasPromise","placeholder","setAliasPromise","deleteAliasPromise","sellAliasForm","sellAliasPromise","buyAliasPromise","transferAliasForm","TransferAlias","transferAliasPromise","searchApp","searchEndPoint","searchAccountString","searchPeerUrl","searchPeerEndPoint","searchConfig","toolTip","searchBlocks","includeTransactions","searchTransactionById","searchBlockById","block","searchTransactions","includePhasingResult","SearchService","validateIPaddress","ipaddress","errorHandler","searchValue","startsWith","blockHeightSearch","blockIdSearch","transactionSearch","resultSize","search","buildChartDataArray","buildChartSystemLoadAverage","loadAvg","loadPct","showValues","valueFormat","d3","duration","ticks","yAxis","nodes","chartData1","history_SystemLoadAverage","chartData2","history_freeMemory","chartData3","history_requestProcessingTime","chartData4","history_numberOfActivePeers","isEmptyFilter","qrCode","stripRestangular","convertCamelToRegular","text","charAt","generateSearchLink","blockTransactionsFilter","dtInstanceCallbackTransactions","showBlockDetails","blockDetails","openDetailsModal","generateNumberOfTxsHtml","getBlocksTxs","peerUrl","chainViewerConfig","getBlocks","getTransactions","page","getUnconfirmedTransactions","ChainViewerService","blocks","reloadBlocks","getTickMarkUiModel","toolTipText","pageNum","peers","numCPU","availableProcessors","SystemLoadAverage","tmpArr","dd","superNodeEnable","apiServerEnable","reloadPeers","macapUrl","macapEndPoint","macapViewerConfig","getMaCap","MaCapViewerService","upDownFilter","macap","reloadMaCap","newsUrl","newsEndPoint","newsViewerConfig","getNews","NewsViewerService","newsTypeFilter","newsSectionFilter","newsPriorityFilter","channel","news","openReadNewsModal","reloadNews","readNewsSteps","readNewsForm","readNews","getLatestNews","news_content","serviceMonConfig","getPeerStatus","website","image","Image","src","onload","onerror","ServiceMonService","ServicePeerEndpoints","ServiceMacapEndpoints","ServiceWebsiteEndpoints","ServiceTestnetEndpoints","ServiceApiEndpoints","isOnlineFilter","macapEndpoints","websiteEndpoints","testnetEndpoints","apiEndpoints","IP_STATUS","getAllIpStatus","ipArray","forEach","getStatus","check","ATWorkbenchConfig","ATWorkbenchService","extensionsEndPoint","toolsConfig","hashAlgorithm","secretIsText","getChainStats","openServiceFeesModal","openGenerateTokenModal","openValidateTokenModal","openTransactionBroadcastModal","openTransactionParseModal","openCalculateHashModal","openUserGuideModal","openChainStatisticsModal","generateTokenForm","buttonColor","output","ToolsService","validateTokenForm","validateToken","valid","restangularized","fromServer","parentResource","restangularCollection","route","reqParams","verify","parseTransactionForm","showTransaction","requestProcessingTime","showHash","calculateHashForm","getChainStatsPromise","numberOfAccountLeases","numberOfActiveAccountLeases","numberOfActivePeers","numberOfAliases","numberOfAskOrders","numberOfAsks","numberOfAssets","numberOfBidOrders","numberOfBids","numberOfCurrencies","numberOfCurrencyTransfers","numberOfExchangeRequests","numberOfExchanges","numberOfOffers","numberOfOrders","numberOfPeers","numberOfPhasingOnlyAccounts","numberOfPolls","numberOfTransactions","numberOfVotes","array","maxLength","numeralString","decimal","fraction","splitString","dashboardConfig","getAccountAssetsAndBalances","getAccountBlockChainTransactions","DashboardService","informativeCountFilter","arrayCountFilter","balanceStylerFilter","reloadDashboard","getAccountPollsCount","getAccountAliasesCount","getAccountMessagesCount","closeAllDashboards","pollsCount","aliasesCount","messagesCount","currenciesCount","assetsCount","assetBalances","accountBalance","crowdfundingEndPoint","crowdfundingConfig","createCampaign","desc","getAllCampaigns","includeAmounts","getCampaignFounders","setCampaignReserve","getCampaignClaim","CrowdfundingService","openCreateCampaignModal","openReserveCampaignModal","openFoundersCampaignModal","createCampaignSteps","reserveCampaignSteps","dtAllCampaignsOptions","dtAllCampaignsColumns","creationHeight","diffHeight","currentReservePerUnitTQT","t_amount","reserve_tag","dtAllCampaignsInstanceCallback","reloadAllCampaigns","dtMyCampaignsOptions","dtMyCampaignsColumns","dtMyCampaignsInstanceCallback","reloadMyCampaigns","createCampaignForm1","createCampaignForm2","$watchGroup","totalAmount","hmax","minReservePerUnitTotal","createCampaignPromise","reserveCampaignForm","goal","raised","amountUnit","amountTotal","reserveCampaign","reserveCampaignPromise","dtFoundersCampaignsOptions","founders","dtFoundersCampaignsColumns","dtFoundersInstanceCallback","reloadFoundersCampaigns","subscriptionEndPoint","subscriptionConfig","createSubscription","frequency","subscriptionCancel","subscription","getSubscription","getSubscriptionsToAccount","openCreateSubscriptionModal","openCancelSubscriptionModal","id","createSubscriptionSteps","cancelSubscriptionSteps","dtMySubscriptionsOptions","dtMySubscriptionsColumns","dtMySubscriptionsInstanceCallback","reloadMySubscriptions","setCreateSubscriptionPromise","cancelSubscription","setCancelSubscriptionPromise","cancelSubscriptionAlert","escrowEndPoint","escrowConfig","createEscrow","escrowDeadline","deadlineAction","requiredSigners","signers","getEscrowTransaction","escrow","escrowSign","decision","openCreateEscrowModal","openSignEscrowModal","escrowId","openStatusEscrowModal","createEscrowSteps","signEscrowSteps","dtMyEscrowOptions","dtMyEscrowColumns","signTag","signColor","idRS","signEscrow","dtMyEscrowInstanceCallback","reloadMyEscrow","deadlineActionOptions","escrowForm","setCreateEscrowPromise","createEscrowPromise","dtStatusEscrowOptions","dtStatusEscrowColumns","dtStatusEscrowInstanceCallback","reloadStatusEscrow","ID","decisionOptions","setSignEscrowPromise","shufflingEndPoint","shufflingsConfig","ShufflingService","getAllShufflings","includeHoldingInfo","getAccountShufflings","createShuffling","participantCount","registrationPeriod","registerShuffle","shufflingFullHash","isLocalHostOrTestnet","getShufflingParticipants","shufflingId","shuffling","getShuffling","getShufflers","includeParticipantState","getShuffleAndStopIfExpired","shuffleId","stage","stopShuffler","getHoldingShufflings","getAssignedShufflings","shufflingVerify","shufflingStateHash","recipientSecretPhrase","startShuffler","cancelShuffle","cancelAccountId","cancellingAccount","openCreateShuffleModal","openRegisterShuffleModal","openStartShuffleModal","openStopShuffleModal","openCancelShuffleModal","cancellingAccountId","openShufflingParticipantsModal","openShufflingDetailsModal","clearAllShufflers","clearShufflerPromise","existingShufflers","shufflings","current","shufflingStageFilter","reloadShufflings","activeShuffles","allShuffles","holdingInfo","holdingTYpe","canRegisterDisabled","but_col","issuerRS","shufflersPromise","accountShufflings","shufflersState","shufflers","canStartDisabled","canStopDisabled","createShuffleSteps","cancelShuffleSteps","registerShuffleSteps","startShuffleSteps","stopShuffleSteps","createShuffleForm","registerShuffleForm","startShuffleForm","stopShuffleForm","cancelShuffleForm","participants","getShuffleDetails","shuffleDetailsPromise","shuffle","isLocalhostOrTestnet","createShuffle","shuffleJson","createShufflePromise","registerShufflePromise","showStart","startShuffle","recipientPublickey","stopShufflePromise","showStop","stopShuffle","resType","stoppedShuffler","assignee","cancelShufflePromise","ATEndPoint","ATConfig","createATProgram","creationBytes","dpages","cspages","uspages","minActivationAmountTQT","getAT","at","getATDetails","getATIds","getAllATs","getATLong","hexString","getAccountATs","openCreateATModal","openATDetailsModal","atId","ATService","txIsValidFilter","ats","reloadAllATs","initATDetails","atDetails","createATSteps","createATForm","createATForm2","createAT","minActivationAmount","createATPromise","otherwise","StateAuthService","getPhasingDetails","$confirmModalDefaults","AssignedDate","getState","peerState"],"mappings":"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TA,EACF,eACW,qBAATA,EACF,mBACW,4BAATA,EACF,0BACW,iCAATA,EACF,yBACW,8BAATA,EACF,sBACW,iCAATA,EACF,yBACW,8BAATA,EACF,sBACW,2BAATA,EACF,mBACW,mBAATA,EACF,iBACW,gBAATA,EACF,cACW,mBAATA,EACF,iBACW,iBAATA,EACF,eACW,8CAATA,EACF,4BACW,iCAATA,EACF,kBACW,sBAATA,EACF,oBACW,0BAATA,EACF,wBACW,sBAATA,EACF,oBACW,0BAATA,EACF,eACW,2BAATA,EACF,gBACW,sBAATA,EACF,oBACW,qBAATA,EACF,mBACW,2BAATA,EACF,yBACW,4BAATA,EACF,0BACW,oCAATA,EACF,iBACW,2BAATA,EACF,yBACW,8BAATA,EACF,4BACW,sBAATA,EACF,oBACW,+BAATA,EACF,6BACW,2BAATA,EACF,yBACW,yBAATA,EACF,uBACW,2BAATA,EACF,yBACW,2BAATA,EACF,yBACW,wBAATA,EACF,4BACW,yBAATA,EACF,uBACW,2BAATA,EACF,yBACW,oBAATA,EACF,kBACW,gBAATA,EACF,iBACW,kBAATA,EACA,gBACS,mCAATA,EACF,cACW,eAATA,EACF,aAEE,sBAKnBpJ,QAAQC,OAAO,cAAcyH,OAAO,UAAW,OAAQ,SAAUC,GAC7D,MAAO,UAASE,GACZ,MAAOF,GAAKkC,YAAYhC,OAoBhC7H,QAAQC,OAAO,cAAckG,UAAU,WAAY,WAyC/C,OACIS,SAAU,KACVR,OACI0D,OAAQ,IACRC,UAAW,IACXC,SAAU,KAGdC,YA/Cc,SAAU,aAAc,cAAe,KAAM,sBAC3D,SAAUC,EAAQC,EAAYC,EAAaC,EAAIC,GAe3C,QAASC,GAAYC,GACjB,GAAIC,GAAkBL,EAAYM,cAC9BC,EAAkBP,EAAYG,aAElCF,GAAGvH,KAAK2H,EAAiBE,IAAkBpF,KAAK,SAAUC,GACtD,GAAIoF,GAAepF,EAAQ,GACvBqF,EAAerF,EAAQ,EAE3B0E,GAAOY,UAAcF,EAAaG,SAASC,KAAO,EAClDd,EAAOe,YAAcJ,EAAa,GAAGK,WAAa,EAElDhB,EA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","file":"bundle.min.js","sourcesContent":["/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nvar baseClientApp = angular.module('baseClient',\n    ['ngStorage', 'restangular', 'datatables', 'datatables.bootstrap', 'angularMoment', 'ngSanitize', 'ui.mask',\n        'validation', 'validation.rule', 'cc.autorefresh', 'checklist-model', 'chart.js', 'nvd3',\n        'pascalprecht.translate', 'cgBusy', 'truncate','angular-confirm',]);\n\nangular.module('baseClient').constant('baseConfig', {\n    'SESSION_STORAGE_NAMESPACE': 'com.client',\n    'FALLBACK_HOST_URL': 'http://185.103.75.217:23457/',\n    'AUTO_PAGE_REFRESH_INTERVAL': 60000,\n    'TOKEN_QUANTS': 100000000,\n    'TX_DEADLINE': 60,\n    'apiEndPoint': 'api',\n    'SESSION_CURRENT_BLOCK': 'current_block',\n    'SESSION_APP_OPTIONS': 'app_options',\n    'SESSION_PEER_ENDPOINTS': 'peerEndpoints',\n    'SESSION_MAX_RETRIES': '2',\n    'SESSION_CURRENT_TRY': '0',\n    'EPOCH': 1484046000,\n});\n\nangular.module('baseClient')\n       .config(['$localStorageProvider', 'baseConfig', function ($localStorageProvider, baseConfig) {\n           $localStorageProvider.setKeyPrefix(baseConfig.SESSION_STORAGE_NAMESPACE);\n       }]);\n\nangular.module('baseClient').constant('peerConfig', {\n    'apiUrl': 'http://185.103.75.217:8888',\n    'peerEndPoint': 'api/nodes',\n    'SESSION_PEER_URL_KEY': 'peerKey'\n});\n\nangular.module('baseClient').constant('localhostConfig', {\n    'apiUrl': 'http://localhost:23457',\n    'endPoint': 'api',\n    'SESSION_PEER_URL_KEY': 'peerKey'\n});\n\nangular.module('baseClient').constant('peerEndpoints', [\n    'http://185.35.137.7:8888/api/nodes',\n    'http://185.35.139.102:8888/api/nodes',\n    'http://185.35.139.103:8888/api/nodes',\n    'http://185.35.139.104:8888/api/nodes',\n    'http://185.35.139.105:8888/api/nodes',\n    'http://46.244.20.41:8888/api/nodes',\n    'http://185.35.139.101:8888/api/nodes',\n    'http://208.95.1.177:8888/api/nodes',\n    'http://199.127.137.169:8888/api/nodes',\n    'http://185.103.75.217:8888/api/nodes'\n]);\n\nangular.module('baseClient').constant('peerEndpointsMap', {\n    DEFAULT: ['http://185.35.137.7:8888/api/nodes',\n        'http://185.35.139.102:8888/api/nodes',\n        'http://185.35.139.103:8888/api/nodes',\n        'http://185.35.139.104:8888/api/nodes',\n        'http://185.35.139.105:8888/api/nodes',\n        'http://46.244.20.41:8888/api/nodes',\n        'http://185.35.139.101:8888/api/nodes',\n        'http://208.95.1.177:8888/api/nodes',\n        'http://199.127.137.169:8888/api/nodes',\n        'http://185.103.75.217:8888/api/nodes'],\n    DEVTESTNET: [\n        'http://185.35.138.132:9999/api/nodes',\n    ],\n    TESTNET: [\n        'http://185.35.138.140:8888/api/v1/nodes',\n    ]\n\n});\n\nangular.module('baseClient').constant('nodeEndpoints', [\n    'http://185.103.75.217:23457/',\n    'http://185.35.137.7:23457/',\n    'http://185.35.139.102:23457/',\n    'http://185.35.139.103:23457/',\n    'http://185.35.139.104:23457/',\n    'http://185.35.139.105:23457/',\n    'http://46.244.20.41:23457/',\n    'http://185.35.139.101:23457/',\n    'http://208.95.1.177:23457/',\n    'http://199.127.137.169:23457/'\n]);\n\nangular.module('baseClient').constant('chainEndpoints', [\n    'http://185.103.75.217:23457/',\n    'http://185.35.137.7:23457/',\n    'http://185.35.139.102:23457/',\n    'http://185.35.139.103:23457/',\n    'http://185.35.139.104:23457/',\n    'http://185.35.139.105:23457/',\n    'http://46.244.20.41:23457/',\n    'http://185.35.139.101:23457/',\n    'http://208.95.1.177:23457/',\n    'http://199.127.137.169:23457/'\n]);\n\nangular.module('baseClient').constant('loginConfig', {\n    SESSION_ACCOUNT_DETAILS_KEY: 'account_details',\n    SESSION_ACCOUNT_PRIVATE_KEY: 'account_private_key'\n});\n\nangular.module('baseClient').constant('controlConfig', {\n    SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY: 'account_control_hascontrol',\n    SESSION_ACCOUNT_CONTROL_JSONCONTROL_KEY: 'account_control_jsoncontrol'\n});\n\nangular.module('baseClient')\n       .factory('PeerRestangular', ['Restangular', 'peerConfig', function (Restangular, peerConfig) {\n           return Restangular.withConfig(function (RestangularConfigurer) {\n               RestangularConfigurer.setBaseUrl(peerConfig.apiUrl);\n           });\n       }]);\n\nangular.module('baseClient')\n       .service('PeerService',\n           ['PeerRestangular', 'peerConfig', 'SessionStorageService', 'baseConfig', 'peerEndpoints', '$injector',\n               'peerEndpointsMap',\n               function (PeerRestangular, peerConfig, SessionStorageService, baseConfig, peerEndpoints, $injector,\n                         peerEndpointsMap) {\n\n                   var PeerService = this;\n\n                   this.getPeers = function () {\n                       PeerRestangular.setBaseUrl(PeerService.getPeerEndPoints()[0]);\n                       return PeerRestangular.all('').customGET('', {});\n                   };\n\n                   this.getStats = function () {\n                       PeerRestangular.setBaseUrl(PeerService.getPeerEndPoints()[0]);\n                       return PeerRestangular.all('getStats').customGET('', {});\n                   };\n\n                   this.searchIp = function (ip) {\n                       PeerRestangular.setBaseUrl(PeerService.getPeerEndPoints()[0]);\n                       var params = {\n                           'ip': ip\n                       };\n                       return PeerRestangular.all('').customGET('', params);\n                   };\n\n                   this.getPeerEndPoints = function (option) {\n                       var OptionsService = $injector.get('OptionsService');\n                       option = option || OptionsService.getOption('CONNECTION_MODE');\n                       return peerEndpointsMap[option] || peerEndpointsMap['DEFAULT'];\n                   };\n\n\n               }]);\n\nangular.module('baseClient')\n       .service('PeerTestService', ['PeerRestangular', 'peerConfig', function (PeerRestangular, peerConfig) {\n\n           var endPoints = ['http://localhost:1234', 'http://localhost:2345', peerConfig.peerEndPoint];\n           this.getPeers = function () {\n               return PeerRestangular.all(endPoints[0]).customGET('', {});\n           };\n       }]);\n\nangular.module('baseClient')\n       .service('CommonsService', ['SessionStorageService', 'loginConfig', 'Restangular', 'baseConfig', 'NodeService',\n           'OptionsService', '$sanitize',\n           function (SessionStorageService, loginConfig, Restangular, baseConfig, NodeService, OptionsService,\n                     $sanitize) {\n\n               var CommonsService = this;\n\n               this.convertToArray = function (object) {\n                   if (!object) {\n                       return [];\n                   }\n                   if (!Array.isArray(object)) {\n                       object = [object];\n                   }\n                   return object;\n               };\n\n               this.getAccountDetailsFromSession = function (keyName) {\n                   var accountDetails = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_DETAILS_KEY);\n                   if (keyName && accountDetails) {\n                       return accountDetails[keyName];\n                   }\n                   return accountDetails;\n               };\n\n               this.broadcastTransaction = function (transactionBytes) {\n\n                   // Restangular.setBaseUrl(baseConfig.FALLBACK_HOST_URL);\n\n                   // removed injection from -> OptionsService due to circular references\n                   // options-app.js / line 32\n\n                   Restangular.setBaseUrl(\n                       NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                           OptionsService.getOption('RANDOMIZE_NODES'))\n                   );\n\n                   var params = {\n                       'requestType': 'broadcastTransaction',\n                       'transactionBytes': transactionBytes\n                   };\n                   return Restangular.all(baseConfig.apiEndPoint).customPOST('', '', params, '');\n               };\n\n               this.iterateAndExecuteFunctionOnJson = function (object, callback) {\n                   return iterate(object, callback);\n               };\n\n               this.sanitizeJson = function (object) {\n                   return CommonsService.iterateAndExecuteFunctionOnJson(object, dontSanitizeNumber)\n               };\n\n               function dontSanitizeNumber(object) {\n                   if (isNaN(object)) {\n                       return $sanitize(object);\n                   }\n                   return object;\n               }\n\n               function iterate(obj, callback) {\n                   for (var property in obj) {\n                       if (obj.hasOwnProperty(property)) {\n                           if (typeof obj[property] == \"object\") {\n                               obj[property] = iterate(obj[property], callback);\n                           }\n                           else {\n                               obj[property] = callback(obj[property]);\n                           }\n                       }\n                   }\n                   return obj\n               }\n\n\n           }]);\n\nangular.module('baseClient').service('LocalHostService',\n    ['Restangular', 'localhostConfig', function (Restangular, localhostConfig) {\n\n        this.getPeerState = function (url) {\n            var params = {\n                'requestType': 'getPeerState'\n            };\n            if (!url) {\n                url = localhostConfig.apiUrl;\n            }\n            Restangular.setBaseUrl(url);\n            return Restangular.all(localhostConfig.endPoint).customGET('', params);\n        };\n\n        this.isValidUrl = function (url) {\n            return this.getPeerState(url).then(function (success) {\n                return true;\n            }, function (error) {\n                return false;\n            });\n        };\n\n    }]);\n\nangular.module('baseClient').service('SessionStorageService', ['$sessionStorage', function ($sessionStorage) {\n\n\n    this.saveToSession = function (key, value) {\n        $sessionStorage[key] = value;\n    };\n\n    this.getFromSession = function (key) {\n        return $sessionStorage[key];\n    };\n\n    this.deleteFromSession = function (key) {\n        try {\n            delete $sessionStorage[key];\n        } catch (e) {\n            $sessionStorage[key] = undefined;\n        }\n    };\n\n    this.resetSession = function () {\n        $sessionStorage.$reset();\n    };\n}]);\n\nangular.module('baseClient').directive('stopccp', function () {\n    return {\n        scope: {\n            alert: '@',\n        },\n        link: function (scope, element) {\n            element.on('cut copy paste', function (event) {\n                event.preventDefault();\n                if (scope.alert === 'true') {\n                    alert('Copy paste is disabled for security purpose');\n                }\n\n            });\n        }\n    };\n});\n\nangular.module('baseClient').directive('dynamic', ['$compile', function ($compile) {\n    return {\n        restrict: 'A',\n        replace: true,\n        link: function (scope, ele, attrs) {\n            scope.$watch(attrs.dynamic, function (html) {\n                ele.html(html);\n                $compile(ele.contents())(scope);\n            });\n        }\n    };\n}]);\n\nangular.module('baseClient').directive('focusInput', ['$timeout', function ($timeout) {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n            $timeout(function () {\n                element[0].focus();\n            });\n\n        }\n    };\n}]);\n\nangular.module('baseClient').value('cgBusyDefaults', {\n    message: 'Connecting...',\n    backdrop: true,\n    delay: 0, // 250,\n    minDuration: 333,\n});\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('baseClient').filter('timestamp', ['$sce', 'moment', 'baseConfig', function ($sce, moment, baseConfig) {\n    return function (val) {\n        try {\n            var actual = val + baseConfig.EPOCH;\n            var momentObj = moment.unix(actual);\n            return momentObj.format('YYYY-MM-DDTHH:mm:ss');\n        } catch (e) {\n            return val;\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('amountTQT', ['$sce', 'baseConfig', function ($sce, baseConfig) {\n    return function (val) {\n        if (!val) {\n            val = 0;\n        }\n        var amount = val / baseConfig.TOKEN_QUANTS;\n        return amount.toLocaleString('en-US', {minimumFractionDigits: 2});\n    };\n}]);\n\nangular.module('baseClient').filter('amountToDecimal', ['$sce', 'baseConfig', function ($sce, baseConfig) {\n    return function (val, numOfDecimals) {\n        if (!val) {\n            val = 0;\n        }\n        val = val * Math.pow(10, numOfDecimals);\n        return val.toLocaleString('en-US', {minimumFractionDigits: numOfDecimals});\n    };\n}]);\n\nangular.module('baseClient').filter('numericalString', ['$sce', 'baseConfig', function ($sce, baseConfig) {\n    return function (val) {\n        if (!val) {\n            val = 0;\n        }\n        return val.toLocaleString('en-US', {minimumFractionDigits: 2});\n    };\n}]);\n\nangular.module('baseClient').filter('amountToQuant', ['$sce', 'baseConfig', function ($sce, baseConfig) {\n    return function (val) {\n        if (!val) {\n            val = 0;\n        }\n\n        var amount = parseInt(parseFloat(val) * baseConfig.TOKEN_QUANTS);\n\n        return amount;\n    };\n}]);\n\nangular.module('baseClient').filter('quantToAmount', ['$sce', 'baseConfig', function ($sce, baseConfig) {\n    return function (val) {\n        if (!val) {\n            val = 0;\n        }\n        var amount = parseFloat(val) / baseConfig.TOKEN_QUANTS;\n        return amount;\n    };\n}]);\n\nangular.module('baseClient').filter('fiatUSD', ['$sce', 'baseConfig', function ($sce, baseConfig) {\n    return function (val) {\n        if (!val) {\n            val = 0;\n        }\n        val = (val ) * 0.0000;\n        return val;\n    };\n}]);\n\nangular.module('baseClient').filter('amountTKN', ['$sce', function ($sce) {\n    return function (val) {\n        if (!val) {\n            val = 0;\n        }\n        var amount = parseFloat(val);\n        return amount.toLocaleString('en-US', {minimumFractionDigits: 2});\n    };\n}]);\n\nangular.module('baseClient').filter('supply', ['$sce', function ($sce) {\n    return function (val, numOfDecimals) {\n        var actualPow = numOfDecimals;\n        var divider = Math.pow(10, actualPow);\n        val = val / divider;\n        return val.toLocaleString('en-US', {minimumFractionDigits: 2});\n    };\n}]);\n\nangular.module('baseClient').filter('quantityToShare', ['$sce', function ($sce) {\n    return function (val, numOfDecimals) {\n        var actualPow = numOfDecimals;\n        var divider = Math.pow(10, actualPow);\n        val = parseFloat(val) / divider;\n        return val;\n    };\n}]);\n\nangular.module('baseClient').filter('shareToQuantiy', ['$sce', function ($sce) {\n    return function (val, numOfDecimals) {\n        var actualPow = numOfDecimals;\n        var multiplier = Math.pow(10, actualPow);\n        val = parseFloat(val) * multiplier;\n        return val;\n    };\n}]);\n\nangular.module('baseClient').filter('decimals', ['$sce', function ($sce) {\n    return function (val, numOfDecimals) {\n        var divider = Math.pow(10, numOfDecimals);\n        val = val / divider;\n        return val.toLocaleString('en-US', {minimumFractionDigits: 2});\n    };\n}]);\n\nangular.module('baseClient').filter('numberString', ['$sce', function ($sce) {\n    return function (val, numOfDecimals) {\n        numOfDecimals = numOfDecimals || 2;\n        return val.toLocaleString('en-US',\n            {maximumFractionDigits: numOfDecimals, minimumFractionDigits: numOfDecimals});\n    };\n}]);\n\nangular.module('baseClient').filter('transactionConf', ['$sce', function ($sce) {\n    return function (value) {\n        if (!value) {\n            value = 0;\n        }\n        if (value === 0) {\n\n            return '<span class=\"label label-default\">' + value + '</span>';\n\n        } else if (value > 0 && value < 10) {\n\n            return '<span class=\"label label-danger\">' + value + '</span>';\n\n        } else if (value >= 10 && value < 100) {\n\n            return '<span class=\"label label-warning\">' + value + '</span>';\n\n        } else if (value >= 100 && value < 720) {\n\n            return '<span class=\"label label-success\">' + value + '</span>';\n\n        } else if (value >= 720) {\n\n            return '<span class=\"label label-success\"> +720</span>';\n\n        } else {\n\n            return '<span class=\"label label-primary\">' + value + '</span>';\n\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('transactionType', ['$sce', function ($sce) {\n    return function (type, subType) {\n\n        switch (type) {\n            case 0:\n                return '<i class=\"fa fa-usd\" aria-hidden=\"true\"></i>';\n            case 1:\n                return '<i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>';\n            case 2:\n                return '<span class=\"glyphicon glyphicon-signal\" aria-hidden=\"true\"></span>';\n            case 4:\n                return '<span class=\"glyphicon glyphicon-info-sign\" aria-hidden=\"true\"></span>';\n            case 5:\n                return ' <i class=\"fa fa-random\" aria-hidden=\"true\"></i> ';\n            case 7:\n                return '<i class=\"fa fa-users\" aria-hidden=\"true\"></i>';\n\n\n\n            // needs completion\n\n\n        }\n    };\n\n}]);\n\nangular.module('baseClient').filter('transactionIconSubType', ['$sce', function ($sce) {\n    return function (type, subType) {\n\n        switch (type) {\n            case 0:\n                switch (subType) {\n                    case 0:\n                        return '<i class=\"fa fa-usd\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Ordinary Payment\"></i>';\n                    default:\n                        return subType;\n                }\n                break;\n            case 1:\n                switch (subType) {\n                    case 0:\n                        return '<i class=\"fa fa-envelope-o\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Encrypted Message\"></i>';\n                    case 1:\n                        return '<i class=\"fa fa-share-alt\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Alias Assigment\"></i>';\n                    case 2:\n                        return '<i class=\"fa fa-signal\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Poll Creation\"></i>';\n                    case 3:\n                        return '<i class=\"fa fa-signal\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Vote Casting\"></i>';\n                    case 4:\n                        return '<i class=\"fa fa-credit-card\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Hub Announcement\"></i>';\n                    case 5:\n                        return '<i class=\"fa fa-credit-card\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Account Info\"></i>';\n                    case 6:\n                        return '<i class=\"fa fa-share-alt\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Alias Sell\"></i>';\n                    case 7:\n                        return '<i class=\"fa fa-share-alt\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Alias Buy\"></i>';\n                    case 8:\n                        return '<i class=\"fa fa-share-alt\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Alias Delete\"></i>';\n                    case 9:\n                        return '<i class=\"fa fa-signal\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Phasing Vote Casting\"></i>';\n                    case 10:\n                        return '<i class=\"fa fa-credit-card\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Account Property\"></i>';\n                    case 11:\n                        return '<i class=\"fa fa-credit-card\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Account Property delete\"></i>';\n                    default:\n                        return subType;\n                }\n                break;\n            case 2:\n                switch (subType) {\n                    case 0:\n                        return '<i class=\"fa fa-bar-chart\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Asset Issuance\"></i>';\n                    case 1:\n                        return '<i class=\"fa fa-bar-chart\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Asset Transfer\"></i>';\n                    case 2:\n                        return '<i class=\"fa fa-bar-chart\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Ask Order Placement\"></i>';\n                    case 3:\n                        return '<i class=\"fa fa-bar-chart\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Bid Order Placement\"></i>';\n                    case 4:\n                        return '<i class=\"fa fa-bar-chart\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Ask Order Cancellation\"></i>';\n                    case 5:\n                        return '<i class=\"fa fa-bar-chart\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Bid Order Cancellation\"></i>';\n                    case 6:\n                        return '<i class=\"fa fa-bar-chart\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Dividend Payment\"></i>';\n                    case 7:\n                        return '<i class=\"fa fa-bar-chart\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Shares Delete\"></i>';\n                    case 8:\n                        return '<i class=\"fa fa-bar-chart\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Asset Delete\"></i>';\n                    default:\n                        return subType;\n                }\n                break;\n            case 4:\n                switch (subType) {\n                    case 0:\n                        return '<i class=\"fa fa-credit-card\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Effective Balance Lease\"></i>';\n                    case 1:\n                        return '<i class=\"fa fa-credit-card\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Account Control\"></i>';\n                    default:\n                        return subType;\n                }\n                break;\n            case 5:\n                switch (subType) {\n                    case 0:\n                        return '<i class=\"fa fa-random\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Currency Issuance\"></i>';\n                    case 1:\n                        return '<i class=\"fa fa-random\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Reserve Increase\"></i>';\n                    case 2:\n                        return '<i class=\"fa fa-random\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Resverve Claim\"></i>';\n                    case 3:\n                        return '<i class=\"fa fa-random\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Currency Transfer\"></i>';\n                    case 4:\n                        return '<i class=\"fa fa-random\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Publish Exchange Offer\"></i>';\n                    case 5:\n                        return '<i class=\"fa fa-random\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Exchange Buy\"></i>';\n                    case 6:\n                        return '<i class=\"fa fa-random\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Exchange Sell\"></i>';\n                    case 7:\n                        return '<i class=\"fa fa-random\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Currency Minting\"></i>';\n                    case 8:\n                        return '<i class=\"fa fa-random\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Currency Deletion\"></i>';\n                    default:\n                        return subType;\n                }\n                break;\n\n            case 7:\n                switch (subType) {\n                    case 0:\n                        return '<i class=\"fa fa-user-secret\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Shuffling Creation\"></i>';\n                    case 1:\n                        return '<i class=\"fa fa-user-secret\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Shuffling Register\"></i>';\n                    case 2:\n                        return '<i class=\"fa fa-user-secret\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Shuffling Processing\"></i>';\n                    case 3:\n                        return '<i class=\"fa fa-user-secret\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Shuffling Recipients\"></i>';\n                    case 4:\n                        return '<i class=\"fa fa-user-secret\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Shuffling Verification\"></i>';\n                    case 5:\n                        return '<i class=\"fa fa-user-secret\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Shuffling Cancel\"></i>';\n                    default:\n                        return subType;\n                }\n                break;\n\n            case 21:\n                switch (subType) {\n                    case 0:\n                        return '<i class=\"fa fa-handshake-o\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Escrow Creation\"></i>';\n                    case 1:\n                        return '<i class=\"fa fa-handshake-o\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Escrow Sign\"></i>';\n                    case 2:\n                        return '<i class=\"fa fa-handshake-o\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Escrow Results\"></i>';\n                    case 3:\n                        return '<i class=\"fa fa-hourglass\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Subscription Creation\"></i>';\n                    case 4:\n                        return '<i class=\"fa fa-hourglass-o\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Subscription Cancel\"></i>';\n                    case 5:\n                        return '<i class=\"fa fa-hourglass-half\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Subscription Payment\"></i>';\n                    default:\n                        return subType;\n                }\n                break;\n\n\n            case 22:\n                switch (subType) {\n                    case 0:\n                        return '<i class=\"fa fa-cogs\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"AT Creation\"></i>';\n                    case 1:\n                        return '<i class=\"fa fa-cogs\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"AT Payment\"></i>';\n                    default:\n                        return subType;\n                }\n                break;\n\n\n            default:\n                return subType;\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('transactionTextSubType', ['$sce', function ($sce) {\n    return function (type, subType) {\n\n        switch (type) {\n            case 0:\n                switch (subType) {\n                    case 0:\n                        return 'Ordinary Payment';\n                    default:\n                        return subType;\n                }\n                break;\n            case 1:\n                switch (subType) {\n                    case 0:\n                        return 'Arbitary Message';\n                    case 1:\n                        return 'Alias Assignment';\n                    case 2:\n                        return 'Poll Creation';\n                    case 3:\n                        return 'Vote Casting';\n                    case 4:\n                        return 'Hub Announcement';\n                    case 5:\n                        return 'Account Info';\n                    case 6:\n                        return 'Alias Sell';\n                    case 7:\n                        return 'Alias Buy';\n                    case 8:\n                        return 'Alias Delete';\n                    case 9:\n                        return 'Phasing Vote Casting';\n                    case 10:\n                        return 'Account Property';\n                    case 11:\n                        return 'Account Property delete';\n                    default:\n                        return subType;\n                }\n                break;\n            case 2:\n                switch (subType) {\n                    case 0:\n                        return 'Asset Issuance';\n                    case 1:\n                        return 'Asset Transfer';\n                    case 2:\n                        return 'Ask Order Placement';\n                    case 3:\n                        return 'Bid Order Placement';\n                    case 4:\n                        return 'Ask Order Cancellation';\n                    case 5:\n                        return 'Bid Order Cancellation';\n                    case 6:\n                        return 'Dividend Payment';\n                    case 7:\n                        return 'Asset Delete';\n                    default:\n                        return subType;\n                }\n                break;\n\n            case 4:\n                switch (subType) {\n                    case 0:\n                        return 'Effective Balance Lease';\n                    case 1:\n                        return 'Phasing Only';\n                    default:\n                        return subType;\n                }\n                break;\n            case 5:\n                switch (subType) {\n                    case 0:\n                        return 'Currency Issuance';\n                    case 1:\n                        return 'Reserve Increase';\n                    case 2:\n                        return 'Resverve Claim';\n                    case 3:\n                        return 'Currency Transfer';\n                    case 4:\n                        return 'Publish Exchange Offer';\n                    case 5:\n                        return 'Exchange Buy';\n                    case 6:\n                        return 'Exchange Sell';\n                    case 7:\n                        return 'Currency Minting';\n                    case 8:\n                        return 'Currency Deletion';\n                    default:\n                        return subType;\n                }\n                break;\n\n            case 7:\n                switch (subType) {\n                    case 0:\n                        return 'Shuffling Creation';\n                    case 1:\n                        return 'Shuffling Registration';\n                    case 2:\n                        return 'Shuffling Processing';\n                    case 3:\n                        return 'Shuffling Recipients';\n                    case 4:\n                        return 'Shuffling Verification';\n                    case 5:\n                        return 'Shuffling Cancel';\n                    default:\n                        return subType;\n                }\n                break;\n\n            case 21:\n                switch (subType) {\n                    case 0:\n                        return 'Escrow Creation';\n                    case 1:\n                        return 'Escrow Sign';\n                    case 2:\n                        return 'Escrow Results';\n                    case 3:\n                        return 'Subscription Creation';\n                    case 4:\n                        return 'Subscription Cancel';\n                    case 5:\n                        return 'Subscription Payment';\n                    default:\n                        return subType;\n                }\n                break;\n\n            case 22:\n                switch (subType) {\n                    case 0:\n                        return 'AT Creation';\n                    case 1:\n                        return 'AT Payment';\n                    default:\n                        return subType;\n                }\n                break;\n\n            default:\n                return subType;\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('blockTransactions', ['$sce', function ($sce) {\n    return function (value) {\n        if (value === 0) {\n            return '<span class=\"label label-default\">' + value + '</span>';\n        } else if (value > 0 && value < 100) {\n            return '<span class=\"label label-success\">' + value + '</span>';\n        } else if (value >= 100 && value < 200) {\n            return '<span class=\"label label-warning\">' + value + '</span>';\n        } else if (value >= 200) {\n            return '<span class=\"label label-danger\">' + value + '</span>';\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('isEmpty', ['$sce', function ($sce) {\n    return function (val) {\n        if (val === undefined || val === '') {\n            return 'No Data Available';\n        } else {\n            return val;\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('notSet', ['$sce', function ($sce) {\n    return function (val) {\n        if (val === undefined || val === '') {\n            return 'Not set';\n        } else {\n            return val;\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('noOutbound', ['$sce', function ($sce) {\n    return function (val) {\n        if (val === undefined || val === '') {\n            return 'No public key available, no outbound transaction made.';\n        } else {\n            return val;\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('searchTerm', ['$sce', function ($sce) {\n    return function (val) {\n        if (val) {\n            return '<a href=\"\" ng-controller=\"SearchCtrl\" ng-click=\"searchValue(\\'' + val +\n                '\\')\">' + val + '</a>';\n        } else {\n            return '';\n        }\n\n    };\n}]);\n\nangular.module('baseClient').directive('compile', ['$compile', function ($compile) {\n    return function (scope, element, attrs) {\n        scope.$watch(\n            function (scope) {\n                // watch the 'compile' expression for changes\n                return scope.$eval(attrs.compile);\n            },\n            function (value) {\n                // when the 'compile' expression changes\n                // assign it into the current DOM\n                element.html(value);\n\n                // compile the new DOM and link it to the current\n                // scope.\n                // NOTE: we only compile .childNodes so that\n                // we don't get into infinite loop compiling ourselves\n                $compile(element.contents())(scope);\n            }\n        );\n    };\n}]);\n\nangular.module('baseClient').directive('dynamic', ['$compile', function ($compile) {\n    return {\n        restrict: 'A',\n        replace: true,\n        link: function (scope, ele, attrs) {\n            scope.$watch(attrs.dynamic, function (html) {\n                ele.html(html);\n                $compile(ele.contents())(scope);\n            });\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('currencyModel', ['$sce', function ($sce) {\n    return function (val) {\n        switch (val) {\n            case 1:\n                return 'Exchangeable';\n            case 8:\n                return 'Claimable';\n            case 16:\n                return 'Mintable';\n            case 2:\n                return 'Controllable';\n            case 4:\n                return 'Reservable';\n            case 32:\n                return 'Non Shuffleable';\n            default:\n                return val;\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('range', function () {\n    return function (input, total) {\n        total = parseInt(total);\n\n        for (var i = 0; i < total; i++) {\n            input.push(i);\n        }\n\n        return input;\n    };\n});\n\nangular.module('baseClient').filter('JSONStringify', ['$sce', function ($sce) {\n    return function (data) {\n\n        return JSON.stringify(data);\n\n    };\n}]);\n\nangular.module('baseClient').filter('isEnabled', ['$sce', function ($sce) {\n    return function (val) {\n        switch (val) {\n            case true:\n                return '</small> <i class=\"fa fa-check\" aria-hidden=\"true\"></i></small>';\n            case false:\n                return '</small> <i class=\"fa fa-times\" aria-hidden=\"true\"></i></small>';\n            default:\n                return '</small> <i class=\"fa fa-times\" aria-hidden=\"true\"></i> </small>';\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('isMessage', ['$sce', function ($sce) {\n    return function (type, subType) {\n\n        if (type === 1 && subType === 0) {\n            return '</small> <i class=\"fa fa-check\" aria-hidden=\"true\"></i> </small>';\n        } else {\n            return '</small> <i class=\"fa fa-times\" aria-hidden=\"true\"></i> </small>';\n        }\n\n    };\n}]);\n\nangular.module('baseClient').filter('isMultisig', ['$sce', function ($sce) {\n    return function (type, subType) {\n\n        if (type === 1 && subType === 0) {\n            return '</small> <i class=\"fa fa-check\" aria-hidden=\"true\"></i> </small>';\n        } else {\n            return '</small> <i class=\"fa fa-times\" aria-hidden=\"true\"></i> </small>';\n        }\n\n    };\n}]);\n\nangular.module('baseClient').filter('hasMessage', ['$sce', function ($sce) {\n    return function (row, account) {\n        if (row.attachment.encryptedMessage) {\n            if (account === row.senderRS) {\n                return ' <i class=\"fa fa-upload\" aria-hidden=\"true\" style=\"color: black;\"></i> ';\n            } else if (account === row.recipientRS) {\n                return '<i class=\"fa fa-download\" aria-hidden=\"true\" style=\"color:black;\"></i>';\n            } else {\n                return '</small> <i class=\"fa fa-check\" aria-hidden=\"true\"></i> </small>';\n            }\n        } else {\n            return '</small> <i class=\"fa fa-times\" aria-hidden=\"true\"></i> </small>';\n        }\n\n    };\n}]);\n\nangular.module('baseClient').filter('hasMessageDirection', ['$sce', function ($sce) {\n    return function (row, account) {\n        if (account === row.senderRS) {\n            return ' <i class=\"fa fa-upload\" aria-hidden=\"true\" style=\"color:back;\"></i> ';\n        } else {\n            return '<i class=\"fa fa-download\" aria-hidden=\"true\" style=\"color:back;\"></i>';\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('controlModel', ['$sce', function ($sce) {\n    return function (val) {\n\n        val = parseInt(val);\n\n        switch (val) {\n            case 0:\n                return 'Account';\n            case 1:\n                return 'Balance';\n            case 2:\n                return 'Asset';\n            case 3:\n                return 'Currency';\n            default:\n                return val;\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('votingModel', ['$sce', function ($sce) {\n    return function (val) {\n\n        val = parseInt(val);\n\n        switch (val) {\n            case 0:\n                return 'Account';\n            case 1:\n                return 'Balance';\n            case 2:\n                return 'Asset';\n            case 3:\n                return 'Currency';\n            default:\n                return val;\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('shufflingStage', ['$sce', function ($sce) {\n    return function (val) {\n\n        val = parseInt(val);\n\n        switch (val) {\n            case 0:\n                return 'Registration';\n            case 1:\n                return 'Processing';\n            case 2:\n                return 'Verification';\n            case 3:\n                return 'Blame';\n            case 4:\n                return 'Cancelled';\n            case 5:\n                return 'Done';\n            default:\n                return val;\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('holdingType', ['$sce', function ($sce) {\n    return function (val) {\n\n        val = parseInt(val);\n\n        switch (val) {\n            case 0:\n                return 'XIN';\n            case 1:\n                return 'Asset';\n            case 2:\n                return 'Currency';\n            default:\n                return val;\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('votingModelLabel', ['$sce', function ($sce) {\n    return function (val) {\n\n        val = parseInt(val);\n\n        switch (val) {\n            case 0:\n                return '<i class=\"fa fa-user-o\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Account\"></i>'; // Account\n            case 1:\n                return '<i class=\"fa fa-credit-card\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Balance\"></i>'; // 'Balance';\n            case 2:\n                return '<i class=\"fa fa-bar-chart\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Asset\"></i>'; // 'Asset';\n            case 3:\n                return '<i class=\"fa fa-random\" aria-hidden=\"true\" popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=\"Currency\"></i>'; //'Currency';\n            default:\n                return val;\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('buysell', ['$sce', function ($sce) {\n    return function (val) {\n        switch (val) {\n            case 'buy':\n                return '<span class=\"label label-success\">B</span>';\n            case 'sell':\n                return '<span class=\"label label-danger\">S</span>';\n            default:\n                return '<span class=\"label label-default\">U</span>';\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('txIsValid', ['$sce', function ($sce) {\n    return function (val) {\n        switch (val) {\n            case true:\n                return '</small> <i class=\"fa fa-check\" aria-hidden=\"true\" style=\"color:green\"></i></small>';\n            case false:\n                return '</small> <i class=\"fa fa-times\" aria-hidden=\"true\" style=\"color:red\"></i></small>';\n            default:\n                return '</small> <i class=\"fa fa-times\" aria-hidden=\"true\" style=\"color:red\"></i> </small>';\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('isService', ['$sce', function ($sce) {\n    return function (val) {\n        if (val === undefined || val === '') {\n            return 'Service';\n        } else {\n            return val;\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('isSync', ['$sce', function ($sce) {\n    return function (val) {\n        switch (val) {\n            case true:\n                return 'NO';\n            case false:\n                return 'Yes';\n            default:\n                return 'NO';\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('replaceQuotes', ['$sce', function ($sce) {\n    return function (val) {\n        return val.replace(/(\"|')/g, \"\");\n    };\n}]);\n\nangular.module('baseClient').filter('txDirection', ['$sce', function ($sce) {\n    return function (account, row) {\n        if (account === row.senderRS) {\n            return ' <i class=\"fa fa-chevron-circle-up\" aria-hidden=\"true\" style=\"color:red;\"></i> ';\n        } else {\n            return '<i class=\"fa fa-chevron-circle-down\" aria-hidden=\"true\" style=\"color:green;\"></i>';\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('pollDays', ['$sce', function ($sce) {\n    return function (value) {\n        if (!value) {\n            value = 0;\n        }\n        if (value <= 0) {\n\n            return '<span class=\"label label-default\" style=\"width:50px;\">' + value + '</span>';\n\n        } else if (value > 0 && value < 3) {\n\n            return '<span class=\"label label-danger\" style=\"width:50%;\">' + value + '</span>';\n\n        } else if (value >= 3 && value < 7) {\n\n            return '<span class=\"label label-warning\" style=\"width:50px;\">' + value + '</span>';\n\n        } else if (value >= 7) {\n\n            return '<span class=\"label label-success\" style=\"width:50px;\">' + value + '</span>';\n\n        } else {\n\n            return '<span class=\"label label-primary\" style=\"width:50px;\">' + value + '</span>';\n\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('upDown', ['$sce', function ($sce) {\n    return function (value) {\n        if (!value) {\n            value = 0;\n        }\n        if (value === 0) {\n            return '<span class=\"label label-default\" >' + value + '</span>';\n        } else if (value > 0) {\n            return '<span class=\"label label-success\" >' + value + '</span>';\n        } else if (value < 0) {\n            return '<span class=\"label label-danger\"  >' + value + '</span>';\n        } else {\n            return '<span class=\"label label-primary\" >' + value + '</span>';\n        }\n    };\n}]);\n\n\nangular.module('baseClient').filter('newsType', ['$sce', function ($sce) {\n    return function (value) {\n\n        if (!value) {\n            value = 0;\n        }\n\n        value = parseInt(value);\n\n        if (value === 0) {\n            return '<span class=\"label label-info\"> News </span>';\n        } else if (value === 1) {\n            return '<span class=\"label label-warning\"> Announcement </span>';\n        } else if (value === 2) {\n            return '<span class=\"label label-danger\"> Voting Result </span>';\n        } else {\n\n            return '<span class=\"label label-default\"> News </span>';\n\n        }\n    };\n}]);\n\n// Priority  - 0 = low  / 5 = medium / 10 = high\n// Type      - 0 = news / 1 = announcement / 2 = Voting Result\n// section   - 0 = Info / 1 = Feature / 2 = Update / 3 = Security / 4 = Voting / 5 = Improvement / 6 = Alert\n\nangular.module('baseClient').filter('newsSection', ['$sce', function ($sce) {\n    return function (value) {\n\n        if (!value) {\n            value = 0;\n        }\n        value = parseInt(value);\n\n        if (value === 0) {\n            return '<span class=\"label label-info\"> Info </span>';\n        } else if (value === 1) {\n            return '<span class=\"label label-success\"> Feature </span>';\n        } else if (value === 2) {\n            return '<span class=\"label label-success\"> Update </span>';\n        } else if (value === 3) {\n            return '<span class=\"label label-warning\"> Security </span>';\n        } else if (value === 4) {\n            return '<span class=\"label label-warning\"> Voting </span>';\n        } else if (value === 5) {\n            return '<span class=\"label label-info\"> Improvement </span>';\n        } else if (value === 6) {\n            return '<span class=\"label label-danger\"> Alert </span>';\n        } else {\n            return '<span class=\"label label-info\"> Info </span>';\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('newsPriority', ['$sce', function ($sce) {\n    return function (value) {\n\n        if (!value) {\n            value = 0;\n        }\n        value = parseInt(value);\n\n        if (value === 0) {\n            return '<span class=\"label label-default\"> Low </span>';\n        } else if (value === 5) {\n            return '<span class=\"label label-warning\"> medium </span>';\n        } else if (value === 10) {\n            return '<span class=\"label label-danger\"> High </span>';\n        } else {\n            return '<span class=\"label label-default\"> Low </span>';\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('isOnline', ['$sce', function ($sce) {\n    return function (val) {\n        switch (val) {\n            case true:\n                return '<small> <span class=\"glyphicon glyphicon-ok\" style=\"color:green\"></span> </small>';\n            case false:\n                return '<small> <span class=\"glyphicon glyphicon-remove\" style=\"color:red\"></span> </small>';\n            default:\n                return '<small> <span class=\"glyphicon glyphicon-remove\" style=\"color:black\"></span> </small>';\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('ledgerHolding', ['$sce', function ($sce) {\n    return function (data) {\n        if (data === 'UNCONFIRMED_XIN_BALANCE') {\n            return ' Unconfirmed Balance ';\n        } else if (data === 'XIN_BALANCE') {\n            return ' Confirmed Balance ';\n        } else if (data === 'UNCONFIRMED_ASSET_BALANCE') {\n          return ' Unconfirmed Asssets ';\n        } else if (data === 'ASSET_BALANCE') {\n          return ' Asset Balance ';\n        } else if (data === 'UNCONFIRMED_CURRENCY_BALANCE') {\n          return ' Unconfirmed Currencies ';\n        } else if (data === 'CURRENCY_BALANCE') {\n          return ' Currency Balance ';\n        } else {\n            return 'Unknown Holding';\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('ledgerTXTypes', ['$sce', function ($sce) {\n    return function (data) {\n        if (data === 'BLOCK_GENERATED') {\n            return ' Block Generated';\n        } else if (data === 'REJECT_PHASED_TRANSACTION') {\n            return 'Rejected Phased Transaction';\n        } else if (data === 'TRANSACTION_FEE') {\n          return 'Transaction Fee';\n        } else if (data === 'ORDINARY_PAYMENT') {\n          return 'Ordinary Payment';\n        } else if (data === 'ACCOUNT_INFO') {\n          return 'Account Info';\n        } else if (data === 'ALIAS_ASSIGNMENT') {\n          return 'Alias Assignment';\n        } else if (data === 'ALIAS_BUY') {\n          return 'Alias Buy';\n        } else if (data === 'ALIAS_DELETE') {\n          return 'Alias Delete';\n        } else if (data === 'ALIAS_SELL') {\n          return 'Alias Sell';\n        } else if (data === 'ARBITRARY_MESSAGE') {\n          return 'Message';\n        } else if (data === 'HUB_ANNOUNCEMENT') {\n          return 'Hub Announcement';\n        } else if (data === 'PHASING_VOTE_CASTING') {\n          return 'Phased Vote Casting';\n        } else if (data === 'POLL_CREATION') {\n          return 'Poll Creation';\n        } else if (data === 'VOTE_CASTING') {\n          return 'Vote Casting';\n        } else if (data === 'ACCOUNT_PROPERTY') {\n          return 'Account Property';\n        } else if (data === 'ACCOUNT_PROPERTY_DELETE') {\n          return 'Account Property Delete';\n        } else if (data === 'ASSET_ASK_ORDER_CANCELLATION') {\n          return 'Ask Order Cancellation';\n        } else if (data === 'ASSET_ASK_ORDER_PLACEMENT') {\n          return 'Ask Order Placement';\n        } else if (data === 'ASSET_BID_ORDER_CANCELLATION') {\n          return 'Bit Order Cancellation';\n        } else if (data === 'ASSET_BID_ORDER_PLACEMENT') {\n          return 'Bit Order Placement';\n        } else if (data === 'ASSET_DIVIDEND_PAYMENT') {\n          return 'Dividend Payment';\n        } else if (data === 'ASSET_ISSUANCE') {\n          return 'Asset Issuance';\n        } else if (data === 'ASSET_TRADE') {\n          return 'Asset Trade';\n        } else if (data === 'ASSET_TRANSFER') {\n          return 'Asset Transfer';\n        } else if (data === 'ASSET_DELETE') {\n          return 'Asset Delete';\n        } else if (data === 'ACCOUNT_CONTROL_EFFECTIVE_BALANCE_LEASING') {\n          return 'Effective Balance Leasing';\n        } else if (data === 'ACCOUNT_CONTROL_PHASING_ONLY') {\n          return 'Account Control';\n        } else if (data === 'CURRENCY_DELETION') {\n          return 'Currency Deletion';\n        } else if (data === 'CURRENCY_DISTRIBUTION') {\n          return 'Currency Distribution';\n        } else if (data === 'CURRENCY_EXCHANGE') {\n          return 'Currency Exchange';\n        } else if (data === 'CURRENCY_EXCHANGE_BUY') {\n          return 'Currency Buy';\n        } else if (data === 'CURRENCY_EXCHANGE_SELL') {\n          return 'Currency Sell';\n        } else if (data === 'CURRENCY_ISSUANCE') {\n          return 'Currency Issuance';\n        } else if (data === 'CURRENCY_MINTING') {\n          return 'Currency Minting';\n        } else if (data === 'CURRENCY_OFFER_EXPIRED') {\n          return 'Currency Offer Expired';\n        } else if (data === 'CURRENCY_OFFER_REPLACED') {\n          return 'Currency Offer Replaced';\n        } else if (data === 'CURRENCY_PUBLISH_EXCHANGE_OFFER') {\n          return 'Currency Offer';\n        } else if (data === 'CURRENCY_RESERVE_CLAIM') {\n          return 'Currency Reserve Claim';\n        } else if (data === 'CURRENCY_RESERVE_INCREASE') {\n          return 'Currency Reserve Increase';\n        } else if (data === 'CURRENCY_TRANSFER') {\n          return 'Currency Transfer';\n        } else if (data === 'CURRENCY_UNDO_CROWDFUNDING') {\n          return 'Currency Undo Crowdfunding';\n        } else if (data === 'SHUFFLING_REGISTRATION') {\n          return 'Shuffling Registration';\n        } else if (data === 'SHUFFLING_PROCESSING') {\n          return 'Shuffling Processing';\n        } else if (data === 'SHUFFLING_CANCELLATION') {\n          return 'Shuffling Cancellation';\n        } else if (data === 'SHUFFLING_DISTRIBUTION') {\n          return 'Shuffling Distribution';\n        } else if (data === 'SUBSCRIPTION_CANCEL') {\n          return 'Subscription Cancellation';\n        } else if (data === 'SUBSCRIPTION_PAYMENT') {\n          return 'Sunscription Payment';\n        } else if (data === 'SUBSCRIPTION_SUBSCRIBE') {\n          return 'Subscription Subscribe';\n        } else if (data === 'ESCROW_CREATION') {\n          return 'Escrow Creation';\n        } else if (data === 'ESCROW_SIGN') {\n          return 'Escrow Signing';\n        } else if (data === 'ESCROW_RESULT') {\n            return 'Escrow Result';\n        } else if (data === 'AUTOMATED_TRANSACTION_CREATION') {\n          return 'AT Creation';\n        } else if (data === 'AT_PAYMENT') {\n          return 'AT Payment';\n        } else {\n            return 'Unknown Holding';\n        }\n    };\n}]);\n\nangular.module('baseClient').filter('unsafe', ['$sce', function ($sce) {\n    return function(val) {\n        return $sce.trustAsHtml(val);\n    };\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('baseClient').directive('fiatView', function () {\n\n    var controller = ['$scope', '$rootScope', 'FiatService', '$q', 'quantToAmountFilter',\n        function ($scope, $rootScope, FiatService, $q, quantToAmountFilter) {\n\n            $scope.$watch('amountTqt', function (newValue) {\n                if (newValue) {\n                    var finalAmount = quantToAmountFilter(newValue);\n                    getXinPrice(finalAmount);\n                }\n            });\n\n            $scope.$watch('amount', function (newValue) {\n                if (newValue) {\n                    getXinPrice(newValue);\n                }\n            });\n\n            function getXinPrice(finalAmount) {\n                var btcPricePromise = FiatService.getBtcPrice();\n                var xinPricePromise = FiatService.getXinPrice();\n\n                $q.all([btcPricePromise, xinPricePromise]).then(function (success) {\n                    var btcPriceJson = success[0];\n                    var xinPriceJson = success[1];\n\n                    $scope.xinUSDBTC   = btcPriceJson.averages.day || 0;\n                    $scope.xinPriceUSD = xinPriceJson[0].price_usd || 0;\n\n                    $scope.xinPriceBTC = xinPriceJson[0].price_btc || 0;\n                    $scope.xinVolume24 = xinPriceJson[0]['24h_volume_usd'] || 0;\n                    $scope.xinChange24 = xinPriceJson[0].percent_change_24h || 0;\n\n                    $scope.finalAmount = finalAmount * xinPriceJson[0].price_usd;\n\n                }, function (error) {\n                    console.log(error);\n                });\n            }\n        }];\n\n    return {\n        restrict: 'EA', //Default in 1.3+\n        scope: {\n            amount: '=',\n            amountTqt: '=',\n            template: '@',\n\n        },\n        controller: controller,\n        templateUrl: function (elem, attr) {\n            return attr.template || 'global/views/fiat-template.html';\n        }\n    };\n});\n\nangular.module('baseClient').constant('fiatConfig', {\n    'btcEndpoint': 'http://185.35.139.104/',\n    'xinEndpoint': 'http://185.35.139.104/'\n    //'btcEndpoint': 'https://securewallet.infinity-economics.org/',\n    //'xinEndpoint': 'https://securewallet.infinity-economics.org/'\n\n});\n\nangular.module('baseClient').service('FiatService', ['Restangular', 'fiatConfig', function (Restangular, fiatConfig) {\n\n    this.getBtcPrice = function () {\n        Restangular.setBaseUrl(fiatConfig.btcEndpoint);\n        return Restangular.all('bitcoinaverage.json').customGET('');\n    };\n\n    this.getXinPrice = function () {\n        Restangular.setBaseUrl(fiatConfig.xinEndpoint);\n        return Restangular.all('xin.json').customGET('');\n        //return Restangular.all('coingather.json').customGET('');\n    };\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('baseClient').provider('FeeService', function FeeServiceProvider() {\n\n    this.$get = function () {\n\n        return this;\n\n    };\n    //the provider recipe for services require you specify a $get function\n    function getCharacterLength(val) {\n        if (val) {\n            return val.length;\n        }\n        return 0;\n    }\n\n    this.getSetAccountFee = function (name, description) {\n        var totalLength = getCharacterLength(name) + getCharacterLength(description);\n        var totalFee = 1;\n        if (totalLength > 0) {\n            var normalizedLength = totalLength - 1;\n            var total32Blocks = Math.floor(normalizedLength / 32);\n            totalFee += 2 * ( total32Blocks - 0);\n        }\n        return totalFee;\n\n    };\n\n    this.getIssueAssetFee = function () {\n        return 1000;\n    };\n\n    this.getDeleteAssetFee = function () {\n        return 1;\n    };\n\n    this.getDeleteCurrencyFee = function () {\n        return 1;\n    };\n\n    this.transferAssetFee = function () {\n        return 1;\n    };\n\n    this.getTransferCurrencyFee = function () {\n        return 1;\n    };\n\n    this.getIssueCurrencyFee = function (currencyCode) {\n        var length = getCharacterLength(currencyCode);\n        switch (length) {\n            case 3:\n                return 25000;\n            case 4:\n                return 1000;\n            case 5:\n                return 40;\n        }\n        return -1;\n    };\n\n    this.getCreatePollFee = function () {\n        return 10;\n    };\n\n    this.getCastVoteFee=function(){\n        return 1;\n    };\n\n    this.getSetAliasFee = function () {\n        return 2;\n    };\n\n    this.getDeleteAliasFee = function () {\n        return 2;\n    };\n\n});\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('baseClient')\n    .config(\n        ['$validationProvider', 'FeeServiceProvider', function ($validationProvider, FeeServiceProvider, $injector) {\n\n\n            angular.extend($validationProvider, {\n                validCallback: function (element) {\n                    $(element).parents('.form-group:first').removeClass('has-error');\n                },\n                invalidCallback: function (element) {\n                    $(element).parents('.form-group:first').addClass('has-error');\n                }\n            });\n\n            function sumJson(json) {\n                if (json) {\n                    for (var key in json) {\n                        if (json.hasOwnProperty(key)) {\n                            if (json[key]) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                return false;\n            }\n\n            $validationProvider.setErrorHTML(function (msg) {\n                return '<label class=\"control-label has-error\">' + msg + '</label>';\n            });\n\n            $validationProvider.setSuccessHTML(function (msg) {\n                return '<label class=\"control-label has-error\">' + msg + '</label>';\n            });\n\n            $validationProvider.showSuccessMessage = false;\n\n            $validationProvider\n                .setExpression({\n                    secretphrase: function (value, scope, element, attrs, param) {\n                        return scope.hasPrivateKeyInSession() || value;\n                    },\n                    fee: function (value, scope, element, attrs, param) {\n                        var minFee;\n                        if (param === 'sendToken') {\n                            minFee = FeeServiceProvider.getSetAccountFee(scope.sendForm.message);\n                            if (value >= minFee) {\n                                return true;\n                            } else {\n                                return false;\n                            }\n                        }\n                        else if (param === 'setAccount') {\n                            minFee = FeeServiceProvider.getSetAccountFee(scope.setAccountInfoForm.accountName,\n                                scope.setAccountInfoForm.accountDescription);\n                            if (value >= minFee) {\n                                return true;\n                            } else {\n                                return false;\n                            }\n                        }\n                        else if (param === 'issueAsset') {\n                            minFee = FeeServiceProvider.getIssueAssetFee();\n                        } else if (param === 'deleteAsset') {\n                            minFee = FeeServiceProvider.getDeleteAssetFee();\n                        } else if (param === 'transferAsset') {\n                            minFee = FeeServiceProvider.transferAssetFee();\n                        } else if (param === 'deleteCurrency') {\n                            minFee = FeeServiceProvider.getDeleteCurrencyFee();\n                        } else if (param === 'transferCurrency') {\n                            minFee = FeeServiceProvider.getTransferCurrencyFee();\n                        } else if (param === 'createPoll') {\n                            minFee = FeeServiceProvider.getCreatePollFee();\n                        } else if (param === 'castVote') {\n                            minFee = FeeServiceProvider.getCastVoteFee();\n                        } else if (param === 'setAlias') {\n                            minFee = FeeServiceProvider.getSetAliasFee();\n                        } else if (param === 'deleteAlias') {\n                            minFee = FeeServiceProvider.getDeleteAliasFee();\n                        } else {\n                            return {\n                                result: false,\n                                message: 'Fee must be valid'\n                            };\n                        }\n                        if (value >= minFee) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n\n                    },\n                    accountname: function (value, scope, element, attrs, param) {\n                        if (value === 'undefined' || value === '' || value === null) {\n                            return true;\n                        }\n                        else if (value.length > 100) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    },\n                    accountdesc: function (value, scope, element, attrs, param) {\n                        if (value === 'undefined' || value === '' || value === null) {\n                            return true;\n                        }\n                        else if (value.length > 1000) {\n                            return false;\n                        }\n                        else {\n                            return true;\n                        }\n                    },\n                    currencycode: function (value, scope, element, attrs, param) {\n                        if (value) {\n                            if (value.length >= 3 && value.length <= 5) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    },\n                    currencytype: function (value, scope, element, attrs, param) {\n                        var types = scope.issueCurrencyForm.types;                  \n                        return sumJson(types);\n\n                    },\n                    newPrefix: function (value, scope, element, attrs, param) {\n                        var prefixValue = scope.setAliasForm.prefix;\n                        if (prefixValue === 'new') {\n                            return value;\n                        }\n                        return true;\n\n                    },\n                    aliasSearch: function (value, scope, element, attrs, param) {\n                        if (value) {\n                            if (value.length >= 3) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    },\n                    nodeUrl: function (value, scope, element, attrs, param) {\n                        var connectionMode = scope.optionsForm.CONNECTION_MODE;\n                        if (connectionMode === 'AUTO') {\n                            return true;\n                        }\n                        if (value) {\n                            return scope.isValidUrl(value);\n                        }\n                        return false;\n                    },\n\n                })\n                .setDefaultMsg({\n                    fee: {\n                        error: 'Fee is too low',\n                        success: 'Thanks!'\n                    },\n                    accountname: {\n                        error: 'Name must be less than 100 chars',\n                        success: 'Account Name is valid'\n                    },\n                    accountdesc: {\n                        error: 'Name must be less than 1000 chars',\n                        success: 'Account Name is valid'\n                    },\n                    secretphrase: {\n                        error: 'Secret Phrase is not avialbel. Please input',\n                        success: 'Secret is available'\n                    },\n                    currencycode: {\n                        error: 'Currency code must be between 3 to 5 chars',\n                        success: 'Currency code is valid'\n                    },\n                    currencytype: {\n                        error: 'Atleast one currency type must be selected',\n                        success: 'Currency type is valid'\n                    },\n                    newPrefix: {\n                        error: 'New alias type must be valid',\n                        success: 'Alias type is valid'\n                    },\n                    aliasSearch: {\n                        error: '',\n                        success: ''\n                    },\n                    nodeUrl: {\n                        error: 'Node Url is not valid',\n                        success: 'Url is valid'\n                    },\n                    afterValidate: {\n                        error: '',\n                        success: ''\n                    }\n                });\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('baseClient').controller('BaseCtrl',\n        ['$scope', '$uibModal', 'CommonsService', '$injector', function ($scope, $uibModal, CommonsService, $injector) {\n\n            $scope.openAddressBookModal = function (accountRS, tag) {\n                var modalInstance = $uibModal.open({\n                    animation: false,\n                    templateUrl: 'addressbook/views/addressbook.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'accountRS': accountRS,\n                                'tag': tag\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openOptionsModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: false,\n                    templateUrl: 'options/views/options.html',\n                    controller: 'OptionsCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    },\n                });\n            };\n\n            $scope.searchAliases = function (searchTerm, form,value) {\n                var AliasService = $injector.get('AliasService');\n                return AliasService.searchAlias(searchTerm).then(function (success) {\n                    var aliases = success.aliases ||[];\n                    for (var i = 0; i < aliases.length; i++) {\n                        var alias = aliases[i];\n                        if (alias.aliasName.toUpperCase() === searchTerm.toUpperCase()) {\n                            var aliasURI = alias.aliasURI;\n                            var aliasType = aliasURI.split(':');\n                            if (aliasType[0] === 'acct') {\n                                var accountRS = aliasType[1].split('@')[0];\n                                form[value]= accountRS;\n                                break;\n\n                            }\n                        }\n                    }\n                }, function (error) {\n\n                });\n            };\n\n        }]);\n\nangular.module('baseClient').controller('GlobalErrorModalCtrl', ['$scope', '$uibModalInstance', '$q', 'params',\n    function ($scope, $uibModalInstance, $q, params) {\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.showResult = function () {\n            $scope.message = params.message;\n        };\n    }]);\n\nangular.module('baseClient').run(['$rootScope','$uibModal',function ($rootScope,$uibModal) {\n\n    $rootScope.openErrorModal=function (errorMessage) {\n        $uibModal.open({\n            animation: true,\n            templateUrl: 'global/views/error-modal.html',\n            size: 'sm',\n            controller: 'GlobalErrorModalCtrl',\n            resolve: {\n                params: function () {\n                    return {\n                        message: errorMessage\n                    };\n                }\n            }\n        });\n    };\n\n}]);\n\nangular.module('baseClient').controller('GlobalNavbar', ['$rootScope', '$q', '$scope', 'OptionsService',\n    function ($rootScope, $q, $scope, OptionsService) {\n\n      var connectionMode = OptionsService.getOption('CONNECTION_MODE')\n\n      $scope.setTestNet = function () {\n        if (connectionMode == 'TESTNET') { return true; } else { return false;}\n      };\n\n      $scope.setHttpsNet = function () {\n        if (connectionMode == 'HTTPS') { return true; } else { return false;}\n      };\n\n      $scope.setDevNet = function () {\n      if (connectionMode == 'DEVTESTNET') { return true; } else { return false;}\n      };\n      $scope.setMainNet = function () {\n        if (connectionMode !== 'TESTNET' && connectionMode !== 'DEVTESTNET') { return true; } else { return false;}\n      };\n\n    }]);\n\nangular.module('baseClient').controller('GlobalMenu', ['$rootScope', '$q', '$scope', 'OptionsService',\n    function ($rootScope, $q, $scope, OptionsService) {\n\n      var testnet = OptionsService.getOption('TESTNET') || false;\n\n      $scope.setStatus = 'disabled';\n\n      if ( testnet ) {\n        $scope.setStatus = '';\n      }\n\n      var extensions = OptionsService.getOption('EXTENSIONS') || false;\n      $scope.setExtensions = 'disabled';\n\n      if ( extensions ) {\n        $scope.setExtensions = '';\n      }\n\n      // console.log ( $scope.setExtensions )\n\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('baseClient').factory('httpResponseErrorInterceptor',\n    ['$q', '$injector', 'baseConfig', 'peerEndpoints', '$sanitize',\n        function ($q, $injector, baseConfig, peerEndpoints, $sanitize) {\n\n            function sanitizeJsonResponse(response, CommonsService) {\n                if (typeof response.data == \"object\") {\n                    //Uncomment below block to test xaa\n                    // if(response.data&& response.data.length>0&&response.data[0].title){\n                    //     response.data[0].title='<script>alert(\"hello world\")</script>'+response.data[0].title;\n                    //     console.log('int zss',response.data[0].title);\n                    // }\n\n                    // needs JSON validation here\n\n                    response.data = CommonsService.sanitizeJson(response.data);\n                }\n                return response;\n            }\n\n            return {\n                'response': function (response) {\n                    var url = response.config.url;\n                    var CommonsService = $injector.get('CommonsService');\n                    if (url.indexOf('/api/nodes') !== -1 && Array.isArray(response.data) &&\n                        response.data.length === 0) {\n                        var $http = $injector.get('$http');\n                        var SessionStorageService = $injector.get('SessionStorageService');\n                        var PeerService = $injector.get('PeerService');\n\n\n                        //This means peer call. See if there is a better identification.\n                        var endPoints = SessionStorageService.getFromSession(baseConfig.SESSION_PEER_ENDPOINTS) ||\n                            PeerService.getPeerEndPoints();\n                        var index = endPoints.indexOf(url);\n                        if (endPoints[index + 1]) {\n                            response.config.url = endPoints[index + 1];\n                            return $http(response.config).then(function (success) {\n                                return sanitizeJsonResponse(success, CommonsService);\n                            }, function (error) {\n                                return sanitizeJsonResponse(error, CommonsService);\n                            });\n                        } else {\n                            return sanitizeJsonResponse(response, CommonsService);\n                        }\n                    }\n                    return sanitizeJsonResponse(response, CommonsService);\n                },\n                'responseError': function (response) {\n                    var $http = $injector.get('$http');\n                    var SessionStorageService = $injector.get('SessionStorageService');\n                    var PeerService = $injector.get('PeerService');\n                    var url = response.config.url;\n                    if (url.indexOf('/api/nodes') !== -1 && response.status === -1) {\n                        //This means peer call. See if there is a better identification.\n                        var endPoints = SessionStorageService.getFromSession(baseConfig.SESSION_PEER_ENDPOINTS) ||\n                            PeerService.getPeerEndPoints();\n                        var index = endPoints.indexOf(url);\n                        if (endPoints[index + 1]) {\n                            response.config.url = endPoints[index + 1];\n                            return $http(response.config);\n                        } else {\n                            return $q.reject(response);\n                        }\n                    }\n                    if (url.indexOf(\n                            'api') !== -1 && response.config.params && response.config.params.requestType &&\n                        response.config.params.requestType !== 'getPeerState' && response.status === -1) {\n                        var OptionsConfigurationService = $injector.get('OptionsConfigurationService');\n                        var NodeService = $injector.get('NodeService');\n                        var currentTry = SessionStorageService.getFromSession(baseConfig.SESSION_CURRENT_TRY) || 0;\n                        var maxTries = baseConfig.SESSION_MAX_RETRIES;\n                        if (currentTry > maxTries) {\n                            SessionStorageService.saveToSession(baseConfig.SESSION_CURRENT_TRY, 0);\n                            return $q.reject(response);\n                        } else {\n                            SessionStorageService.saveToSession(baseConfig.SESSION_CURRENT_TRY, currentTry + 1);\n                            return PeerService.getPeers().then(function (success) {\n                                OptionsConfigurationService.loadOptions();\n                                response.config.url = NodeService.getNodeUrl('AUTO', false) + '/api';\n\n                                return $http(response.config);\n\n                            }, function (error) {\n                                return $q.reject(response);\n                            });\n                        }\n                    }\n                    // give up\n                    return $q.reject(response);\n                }\n            };\n        }]);\n\nangular.module('baseClient').config(['$httpProvider', function ($httpProvider) {\n    $httpProvider.interceptors.push('httpResponseErrorInterceptor');\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('baseClient')\n    .service('StateAuthService', ['$rootScope', 'CommonsService', '$state',\n        function ($rootScope, CommonsService, $state) {\n\n            this.authenticate = function (event, nextState) {\n                var nextStateName = nextState.name;\n                if (nextStateName.indexOf('signedin') !== -1) {\n                    if (!hasAuthenticated()) {\n                        event.preventDefault();\n                        $state.go('client.login');\n                    }\n                }\n            };\n\n            function hasAuthenticated() {\n                var accountDetails = CommonsService.getAccountDetailsFromSession();\n                return accountDetails;\n            }\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('crypto', []);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\n\n  angular.module('crypto').factory('converters', ['$window', function ($window) {\n      if ($window.converters) {\n          $window.thirdParty = $window.thirdParty || {};\n          $window.thirdParty.converters = $window.converters;\n          try {\n              delete $window.converters;\n          } catch (e) {\n              $window.converters = undefined;\n          }\n      }\n      return $window.thirdParty.converters;\n  }]);\n\n  angular.module('crypto').factory('PassPhraseGenerator', ['$window', function ($window) {\n      if ($window.PassPhraseGenerator) {\n          $window.thirdParty = $window.thirdParty || {};\n          $window.thirdParty.PassPhraseGenerator = $window.PassPhraseGenerator;\n          try {\n              delete $window.PassPhraseGenerator;\n          } catch (e) {\n              $window.PassPhraseGenerator = undefined;\n          }\n      }\n      return $window.thirdParty.PassPhraseGenerator;\n  }]);\n\n  angular.module('crypto').factory('curve25519', ['$window', function ($window) {\n      $window.thirdParty = $window.thirdParty || {};\n      $window.thirdParty.curve25519 = $window.curve25519;\n      try {\n          delete $window.curve25519;\n      } catch (e) {\n          $window.curve25519 = undefined;\n      }\n      return $window.thirdParty.curve25519;\n  }]);\n\n  angular.module('crypto').factory('pako', ['$window', function ($window) {\n      $window.thirdParty = $window.thirdParty || {};\n      $window.thirdParty.pako = $window.pako;\n      try {\n          delete $window.pako;\n      } catch (e) {\n          $window.pako = undefined;\n      }\n      return $window.thirdParty.pako;\n  }]);\n\n  angular.module('crypto').factory('curve25519_', ['$window', function ($window) {\n      $window.thirdParty = $window.thirdParty || {};\n      $window.thirdParty.curve25519_ = $window.curve25519_;\n      try {\n          delete $window.curve25519_;\n      } catch (e) {\n          $window.curve25519_ = undefined;\n      }\n      return $window.thirdParty.curve25519_;\n  }]);\n\n  angular.module('crypto').factory('CryptoJS_SHA256', ['$window', function ($window) {\n      $window.thirdParty = $window.thirdParty || {};\n      $window.thirdParty.CryptoJS_SHA256 = $window.CryptoJS.SHA256;\n      try {\n          delete $window.CryptoJS.SHA256;\n      } catch (e) {\n          $window.CryptoJS.SHA256 = undefined;\n      }\n      return $window.thirdParty.CryptoJS_SHA256;\n  }]);\n\n  angular.module('crypto').factory('CryptoJS_CipherParams', ['$window', function ($window) {\n      $window.thirdParty = $window.thirdParty || {};\n      $window.thirdParty.CryptoJS_CipherParams = $window.CryptoJS.lib.CipherParams;\n      try {\n          delete $window.CryptoJS.lib.CipherParams;\n      } catch (e) {\n          $window.CryptoJS.lib.CipherParams = undefined;\n      }\n      return $window.thirdParty.CryptoJS_CipherParams;\n  }]);\n\n  angular.module('crypto').factory('AES', ['$window', function ($window) {\n      $window.thirdParty = $window.thirdParty || {};\n      $window.thirdParty.AES = $window.CryptoJS.AES;\n      try {\n          delete $window.CryptoJS.AES;\n      } catch (e) {\n          $window.CryptoJS.AES= undefined;\n      }\n      return $window.thirdParty.AES;\n  }]);\n\n  angular.module('crypto').factory('RsAddress', ['$window', function ($window) {\n      $window.thirdParty = $window.thirdParty || {};\n      $window.thirdParty.rsAddress = $window.rsAddress;\n      try {\n          delete $window.rsAddress;\n      } catch (e) {\n          $window.rsAddress = undefined;\n      }\n      return $window.thirdParty.rsAddress;\n  }]);\n\n  angular.module('crypto').factory('_hash', ['$window', function ($window) {\n      return {\n          init: $window.SHA256_init,\n          update: $window.SHA256_write,\n          getBytes: $window.SHA256_finalize\n      };\n  }]);\n\n  angular.module('crypto').factory('cryptoUtils', [function () {\n      return {\n          byteArrayToBigInteger: function (byteArray, startIndex) {\n              var value = new BigInteger('0', 10);\n              var temp1, temp2;\n              for (var i = byteArray.length - 1; i >= 0; i--) {\n                  temp1 = value.multiply(new BigInteger('256', 10));\n                  temp2 = temp1.add(new BigInteger(byteArray[i].toString(10), 10));\n                  value = temp2;\n              }\n              return value;\n          }\n      };\n  }]);\n\n  angular.module('crypto').factory('sha256', ['$window', function ($window) {\n      $window.thirdParty = $window.thirdParty || {};\n      $window.thirdParty.sha256 = $window.CryptoJS.algo.SHA256;\n      try {\n          delete $window.CryptoJS.algo.SHA256;\n      } catch (e) {\n          $window.CryptoJS.algo.SHA256 = undefined;\n      }\n      return $window.thirdParty.sha256;\n  }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\n\n/*jshint bitwise: false*/\nangular.module('crypto')\n    .service('CryptoService',\n        ['PassPhraseGenerator', 'converters', 'curve25519', 'cryptoUtils', 'RsAddress', '_hash', 'sha256',\n            'curve25519_', 'pako', 'CryptoJS_SHA256', 'CryptoJS_CipherParams', 'AES',\n            function (PassPhraseGenerator, converters, curve25519, cryptoUtils, RsAddress, _hash, sha256, curve25519_,\n                      pako, CryptoJS_SHA256, CryptoJS_CipherParams, AES) {\n\n                function curve25519_clamp(curve) {\n                    curve[0] &= 0xFFF8;\n                    curve[15] &= 0x7FFF;\n                    curve[15] |= 0x4000;\n                    return curve;\n                }\n\n                function simpleHash(b1, b2) {\n                    var sha = sha256.create();\n                    sha.update(converters.byteArrayToWordArray(b1));\n                    if (b2) {\n                        sha.update(converters.byteArrayToWordArray(b2));\n                    }\n                    var hash = sha.finalize();\n                    return converters.wordArrayToByteArrayImpl(hash, false);\n                }\n\n                function getPrivateKey(secretPhrase) {\n                    var bytes = simpleHash(converters.stringToByteArray(secretPhrase));\n                    return converters.shortArrayToHexString(curve25519_clamp(converters.byteArrayToShortArray(bytes)));\n                }\n\n                function getSharedSecret(key1, key2) {\n                    return converters.shortArrayToByteArray(\n                        curve25519_(converters.byteArrayToShortArray(key1), converters.byteArrayToShortArray(key2),\n                            null));\n                }\n\n                function getSharedKey(privateKey, publicKey, nonce) {\n                    var sharedSecret = getSharedSecret(privateKey, publicKey);\n                    for (var i = 0; i < 32; i++) {\n                        sharedSecret[i] ^= nonce[i];\n                    }\n                    return simpleHash(sharedSecret);\n                }\n\n                function getRandomValues(nonce) {\n                    if (window.crypto) {\n                        window.crypto.getRandomValues(nonce);\n                    } else {\n                        window.msCrypto.getRandomValues(nonce);\n                    }\n                    return nonce;\n                }\n\n                function toByteArray(long) {\n                    // we want to represent the input as a 8-bytes array\n                    var byteArray = [0, 0, 0, 0];\n\n                    for ( var index = 0; index < byteArray.length; index ++ ) {\n                        var byte = long & 0xff;\n                        byteArray [ index ] = byte;\n                        long = (long - byte) / 256 ;\n                    }\n\n                    return byteArray;\n                }\n\n                function byteArrayToBigInteger(byteArray) {\n                    var value = new BigInteger('0', 10);\n                    for (var i = byteArray.length - 1; i >= 0; i--) {\n                        value = value.multiply(new BigInteger('256', 10)).add(new BigInteger(byteArray[i].toString(10), 10));\n                    }\n                    return value;\n                }\n\n                function getUtf8Bytes (str) {\n                    var utf8 = unescape(encodeURIComponent(str));\n                    var arr = [];\n                    for (var i = 0; i < utf8.length; i++) {\n                        arr[i] = utf8.charCodeAt(i);\n                    }\n                    return arr;\n                }\n\n                this.encryptMessage = function (msgStrg, senderSecretHex, receiverPublicKey) {\n\n                    var secret = converters.hexStringToString(senderSecretHex);\n\n                    var senderPrivateKeyBytes = converters.hexStringToByteArray(getPrivateKey(secret));\n                    var receiverPublicKeyBytes = converters.hexStringToByteArray(receiverPublicKey);\n\n                    var sharedKey = getSharedSecret(senderPrivateKeyBytes, receiverPublicKeyBytes);\n                    var nonce = getRandomValues(new Uint8Array(32));\n\n                    var msgBytes = converters.stringToByteArray(msgStrg);\n                    var msgCompressed = pako.gzip(new Uint8Array(msgBytes));\n                    var msgWordArray = converters.byteArrayToWordArray(msgCompressed);\n\n                    for (var i = 0; i < 32; i++) {\n                        sharedKey[i] ^= nonce[i];\n                    }\n\n                    var key = CryptoJS_SHA256(converters.byteArrayToWordArray(sharedKey));\n                    var tmp = getRandomValues(new Uint8Array(16));\n                    var iv = converters.byteArrayToWordArray(tmp);\n                    var encrypted = AES.encrypt(msgWordArray, key, {iv: iv});\n                    var ivOut = converters.wordArrayToByteArray(encrypted.iv);\n                    var ciphertextOut = converters.wordArrayToByteArray(encrypted.ciphertext);\n\n                    var data = ivOut.concat(ciphertextOut);\n\n                    return {\n                        'nonce': converters.byteArrayToHexString(nonce), 'data': converters.byteArrayToHexString(data)\n                    };\n\n                };\n\n                this.decryptMessage = function (msgHex, nonceHex, recieverSecretHex, senderPublicKey) {\n\n                    var secret = converters.hexStringToString(recieverSecretHex);\n                    var recieverPrivateKeyBytes = converters.hexStringToByteArray(getPrivateKey(secret));\n                    var senderPublicKeyBytes = converters.hexStringToByteArray(senderPublicKey);\n\n                    var nonce = converters.hexStringToByteArray(nonceHex);\n                    var sharedKey = getSharedSecret(recieverPrivateKeyBytes, senderPublicKeyBytes);\n\n                    var ivCiphertext = converters.hexStringToByteArray(msgHex);\n\n                    if (ivCiphertext.length < 16 || ivCiphertext.length % 16 !== 0) {\n                        console.log('Invalid Ciphertext');\n                    }\n\n                    var iv = converters.byteArrayToWordArray(ivCiphertext.slice(0, 16));\n                    var ciphertext = converters.byteArrayToWordArray(ivCiphertext.slice(16));\n\n                    var key;\n                    if (nonce) {\n                        for (var i = 0; i < 32; i++) {\n                            sharedKey[i] ^= nonce[i];\n                        }\n                        key = CryptoJS_SHA256(converters.byteArrayToWordArray(sharedKey));\n                    } else {\n                        key = converters.byteArrayToWordArray(sharedKey);\n                    }\n\n                    var encrypted = CryptoJS_CipherParams.create({\n                        ciphertext: ciphertext,\n                        iv: iv,\n                        key: key\n                    });\n\n                    var decrypted = AES.decrypt(encrypted, key, {\n                        iv: iv\n                    });\n\n                    var compressedPlaintext = converters.wordArrayToByteArray(decrypted);\n\n                    var binData = new Uint8Array(compressedPlaintext);\n                    var msgString = converters.byteArrayToString(pako.inflate(binData));\n\n                    return msgString;\n\n                };\n\n                this.generatePassPhrase = function () {\n                    return PassPhraseGenerator.generatePassPhrase();\n                };\n\n                this.getAccountDetails = function (secret) {\n                    var accountDetails = {};\n                    accountDetails.publicKey = this.secretPhraseToPublicKey(secret);\n                    accountDetails.accountId = this.publicKeyToAccountId(accountDetails.publicKey);\n                    accountDetails.accountRs = this.accountIdToAccountRS(accountDetails.accountId);\n                    return accountDetails;\n                };\n\n                this.secretPhraseToPublicKey = function (secretPhrase) {\n\n                    var secretPhraseBytes = converters.stringToByteArray(secretPhrase);\n                    var digest = simpleHash(secretPhraseBytes);\n                    return converters.byteArrayToHexString(curve25519.keygen(digest).p);\n\n                };\n\n                this.getBlockTime = function(epoch) {\n              \t\treturn Math.floor(Date.now() / 1000) - epoch;\n              \t};\n\n                this.generateToken = function(message, secretHex, publicKey, epoch) {\n                    var messageBytes = getUtf8Bytes(message);\n                    var pubKeyBytes = converters.hexStringToByteArray( publicKey );\n                    var token = pubKeyBytes;\n\n                    var tsb = [];\n                    var ts = epoch;\n                    tsb[0] = ts & 0xFF;\n                    tsb[1] = (ts >> 8) & 0xFF;\n                    tsb[2] = (ts >> 16) & 0xFF;\n                    tsb[3] = (ts >> 24) & 0xFF;\n\n                    messageBytes = messageBytes.concat(pubKeyBytes, tsb);\n                    token = token.concat(tsb, converters.hexStringToByteArray(\n                              this.signatureHex(   converters.byteArrayToHexString(messageBytes) , secretHex) ));\n\n                    var buf = '';\n                    for (var ptr = 0; ptr < 100; ptr += 5) {\n                        var nbr = [];\n                        nbr[0] = token[ptr] & 0xFF;\n                        nbr[1] = token[ptr+1] & 0xFF;\n                        nbr[2] = token[ptr+2] & 0xFF;\n                        nbr[3] = token[ptr+3] & 0xFF;\n                        nbr[4] = token[ptr+4] & 0xFF;\n                        var number = byteArrayToBigInteger(nbr);\n                        if (number < 32) {\n                            buf += '0000000';\n                        } else if (number < 1024) {\n                            buf += '000000';\n                        } else if (number < 32768) {\n                            buf += '00000';\n                        } else if (number < 1048576) {\n                            buf += '0000';\n                        } else if (number < 33554432) {\n                            buf += '000';\n                        } else if (number < 1073741824) {\n                            buf += '00';\n                        } else if (number < 34359738368) {\n                            buf += '0';\n                        }\n                        buf +=number.toString(32);\n                    }\n                    return buf;\n                };\n\n                this.secretPhraseToPrivateKey = function (secretPhrase) {\n                    return converters.stringToHexString(secretPhrase);\n                };\n\n                this.secretPhraseFromPrivateKey=function (privateKey) {\n                    return converters.hexStringToString(privateKey);\n                };\n\n                this.publicKeyToAccountId = function (publicKey) {\n                    var hex = converters.hexStringToByteArray(publicKey);\n\n                    _hash.init();\n                    _hash.update(hex);\n\n                    var account = _hash.getBytes();\n\n                    account = converters.byteArrayToHexString(account);\n\n                    var slice = (converters.hexStringToByteArray(account)).slice(0, 8);\n\n                    var accountId = cryptoUtils.byteArrayToBigInteger(slice).toString();\n\n                    return accountId;\n\n                };\n\n                this.accountIdToAccountRS = function (accountId) {\n\n                    var address = new RsAddress();\n\n                    if (address.set(accountId)) {\n                        return address.toString();\n                    } else {\n                        return '';\n                    }\n                };\n\n                this.signatureHex = function (unsignedHex, privateHex) {\n\n                    var unsignedBytes = converters.hexStringToByteArray(unsignedHex);\n                    var secretPhraseBytes = converters.hexStringToByteArray(privateHex);\n\n                    var digest = simpleHash(secretPhraseBytes);\n                    var s = curve25519.keygen(digest).s;\n                    var m = simpleHash(unsignedBytes);\n                    var x = simpleHash(m, s);\n                    var y = curve25519.keygen(x).p;\n                    var h = simpleHash(m, y);\n                    var v = curve25519.sign(h, x, s);\n\n                    return converters.byteArrayToHexString(v.concat(h));\n\n                };\n\n                this.signTransactionHex = function (unsignedHex, signatureHex) {\n\n                    var payload = unsignedHex.substr(0, 192) + signatureHex + unsignedHex.substr(320);\n\n                    return payload;\n                };\n\n\n\n            }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('crypto')\n    .controller('CryptoController',\n        ['PassPhraseGenerator', '$scope', 'converters', 'curve25519','cryptoUtils','RsAddress','_hash',\n            function (PassPhraseGenerator, $scope, converters, curve25519,cryptoUtils,RsAddress,_hash) {\n\n\n            }])\n;\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('node', ['baseClient']);\n\nangular.module('baseClient').constant('nodeConfig', {\n    'SESSION_HAS_LOCAL': 'node.has_local',\n    'SESSION_LOCAL_NODE':'node.local',\n    'SESSION_PEER_NODES':'node.peers'\n});\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('node').service('NodeService',\n    ['nodeConfig', 'SessionStorageService', 'PeerService', 'OptionsService', '$rootScope', 'LocalHostService','baseConfig',\n        function (nodeConfig, SessionStorageService, PeerService, OptionsService, $rootScope, LocalHostService,baseConfig) {\n\n            function getLocalNode() {\n                var node = SessionStorageService.getFromSession(nodeConfig.SESSION_LOCAL_NODE);\n                if (!node) {\n                    return OptionsService.getOption('USER_NODE_URL');\n                }\n                return node;\n            }\n\n            function hasLocal() {\n                return SessionStorageService.getFromSession(nodeConfig.SESSION_HAS_LOCAL);\n            }\n\n            function getPeerNode(i) {\n                var peerNodes = SessionStorageService.getFromSession(nodeConfig.SESSION_PEER_NODES );\n                if (!peerNodes) {\n                    return PeerService.getPeers().then(function (response) {\n                        SessionStorageService.saveToSession(nodeConfig.SESSION_PEER_NODES, response);\n\n                        $rootScope.$broadcast('peers-updated');\n                        return response[i];\n                    });\n                } else {\n                    return peerNodes[i];\n                }\n\n            }\n\n            this.clearNodeConfig=function () {\n                SessionStorageService.deleteFromSession(nodeConfig.SESSION_PEER_NODES);\n                SessionStorageService.deleteFromSession(nodeConfig.SESSION_HAS_LOCAL);\n                SessionStorageService.deleteFromSession(nodeConfig.SESSION_LOCAL_NODE);\n            };\n\n            this.getNodesCount = function () {\n                var total = SessionStorageService.getFromSession(nodeConfig.SESSION_PEER_NODES) || [];\n                return total.length;\n            };\n\n            this.getNode = function (connectionMode, selectRandom) {\n\n                if (connectionMode === 'AUTO' || connectionMode === 0) {\n                    var i = 0;\n\n                    if (selectRandom) {\n                        i = Math.floor(Math.random() * this.getNodesCount());\n                    }\n                    return getPeerNode(i);\n                } else if (connectionMode === 'HTTPS') {\n\n                    return OptionsService.getOption('HTTPS_URL');\n\n                } else if (connectionMode === 'FOUNDATION') {\n\n                    return OptionsService.getOption('FOUNDATION_URL');\n\n                } else if (connectionMode === 'MANUAL') {\n\n                    return OptionsService.getOption('USER_NODE_URL');\n\n                }else if (connectionMode === 'DEVTESTNET') {\n\n                    return OptionsService.getOption('DEVTESTNET_URL');\n\n                } else if (connectionMode === 'TESTNET') {\n\n                    return OptionsService.getOption('TESTNET_URL');\n\n                }else if (connectionMode === 'LOCALTESTNET') {\n\n                    return OptionsService.getOption('LOCALTESTNET_URL');\n\n                }\n                return getLocalNode();\n\n            };\n\n            this.getNodeUrl = function (connectionMode, selectRandom) {\n\n                var node = this.getNode(connectionMode, selectRandom);\n\n                if (typeof node === 'string') {\n                    return node;\n                }\n\n                if(!node._id){\n                    return baseConfig.FALLBACK_HOST_URL;\n                }\n\n                var url = node._id + ':' + node.apiServerPort;\n\n                if (connectionMode === 'HTTPS') {\n                    url = 'https://' + node._id;\n                }\n\n                if (!/^https?:\\/\\//i.test(url)) {\n                    url = 'http://' + url;\n                }\n\n                return url;\n            };\n\n            function appendPortIfNotPresent(url, port) {\n\n                var parser = new URL(url);\n\n                if (!parser.port) {\n                    return url + ':' + port;\n                }\n\n                return url;\n            }\n\n            this.hasLocal = function () {\n                return hasLocal();\n            };\n\n            this.getLocalNodeUrl = function () {\n                var node = this.getNode(true);\n\n                if (node) {\n                    var port = node.apiServerPort;\n                    return 'http://localhost:' + port;\n                }\n                throw new Error('Local node not available');\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('node').controller('NodeController',\n        ['NodeService', 'OptionsService', '$scope', function (NodeService, OptionsService, $scope) {\n\n            $scope.init=function(){\n                $scope.connectedURL=NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'));\n                $scope.totalNodes=NodeService.getNodesCount();\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('node').service('TransactionService',\n    ['SessionStorageService', 'baseConfig', 'Restangular', 'loginConfig', 'CryptoService', 'controlConfig',\n        '$rootScope', 'NodeService', 'OptionsService',\n        function (SessionStorageService, baseConfig, Restangular, loginConfig, CryptoService, controlConfig,\n                  $rootScope, NodeService, OptionsService) {\n\n            this.createTransaction = function (requestParameters, messageParameters, phasingParameters) {\n                var finalJson = {};\n\n                return this.getBlockChainStatus().then(function (success) {\n                    SessionStorageService.saveToSession(baseConfig.SESSION_CURRENT_BLOCK, success.numberOfBlocks);\n                    if (!phasingParameters) {\n                        phasingParameters = createPhasingParameters();\n                    }\n                    finalJson = copyJson(requestParameters, finalJson);\n                    finalJson = copyJson(phasingParameters, finalJson);\n                    finalJson = copyJson(messageParameters, finalJson);\n\n                    Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                        OptionsService.getOption('RANDOMIZE_NODES')));\n\n                    return Restangular.all(baseConfig.apiEndPoint).customPOST('', '', finalJson, '');\n                });\n\n            };\n\n            this.getBlockChainStatus = function () {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getBlockchainStatus',\n                };\n                return Restangular.all(baseConfig.apiEndPoint).customGET('', params);\n            };\n\n            function copyJson(fromJson, toJson) {\n                fromJson = fromJson || {};\n                toJson = toJson || {};\n                for (var key in fromJson) {\n                    if (fromJson.hasOwnProperty(key)) {\n                        toJson[key] = toJson[key] || fromJson[key];\n                    }\n                }\n                return toJson;\n            }\n\n            function createPhasingParameters() {\n                var hasPhasing = SessionStorageService.getFromSession(\n                    controlConfig.SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY);\n                var phasingParams = {};\n                if (hasPhasing) {\n                    var accountPhasingOptions = SessionStorageService.getFromSession(\n                        controlConfig.SESSION_ACCOUNT_CONTROL_JSONCONTROL_KEY);\n                    phasingParams.phased = true;\n                    phasingParams.phasingVotingModel = accountPhasingOptions.votingModel;\n                    phasingParams.phasingQuorum = accountPhasingOptions.quorum;\n                    phasingParams.phasingMinBalance = accountPhasingOptions.minBalance;\n                    phasingParams.phasingMinBalanceModel = accountPhasingOptions.minBalanceModel;\n                    phasingParams.phasingWhitelisted =\n                        getWhitelistedAccountsFromPhasingJson(accountPhasingOptions.whitelist);\n                    var blockHeight = SessionStorageService.getFromSession(baseConfig.SESSION_CURRENT_BLOCK) || 0;\n                    phasingParams.phasingFinishHeight = blockHeight + $rootScope.options.TX_HEIGHT;\n                }\n\n                return phasingParams;\n            }\n\n            function getWhitelistedAccountsFromPhasingJson(controlWhiteListJson) {\n                var accounts = [];\n                for (var i = 0; i < controlWhiteListJson.length; i++) {\n                    accounts[i] = controlWhiteListJson[i].whitelisted;\n                }\n                return accounts;\n            }\n\n        }\n    ])\n;\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('clientAlert', ['baseClient', 'ui.router', 'ui.bootstrap']);\n\nangular.module('clientAlert').constant('alertConfig', {\n    'mainAlertName': 'main',\n    'sendTokenModalAlert': 'sendToken',\n    'setInfoModalAlert': 'setInfo',\n    'leaseBalanceModalAlert': 'leaseBalance',\n    'startFundingMonitorModalAlert': 'startFundingMonitor',\n    'blockGenerationModalAlert': 'blockGeneration',\n    'setApproveTransactionAlert': 'approveTransaction',\n    'issueAssetModalAlert': 'issueAsset',\n    'deleteAssetModalAlert': 'deleteAsset',\n    'cancelBidOrderModalAlert': 'cancelBidOrder',\n    'transferAssetModalAlert': 'transferAsset',\n    'deleteCurrencyModalAlert': 'deleteCurrency',\n    'transferCurrencyModalAlert': 'transferCurrency',\n    'setAccountControlModalAlert': 'setAccountControl',\n    'optionModalAlert': 'options',\n    'createPollModalAlert': 'createPoll',\n    'buyAliasModalAlert': 'buyAlias',\n    'cancelAliasModalAlert': 'cancelAlias',\n    'deleteAliasModalAlert': 'deleteAlias',\n    'editAliasModalAlert': 'editAlias',\n    'setAliasModalAlert': 'setAlias',\n    'transferAliasModalAlert': 'transferAlias',\n    'dividendPaymentModalAlert': 'dividendPayment',\n    'placeAssertOrderModalAlert': 'placeAssertOrder',\n    'issueCurrencyModalAlert': 'issueCurrency',\n    'readMessageModalAlert': 'readMessage',\n    'sendMessageModalAlert': 'sendMessage',\n    'castVoteModalAlert': 'castVote',\n    'controlApproveModalAlert': 'controlApprove',\n    'controlRemoveModalAlert': 'controlRemove',\n    'publishExchangeOfferModalAlert': 'publishExchangeOffer',\n    'buyCurrencyModalAlert': 'buyCurrency',\n    'sellCurrencyModalAlert': 'sellCurrency',\n    'currencyReserveClaimModalAlert': 'currencyReserveClaim',\n    'currencyReserveIncreaseModalAlert': 'currencyReserveIncrease',\n    'welcomeFaucetModalAlert': 'welcomeFaucet',\n    'claimSecretTransaction': 'claimSecretTransaction',\n    'decodeToken': 'decodeToken',\n    'parseTransaction': 'parseTransaction',\n    'broadcastTransaction': 'broadcastTransaction',\n    'calculateHash': 'calculateHash',\n    'chainStatistics': 'chainStatistics',\n    'expectedAssetOrderModalAlert': 'expectedAssetOrder',\n    'setPropertyAlert': 'setProperty',\n    'deletePropertyAlert': 'deleteProperty',\n    'createCampaignAlert': 'createCampaign',\n    'reserveCampaignAlert': 'reserveCampaign',\n    'createSubscriptionAlert': 'createSubscription',\n    'createEscrowAlert':'createEscrow',\n    'signEscrowAlert':'signEscrow',\n    'createShuffleModalAlert': 'createShuffle',\n    'registerShuffleModalAlert': 'registerShuffle',\n    'startShuffleModalAlert': 'startShuffle',\n    'stopShuffleModalAlert': 'stopShuffle',\n    'cancelShuffleModalAlert': 'cancelShuffle',\n    'readNewsAlert': 'readNews',\n    'deleteAssetFullModalAlert': 'deleteAssetFull',\n    'createATModalAlert': 'createAT',\n    'startFundingMonitorAlert': 'startFundingMonitor',\n    'stopFundingMonitorAlert': 'stopFundingMonitor',\n});\n\nangular.module('clientAlert')\n       .service('AlertService', ['$rootScope', 'alertConfig', function ($rootScope, alertConfig) {\n\n           this.alerts = [];\n\n           this.alertHandlers = [];\n\n           var ALERT_NAME = alertConfig.mainAlertName;\n\n           this.addAlert = function (alert, alertName) {\n               alertName = getAlertName(alertName);\n               if (!this.alerts[alertName]) {\n                   this.alerts[alertName] = [];\n               }\n               this.alerts[alertName].push(alert);\n               this.notify(alertName);\n           };\n\n           this.closeAlert = function (index, alertName) {\n               alertName = getAlertName(alertName);\n               if (!this.alerts[alertName]) {\n                   this.alerts[alertName] = [];\n               }\n               this.alerts[alertName].splice(index, 1);\n               this.notify();\n           };\n\n           this.getAlerts = function () {\n               return this.alerts;\n           };\n\n           this.subscribe = function (scope, callback, alertName) {\n               var handler = $rootScope.$on(getAlertName(alertName), callback);\n               scope.$on('$destroy', handler);\n           };\n\n           this.notify = function (alertName) {\n               $rootScope.$emit(getAlertName(alertName));\n           };\n\n           this.getNoConnectionMessage = function (error) {\n               return {\n                   type: 'danger',\n                   msg: 'Sorry, an error occured! Reason: Bad Connection'\n               };\n           };\n\n           function getAlertName(alertName) {\n               if (!alertName) {\n                   return ALERT_NAME;\n               }\n               return alertName;\n           }\n\n           this.getAlertName = function (alertName) {\n               return getAlertName(alertName);\n           };\n\n       }]);\n\nangular.module('clientAlert').controller('AlertDemoCtrl', ['$scope', 'AlertService', function ($scope, AlertService) {\n\n    $scope.alerts = [];\n\n    $scope.addAlert = function (alert, alertName) {\n        AlertService.addAlert(alert, alertName);\n    };\n\n    $scope.closeAlert = function (index, alertName) {\n        AlertService.closeAlert(index, alertName);\n    };\n\n    $scope.alertInit = function (alertName) {\n        AlertService.subscribe($scope, handleAlertEvent, alertName);\n    };\n\n    function handleAlertEvent() {\n        $scope.alerts = AlertService.getAlerts();\n    }\n\n\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\n\nangular.module('addressbook', ['baseClient', 'ui.router', 'ui.bootstrap', 'indexedDB']);\n\nangular.module('addressbook').constant('addressBookConfig', {\n    'tableAddressBook': 'addressBook'\n});\n\nangular.module('addressbook')\n    .config(['$indexedDBProvider', 'addressBookConfig', function ($indexedDBProvider, addressBookConfig) {\n        $indexedDBProvider\n            .connection('clientIndexedDB')\n            .upgradeDatabase(1, function (event, db, tx) {\n                var objStore = db.createObjectStore(addressBookConfig.tableAddressBook,\n                    {keyPath: ['publicKey', 'accountRS']});\n                objStore.createIndex('tag_idx', 'tags', {unique: false});\n                objStore.createIndex('public_key_idx', 'publicKey', {unique: false});\n                objStore.createIndex('account_rs_idx', 'accountRS', {unique: false});\n            });\n    }]);\n\n\nangular.module('addressbook')\n    .service('AddressService', ['$indexedDB', 'addressBookConfig', 'SessionStorageService', 'loginConfig',\n        function ($indexedDB, addressBookConfig, SessionStorageService, loginConfig) {\n\n            this.createAddress = function (publicKey, accountRS, tag, successCallBack, errorCallBack) {\n                var bookStore = $indexedDB.openStore(addressBookConfig.tableAddressBook, function (store) {\n                    store.insert({'publicKey': publicKey, 'accountRS': accountRS, 'tags': tag})\n                        .then(successCallBack, errorCallBack);\n                });\n            };\n\n            this.getAllContacts = function (publicKey, successCallBack, errorCallBack) {\n                $indexedDB.openStore(addressBookConfig.tableAddressBook, function (contacts) {\n\n                    var find = contacts.query();\n                    find = find.$eq(publicKey);\n                    find = find.$index('public_key_idx');\n                    contacts.eachWhere(find).then(successCallBack, errorCallBack);\n\n                });\n            };\n\n            this.clearContacts = function (successCallback, errorCallback) {\n                $indexedDB.openStore(addressBookConfig.tableAddressBook, function (contacts) {\n                    contacts.clear().then(successCallback, errorCallback);\n                });\n            };\n\n            this.getContactsCount = function (successCallBack, errorCallBack) {\n                $indexedDB.openStore(addressBookConfig.tableAddressBook, function (store) {\n                    store.count().then(function (e) {\n                        successCallBack(e);\n                    });\n                });\n            };\n\n            this.getAccountDetailsFromSession = function (keyName) {\n                var accountDetails = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_DETAILS_KEY);\n                if (keyName) {\n                    return accountDetails[keyName];\n                }\n                return accountDetails;\n            };\n\n            this.deleteContact = function (publicKey, accountRS, successCallback, errorCallback) {\n                $indexedDB.openStore(addressBookConfig.tableAddressBook, function (contacts) {\n                    var object = [publicKey, accountRS];\n                    contacts.delete(object).then(successCallback, errorCallback);\n                });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('addressbook').controller('AddressBookCtrl',\n    ['$scope', 'AddressService', 'DTOptionsBuilder', 'DTColumnBuilder', 'searchTermFilter', '$uibModalInstance',\n        '$compile', 'params',\n        function ($scope, AddressService, DTOptionsBuilder, DTColumnBuilder, searchTermFilter, $uibModalInstance,\n                  $compile, params) {\n\n            var handler = $scope.$on('reload-address-book', reloadData);\n\n            $scope.$on('$destroy', handler);\n\n            $scope.contact = {};\n            $scope.contact.account = params.accountRS;\n            $scope.contact.tag = params.tag;\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n\n            function rowCallback(nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                // Unbind first in order to avoid any duplicate handler (see\n                // https://github.com/l-lin/angular-datatables/issues/87)\n                $('td', nRow).unbind('click');\n                $('td', nRow).bind('click', function () {\n                    $scope.$apply(function () {\n                        if (params.closeOnClick) {\n                            $uibModalInstance.close(aData);\n                        }\n                    });\n                });\n                return nRow;\n            }\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('serverSide', false)\n                .withDataProp('accounts')\n                .withOption('processing', true)\n                .withOption('info', false)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('rowCallback', rowCallback)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                        rowCallback(nRow, aData, iDisplayIndex, iDisplayIndexFull);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n\n                    var publicKey = AddressService.getAccountDetailsFromSession('publicKey');\n                    AddressService.getAllContacts(publicKey, function (success) {\n                        if (!success) {\n                            success = [];\n                        }\n                        var accounts = {'accounts': success};\n                        callback({\n                            'iTotalRecords': accounts.accounts.length,\n                            'iTotalDisplayRecords': accounts.accounts.length,\n                            'accounts': accounts.accounts || []\n                        });\n                    }, function (error) {\n                    });\n\n                })\n                .withDisplayLength(5).withBootstrap();\n\n            $scope.dtColumns = [\n                DTColumnBuilder.newColumn('accountRS').withTitle('Account').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('tags').withTitle('Tag').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n                DTColumnBuilder.newColumn('accountRS').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a href ng-click=\"deleteContact(\\'' + data +\n                            '\\')\" ng-controller=\"AddressBookEditCtrl\"> <button ng-disabled=\"\" class=\"btn btn-danger btn-xs\"> <i class=\"fa fa-close\" aria-hidden=\"true\"></i> </button> </a>';\n                    })\n            ];\n\n            $scope.dtColumnsLite = [\n                DTColumnBuilder.newColumn('accountRS').withTitle('Account').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('tags').withTitle('Tag').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('accountRS').withTitle('Actions').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button ng-disabled=\"\" class=\"btn btn-success btn-xs\" autofocus> <i class=\"fa fa-plus\" aria-hidden=\"true\"></i> </button>';\n                    })\n\n            ];\n\n            function reloadData() {\n                $scope.dtInstance._renderer.rerender();\n            }\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n\n        }]);\n\n\nangular.module('addressbook').controller('AddressBookEditCtrl',\n    ['$scope', 'AddressService', '$rootScope',\n        function ($scope, AddressService, $rootScope) {\n\n            $scope.createNewContact = function (accountRs, tag) {\n                var publicKey = AddressService.getAccountDetailsFromSession('publicKey');\n                AddressService.createAddress(publicKey, accountRs, tag, function () {\n                    $rootScope.$broadcast('reload-address-book');\n                }, function (e) {\n                    console.log('error ' + e);\n                });\n            };\n\n            $scope.deleteContact = function (accountRS) {\n                var publicKey = AddressService.getAccountDetailsFromSession('publicKey');\n                AddressService.deleteContact(publicKey, accountRS, function () {\n                    $rootScope.$broadcast('reload-address-book');\n                }, function () {\n                    console.log('error');\n                });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('options', ['baseClient', 'ui.router', 'ui.bootstrap', 'indexedDB', 'node', 'clientAlert']);\n\nangular.module('options').constant('optionsConfig', {\n    'tableOptions': 'options'\n});\n\nangular.module('options').constant('DEFAULT_OPTIONS', {\n    'DEADLINE': '60',\n    'REFRESH_INTERVAL_MILLI_SECONDS': '60000',\n    'TX_HEIGHT': 7 * 1440,\n    'USER_NODE_URL': 'http://localhost:23457',\n    'USE_LOCAL_NODE': 0,\n    'AUTO_UPDATE': 1,\n    'CONNECTION_MODE': 'TESTNET', // 'DEVTESTNET' TESTNET', // AUTO\n    'VERSION': '0.8.1' + 'b',\n    'RANDOMIZE_NODES': 1,\n    'TESTNET': 1,\n    'TESTNET_URL': 'http://185.35.138.140:9876',\n    'DEVTESTNET_URL': 'http://185.35.138.140:9000',\n    'LOCALTESTNET_URL': 'http://localhost:9876',\n    'FOUNDATION_URL': 'http://46.244.20.41:23457',\n    'HTTPS_URL': 'https://ssl.infinity-economics.org',\n    'LOCAL_HOST_URL': 'http://localhost:23457',\n    'EXTENSIONS': 1\n});\n\nangular.module('options')\n       .config(['$indexedDBProvider', 'optionsConfig', function ($indexedDBProvider, optionsConfig) {\n           $indexedDBProvider\n               .connection('clientIndexedDB')\n               .upgradeDatabase(2, function (event, db, tx) {\n                   var objStore = db.createObjectStore(optionsConfig.tableOptions,\n                       {keyPath: ['publicKey', 'optionName']});\n                   objStore.createIndex('value_idx', 'value', {unique: false});\n                   objStore.createIndex('public_key_idx', 'publicKey', {unique: false});\n                   objStore.createIndex('option_name_idx', 'optionName', {unique: false});\n               });\n       }]);\n\nangular.module('options')\n       .service('OptionsService',\n           ['$indexedDB', 'optionsConfig', 'SessionStorageService', 'DEFAULT_OPTIONS',\n               '$rootScope', 'baseConfig',\n               function ($indexedDB, optionsConfig, SessionStorageService, DEFAULT_OPTIONS,\n                         $rootScope, baseConfig) {\n\n                   this.insertOption = function (publicKey, optionName, value, successCallBack, errorCallBack) {\n                       var bookStore = $indexedDB.openStore(optionsConfig.tableOptions, function (store) {\n                           store.insert({'publicKey': publicKey, 'optionName': optionName, 'value': value})\n                                .then(successCallBack, errorCallBack);\n                       });\n                   };\n\n                   this.insertOptions = function (values, successCallBack, errorCallBack) {\n                       var bookStore = $indexedDB.openStore(optionsConfig.tableOptions, function (store) {\n                           store.insert(values).then(successCallBack, errorCallBack);\n                       });\n                   };\n\n                   this.updateOptions = function (values, successCallBack, errorCallBack) {\n                       var bookStore = $indexedDB.openStore(optionsConfig.tableOptions, function (store) {\n                           store.upsert(values).then(successCallBack, errorCallBack);\n                       });\n                   };\n\n                   this.getAllOptions = function (publicKey, successCallBack, errorCallBack) {\n                       if (publicKey) {\n                           $indexedDB.openStore(optionsConfig.tableOptions, function (options) {\n                               var find = options.query();\n                               find = find.$eq(publicKey);\n                               find = find.$index('public_key_idx');\n                               options.eachWhere(find).then(successCallBack, errorCallBack);\n                           });\n                       }\n                   };\n\n                   this.clearOptions = function (successCallback, errorCallback) {\n                       $indexedDB.openStore(optionsConfig.tableOptions, function (options) {\n                           options.clear().then(successCallback, errorCallback);\n                       });\n                   };\n\n                   this.getContactsCount = function (successCallBack, errorCallBack) {\n                       $indexedDB.openStore(addressBookConfig.tableAddressBook, function (store) {\n                           store.count().then(function (e) {\n                               console.log(e);\n                               successCallBack(e);\n                           });\n                       });\n                   };\n\n                   this.loadOptions = function (publicKey, successCallback, errorCallback) {\n                       this.getAllOptions(publicKey, function (options) {\n\n                           var finalOptions = JSON.parse(JSON.stringify(DEFAULT_OPTIONS));\n\n                           for (var i = 0; i < options.length; i++) {\n                               var optionObject = options[i];\n                               finalOptions[optionObject.optionName] = optionObject.value;\n                           }\n                           SessionStorageService.saveToSession(baseConfig.SESSION_APP_OPTIONS, finalOptions);\n                           successCallback(finalOptions);\n                       }, function (e) {\n                           errorCallback(e);\n                       });\n                   };\n\n                   this.clearContacts = function (successCallback, errorCallback) {\n                       $indexedDB.openStore(optionsConfig.tableOptions, function (options) {\n                           options.clear().then(successCallback, errorCallback);\n                       });\n                   };\n\n                   this.getOption = function (optionName, publicKey) {\n                       var options = SessionStorageService.getFromSession(baseConfig.SESSION_APP_OPTIONS);\n                       if (options) {\n                           if (typeof options[optionName] === 'undefined') {\n                               return DEFAULT_OPTIONS[optionName];\n                           }\n                           return options[optionName];\n                       }\n                       return DEFAULT_OPTIONS[optionName];\n                   };\n\n               }]);\n\nangular.module('options').service('OptionsConfigureService', ['CommonsService', 'NodeService', 'SessionStorageService',\n    'LocalHostService', 'nodeConfig', '$rootScope',\n\n    function (CommonsService, NodeService, SessionStorageService, LocalHostService, nodeConfig, $rootScope) {\n        this.setUserPeerNode = function () {\n\n            if ($rootScope.options.CONNECTION_MODE !== 'AUTO' && !isNodeSameAsInSession()) {\n                LocalHostService.getPeerState($rootScope.options.USER_NODE_URL).then(function (response) {\n                    var uri = new URL($rootScope.options.USER_NODE_URL);\n                    response._id = uri.hostname;\n                    SessionStorageService.saveToSession(nodeConfig.SESSION_LOCAL_NODE, response);\n                    SessionStorageService.saveToSession(nodeConfig.SESSION_HAS_LOCAL, true);\n                }, function (error) {\n                    SessionStorageService.saveToSession(nodeConfig.SESSION_HAS_LOCAL, false);\n                });\n\n            }\n\n        };\n\n        function isNodeSameAsInSession() {\n            var node = SessionStorageService.getFromSession(nodeConfig.SESSION_LOCAL_NODE);\n            if (node) {\n                var uri = new URL($rootScope.options.USER_NODE_URL);\n                return uri.hostname === node._id;\n\n            }\n            return false;\n        }\n\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('options').controller('OptionsCtrl',\n    ['$scope', 'OptionsService', '$uibModalInstance', '$compile', 'params', '$rootScope', 'DEFAULT_OPTIONS',\n        'CommonsService', 'NodeService', 'LocalHostService', '$validation', 'AlertService', 'alertConfig',\n        'SessionStorageService', 'baseConfig', '$state',\n        function ($scope, OptionsService, $uibModalInstance, $compile, params, $rootScope, DEFAULT_OPTIONS,\n                  CommonsService, NodeService, LocalHostService, $validation, AlertService, alertConfig,\n                  SessionStorageService, baseConfig, $state) {\n\n            $scope.$watchCollection('optionsForm', function (optionsForm) {\n                //$validation.validate(optionsForm);\n            });\n\n            $scope.loadOptions = function () {\n\n                // $scope.updateConnectionMode(form);\n\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n\n                OptionsService.loadOptions(publicKey, function (optionsObject) {\n\n                    // console.log(optionsObject)\n\n                    copyJson(optionsObject, $scope.optionsForm);\n\n                    $rootScope.options = optionsObject;\n                    SessionStorageService.saveToSession(baseConfig.SESSION_APP_OPTIONS, optionsObject);\n                }, function (e) {\n                    console.log(e);\n                    $rootScope.options = DEFAULT_OPTIONS;\n                    SessionStorageService.saveToSession(baseConfig.SESSION_APP_OPTIONS, DEFAULT_OPTIONS);\n                });\n            };\n\n            function cloneJson(json) {\n                return JSON.parse(JSON.stringify(json));\n            }\n\n            function copyJson(fromJson, toJson) {\n                fromJson = fromJson || {};\n                toJson = toJson || {};\n                for (var key in fromJson) {\n                    if (fromJson.hasOwnProperty(key)) {\n                        if (!isNaN(fromJson[key])) {\n                            fromJson[key] = parseInt(fromJson[key]);\n                        }\n                        toJson[key] = fromJson[key];\n                    }\n                }\n                return toJson;\n            }\n\n            function getOptionsJsonObject(options) {\n                var finalJson = {};\n                for (var key in DEFAULT_OPTIONS) {\n                    if (DEFAULT_OPTIONS.hasOwnProperty(key)) {\n                        finalJson[key] = options[key];\n                    }\n                }\n                return finalJson;\n            }\n\n            $scope.getOption = function (key) {\n                return OptionsService.getOption(key);\n            };\n\n            $scope.validateForm = function () {\n                var connectionMode = $scope.optionsForm.CONNECTION_MODE;\n                if (isRequired) {\n                    return $scope.isValidUrl();\n                } else {\n                    return Promise.reject('Form is not valid');\n                }\n\n            };\n\n            $scope.validateAndUpdate = function (form) {\n                var url = form.USER_NODE_URL;\n                var connectionMode = form.CONNECTION_MODE;\n\n                $scope.updateConnectionMode(form);\n\n                if (connectionMode === 'AUTO') {\n                    $scope.updateOptions(form);\n                }\n                else if (url) {\n                    LocalHostService.getPeerState(url).then(function (success) {\n                        $scope.updateOptions(form);\n                    }, function (error) {\n                        console.log('error');\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: This node URL is not valid'\n                            }, alertConfig.optionModalAlert\n                        );\n                    });\n                }\n            };\n\n            $scope.updateOptions = function (form) {\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var options = getOptionsJsonObject($scope.optionsForm);\n                var finalOptions = [];\n                for (var key in options) {\n                    if (options.hasOwnProperty(key)) {\n                        var option = {'publicKey': publicKey, 'optionName': key, 'value': options[key]};\n                        finalOptions.push(option);\n                    }\n                }\n                OptionsService.updateOptions(finalOptions, function (success) {\n\n                    var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                    OptionsService.loadOptions(publicKey, function (optionsObject) {\n                        $rootScope.options = optionsObject;\n                        SessionStorageService.saveToSession(baseConfig.SESSION_APP_OPTIONS, optionsObject);\n                        NodeService.clearNodeConfig();\n                        $rootScope.$broadcast('reload-options');\n                        $scope.cancel();\n                        $state.reload();\n\n                    }, function (e) {\n                        console.log(e);\n                        $rootScope.options = DEFAULT_OPTIONS;\n                        SessionStorageService.saveToSession(baseConfig.SESSION_APP_OPTIONS, DEFAULT_OPTIONS);\n                        $scope.cancel();\n                        $state.reload();\n                    });\n\n                }, function (e) {\n                    $scope.cancel();\n                });\n\n            };\n\n            $scope.validateForm = function (form) {\n                $validation.validate(form);\n            };\n\n            $scope.CONNECTION_MODES =\n                ['AUTO', 'HTTPS', 'FOUNDATION', 'MANUAL', 'LOCAL_HOST', 'TESTNET', 'LOCALTESTNET', 'DEVTESTNET'];\n\n            $scope.updateConnectionMode = function (form) {\n\n                var connectionMode = form.CONNECTION_MODE;\n\n                if (connectionMode === 'LOCAL_HOST') {\n                    form.USER_NODE_URL = 'http://localhost:23457';\n                    form.RANDOMIZE_NODES = 0;\n                    form.TESTNET = false;\n                    form.EXTENSIONS = 1;\n                }\n                else if (connectionMode === 'MANUAL') {\n                    form.RANDOMIZE_NODES = 0;\n                    form.TESTNET = false;\n                    form.EXTENSIONS = 1;\n                }\n                else if (connectionMode === 'HTTPS') {\n                    form.USER_NODE_URL = 'https://ssl.infinity-economics.org';\n                    form.RANDOMIZE_NODES = 0;\n                    form.TESTNET = false;\n                    form.EXTENSIONS = 1;\n                }\n                else if (connectionMode === 'AUTO') {\n                    form.RANDOMIZE_NODES = 1;\n                    form.TESTNET = false;\n                    form.EXTENSIONS = 1;\n                }\n                else if (connectionMode === 'FOUNDATION') {\n                    form.USER_NODE_URL = 'http://46.244.20.41:23457';\n                    form.RANDOMIZE_NODES = 0;\n                    form.TESTNET = false;\n                    form.EXTENSIONS = 1;\n                }\n                else if (connectionMode === 'TESTNET') {\n                    form.USER_NODE_URL = 'http://185.35.138.140:9876';\n                    form.RANDOMIZE_NODES = 0;\n                    form.TESTNET = true;\n                    form.EXTENSIONS = 1;\n                }\n                else if (connectionMode === 'LOCALTESTNET') {\n                    form.USER_NODE_URL = 'http://localhost:9876';\n                    form.RANDOMIZE_NODES = 0;\n                    form.TESTNET = true;\n                    form.EXTENSIONS = 1;\n                }\n                else if (connectionMode === 'DEVTESTNET') {\n                    form.USER_NODE_URL = 'http://185.35.138.140:9000';\n                    form.RANDOMIZE_NODES = 0;\n                    form.TESTNET = true;\n                    form.DEVNET = true;\n                    form.EXTENSIONS = 1;\n                }\n\n                $scope.validateForm(form);\n            };\n\n            $scope.isValidUrl = function () {\n                var url = $scope.optionsForm.USER_NODE_URL;\n                if (url) {\n                    return LocalHostService.isValidUrl(url);\n                } else {\n                    return false;\n                }\n            };\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('exchanges', ['baseClient']);\n\nangular.module('exchanges').constant('exchangesConfig', {\n    'BLOCKR_URL_END_POINT': 'https://blockexplorer.com/api/',\n    'BLOCKR_ADDRESS_END_POINT': 'addr',\n});\n\n\n// /api/addr/[:addr]/balance\n// /api/addr/[:addr]/totalReceived\n// /api/addr/[:addr]/totalSent\n// /api/addr/[:addr]/unconfirmedBalance\n\nangular.module('exchanges')\n    .factory('BlockrRestangular', ['Restangular', 'exchangesConfig', function (Restangular, exchangesConfig) {\n        return Restangular.withConfig(function (RestangularConfigurer) {\n            RestangularConfigurer.setBaseUrl(exchangesConfig.BLOCKR_URL_END_POINT);\n        });\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('exchanges').service('BlockrService', ['BlockrRestangular', 'exchangesConfig',\n    function (BlockrRestangular, exchangesConfig) {\n\n        this.getAddressBalance = function (address) {\n            return BlockrRestangular.all( exchangesConfig.BLOCKR_ADDRESS_END_POINT ).one(address).get();\n        };\n\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('exchanges').controller('BlockrMainController', ['$scope', 'BlockrService', '$uibModal',\n    function ($scope, BlockrService, $uibModal) {\n\n        $scope.openBtcDetailsModal = function (address) {\n            var modalInstance = $uibModal.open({\n                animation: true,\n                templateUrl: 'exchanges/modals/btc-details.html',\n                size: 'lg',\n                controller: 'BlockrController',\n                resolve: {\n                    params: function () {\n                        return {\n                            address: address,\n                        };\n                    }\n                }\n            });\n        };\n    }]);\n\nangular.module('exchanges').controller('BlockrController',\n    ['$scope', 'BlockrService', '$uibModalInstance', 'params', 'DTColumnBuilder', 'DTOptionsBuilder', '$compile',\n        function ($scope, BlockrService, $uibModalInstance, params, DTColumnBuilder, DTOptionsBuilder, $compile) {\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.getBtcAdressBalance = function () {\n                $scope.BlockrServicePromise=BlockrService.getAddressBalance(params.address).then(function (success) {\n\n                    $scope.addrStr = success.addrStr;\n                    $scope.balance = success.balance;\n                    $scope.totalReceived = success.totalReceived;\n                    $scope.totalSent = success.totalSent;\n                    $scope.unconfirmedBalance = success.unconfirmedBalance;\n                    $scope.txApperances = success.txApperances;\n                    $scope.balance = success.balance;\n\n                }, function (error) {\n\n                });\n            };\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('login',\n    ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node', 'addressbook', 'options']);\n\nangular.module('login').config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n\n    $stateProvider.state('client.welcome', {\n        url: '^/welcome',\n        templateUrl: './login/views/welcome.html',\n        controller: 'LoginCtrl'\n    }).state('client.login', {\n        url: '^/login',\n        templateUrl: './login/views/login.html',\n        controller: 'LoginCtrl'\n    }).state('client.signedin.dashboard', {\n        url: '^/dashboard',\n        templateUrl: './commons/signedin.html',\n        controller: 'LoginCtrl'\n    }).state('client.logout', {\n        url: '^/logout',\n        templateUrl: './login/views/welcome.html',\n        controller: 'LoginCtrl',\n        params: {\n            sessionCleared: false,\n            localCleared: false\n        }\n    });\n\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('login').service('LoginService', ['CryptoService', 'loginConfig', 'SessionStorageService','$rootScope',\n    function (CryptoService, loginConfig, SessionStorageService,$rootScope) {\n\n        this.calculateAccountDetailsFromSecret = function (secret, storeToSession) {\n\n            SessionStorageService.deleteFromSession(loginConfig.SESSION_ACCOUNT_DETAILS_KEY);\n            SessionStorageService.deleteFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n\n            var accountDetails = CryptoService.getAccountDetails(secret);\n\n            if (storeToSession) {\n                SessionStorageService.saveToSession(loginConfig.SESSION_ACCOUNT_DETAILS_KEY, accountDetails);\n            }\n\n            $rootScope.$broadcast('reload-options');\n\n            return accountDetails;\n        };\n\n        this.calculatePrivateKeyFromSecret = function (secret, storeToSession) {\n\n            SessionStorageService.deleteFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n\n            var privateKey = CryptoService.secretPhraseToPrivateKey(secret);\n\n            if (storeToSession) {\n                SessionStorageService.saveToSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY, privateKey);\n            }\n\n            return privateKey;\n        };\n\n        this.generatePassPhrase = function () {\n            return CryptoService.generatePassPhrase();\n        };\n\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('login').controller('LoginCtrl',\n    ['$scope', 'LoginService', 'SessionStorageService', 'loginConfig', '$state', '$uibModal', 'peerConfig',\n        'nodeConfig', 'NodeService', '$stateParams', 'OptionsService', 'CommonsService', '$rootScope',\n        'OptionsConfigureService', 'baseConfig','LocalHostService','PeerService',\n        function ($scope, LoginService, SessionStorageService, loginConfig, $state, $uibModal, peerConfig, nodeConfig,\n                  NodeService, $stateParams, OptionsService, CommonsService, $rootScope, OptionsConfigureService,\n                  baseConfig,LocalHostService,PeerService) {\n\n            $scope.loginToAccount = function (secret, rememberSecret) {\n                rememberSecret=true;//We are making it default now\n\n                LoginService.calculateAccountDetailsFromSecret(secret, true);\n\n                if (rememberSecret) {\n                  LoginService.calculatePrivateKeyFromSecret(secret, true);\n                }\n\n                $state.go('client.signedin.account.details');\n            };\n\n            $scope.accountDetails = {};\n\n            $scope.getAccountFromSession = function () {\n                $scope.accountDetails = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_DETAILS_KEY);\n                $scope.privateKey = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                $scope.activePeer = NodeService.getNode(false);\n                $scope.localPeer = SessionStorageService.getFromSession(nodeConfig.SESSION_LOCAL_NODE);\n            };\n\n            $scope.openSignUpModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'login/views/signup-form.html',\n                    size: 'lg',\n                    controller: 'SignUpCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n\n                });\n            };\n\n            $scope.openSignOutModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'login/views/modals/logout-confirm.html',\n                    size: 'lg',\n                    controller: 'SignOutCtrl',\n                });\n            };\n\n            $scope.postLogOut = function () {\n                $scope.sessionCleared = $stateParams.sessionCleared;\n                $scope.localCleared = $stateParams.localCleared;\n            };\n\n            $scope.$on('reload-options', function () {\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                LocalHostService.getPeerState(OptionsService.getOption('USER_NODE_URL'))\n                    .then(function (response) {\n                        var uri = new URL(OptionsService.getOption('USER_NODE_URL'));\n                        response._id = uri.hostname;\n                        SessionStorageService.saveToSession(nodeConfig.SESSION_LOCAL_NODE, response);\n                        SessionStorageService.saveToSession(nodeConfig.SESSION_HAS_LOCAL, true);\n\n                    }, function (error) {\n                        SessionStorageService.saveToSession(nodeConfig.SESSION_HAS_LOCAL, false);\n                        //$state.reload();\n                    });\n                PeerService.getPeers().then(function (response) {\n                    SessionStorageService.saveToSession(nodeConfig.SESSION_PEER_NODES, response);\n                    $rootScope.$broadcast('peers-updated');\n                });\n            });\n\n\n        }]);\n\nangular.module('login').controller('SignUpCtrl',\n    ['$scope', 'LoginService', 'SessionStorageService', 'loginConfig', '$state', '$uibModalInstance',\n        function ($scope, LoginService, SessionStorageService, loginConfig, $state, $uibModalInstance) {\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.steps = [\n                {\n                    templateUrl: 'login/views/signup-disclaimer.html',\n                    title: 'Step 1/3 - Accept Disclaimer'\n                },\n                {\n                    templateUrl: 'login/views/signup-passphrase.html',\n                    title: 'Step 2/3 - Generate Passphrase'\n                },\n                {\n                    templateUrl: 'login/views/signup-confirm.html',\n                    title: 'Step 3/3 - Confirm PassPhrase and Sign In'\n                }\n\n            ];\n\n            $scope.createNewAccount = function () {\n                $scope.secret = LoginService.generatePassPhrase();\n                $scope.accountDetails = LoginService.calculateAccountDetailsFromSecret($scope.secret, false);\n            };\n\n            $scope.confirmAndLogin = function (confirmPassPhrase,rememberSecret) {\n                rememberSecret = true;//We are making it default now\n\n                if (confirmPassPhrase === $scope.secret) {\n\n                    LoginService.calculateAccountDetailsFromSecret(confirmPassPhrase, true);\n\n                    if (rememberSecret) {\n                        LoginService.calculatePrivateKeyFromSecret($scope.secret, true);\n                    }\n\n                    $scope.cancel();\n                    $state.go('client.signedin.account.details');\n                } else {\n                    $scope.error = 'Invalid pass phrase';\n                }\n            };\n\n        }]);\n\nangular.module('login').controller('SignOutCtrl',\n    ['$scope', 'LoginService', 'SessionStorageService', 'loginConfig', '$state', '$uibModalInstance', 'AddressService',\n        'OptionsService',\n        function ($scope, LoginService, SessionStorageService, loginConfig, $state, $uibModalInstance, AddressService,\n                  OptionsService) {\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.logout = function (clearLocal) {\n                SessionStorageService.resetSession();\n                if (clearLocal) {\n                    AddressService.clearContacts();\n                    OptionsService.clearOptions();\n                }\n                $uibModalInstance.dismiss('cancel');\n                $state.go('client.logout', {'sessionCleared': true, 'localCleared': clearLocal});\n            };\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('assets', ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node','options']);\n\nangular.module('assets').constant('assetsConfig', {\n    'assetsEndPoint':'api'\n});\n\nangular.module('assets').config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n\n    $stateProvider.state('client.signedin.assets', {\n        url: '^/assets',\n        templateUrl: './assets/views/main.html',\n        abstract:true\n    }).state('client.signedin.assets.myassets', {\n        url: '^/assets/myassets',\n        templateUrl: './assets/views/myassets.html',\n        controller: 'MyAssetsCtrl'\n    }).state('client.signedin.assets.assets', {\n        url: '^/assets/assets',\n        templateUrl: './assets/views/assets.html',\n        controller: 'AssetsCtrl'\n    }).state('client.signedin.assets.openorders', {\n        url: '^/assets/orders',\n        templateUrl: './assets/views/openorders.html',\n        controller: 'AssetsOpenOrdersCtrl'\n    }).state('client.signedin.assets.trade', {\n        url: '^/assets/{assetId}/trade',\n        templateUrl: './assets/views/trade-desk.html',\n        controller: 'TradeDeskInputController'\n    }).state('client.signedin.assets.lasttrades', {\n        url: '^/assets/lastrades',\n        templateUrl: './assets/views/lasttrades.html',\n        controller: 'AllTradesCtrl'\n    }).state('client.signedin.assets.lasttransfers', {\n        url: '^/assets/lasttransfers',\n        templateUrl: './assets/views/lasttransfers.html',\n        controller: 'MyTransfersCtrl'\n    }).state('client.signedin.assets.mytrades', {\n        url: '^/assets/mytrades',\n        templateUrl: './assets/views/mytrades.html',\n        controller: 'MytradesCtrl'\n    });\n\n\n\n\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('assets').service('AssetsService',\n    ['nodeConfig', 'SessionStorageService', 'NodeService', 'baseConfig', 'assetsConfig', 'Restangular', 'loginConfig',\n        'CryptoService', 'TransactionService', '$rootScope', 'OptionsService', 'controlConfig',\n        function (nodeConfig, SessionStorageService, NodeService, baseConfig, assetsConfig, Restangular, loginConfig,\n                  CryptoService, TransactionService, $rootScope, OptionsService, controlConfig) {\n\n            this.GET_ASSET_ORDERS = {\n                'BID_ORDER': 'getBidOrders',\n                'ASK_ORDER': 'getAskOrders'\n            };\n\n            this.getAssets = function (firstIndex, lastIndex, order, orderColumn) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAllAssets',\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeCounts': true,\n                    'order': order,\n                    'orderColumn': orderColumn\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n\n            };\n\n            this.getAsset = function (asset, includeCounts) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAsset',\n                    'asset': asset,\n                    'includeCounts': includeCounts\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getAccountAssets = function (account) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAccountAssets',\n                    'account': account,\n                    'includeAssetInfo': true,\n                    'includeCounts': true,\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getAccountSingleAsset = function (account, asset) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAccountAssets',\n                    'account': account,\n                    'asset': asset,\n                    'includeAssetInfo': true\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getMultipleAssetLastTrades = function (assets) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getLastTrades',\n                    'assets': assets,\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getAccountCurrentBidOrders = function (accountRS, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAccountCurrentBidOrders',\n                    'account': accountRS,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getAccountCurrentAskOrders = function (accountRS, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAccountCurrentAskOrders',\n                    'account': accountRS,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.issueAsset = function (name, description, quantity, decimals, publicKey, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'issueAsset',\n                    'publicKey': publicKey,\n                    'quantityQNT': parseInt(quantity),\n                    'name': name,\n                    'description': description,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                    'decimals': parseInt(decimals),\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.deleteAssetShares = function (asset, quantity, fee, publicKey) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'deleteAssetShares',\n                    'publicKey': publicKey,\n                    'quantityQNT': parseInt(quantity),\n                    'asset': asset,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.deleteAssetFull = function (asset, fee, publicKey) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'deleteAsset',\n                    'publicKey': publicKey,\n                    // 'quantityQNT': parseInt(quantity),\n                    'asset': asset,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.serachAssets = function (query) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'searchAssets',\n                    'query': query\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.cancelOrder = function (order, fee, publicKey, type) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var requestType;\n                if (type === 'bid') {\n                    requestType = 'cancelBidOrder';\n                } else if (type === 'ask') {\n                    requestType = 'cancelAskOrder';\n                }\n                var params = {\n                    'requestType': requestType,\n                    'publicKey': publicKey,\n                    'order': order,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.transferAsset = function (publicKey, recipientRS, asset, quantity, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'transferAsset',\n                    'recipient': recipientRS,\n                    'asset': asset,\n                    'publicKey': publicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                    'quantityQNT': parseInt(quantity),\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.dividendPayment = function (publicKey, asset, height, amoountPerQNT, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'dividendPayment',\n                    'asset': asset,\n                    'publicKey': publicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                    'amountTQTPerQNT': parseInt(amoountPerQNT),\n                    'height': parseInt(height),\n                };\n                var hasPhasing = SessionStorageService.getFromSession(\n                    controlConfig.SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY);\n                if (hasPhasing) {\n                    params.phasingFinishHeight = parseInt(height) + 1000;\n                }\n                return TransactionService.createTransaction(params);\n            };\n\n            this.placeOrder = function (publicKey, price, asset, quantity, fee, requestType) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var request;\n                if (requestType === 'bid') {\n                    request = 'placeBidOrder';\n                } else {\n                    request = 'placeAskOrder';\n                }\n                var params = {\n                    'requestType': request,\n                    'priceTQT': parseInt(price),\n                    'asset': asset,\n                    'publicKey': publicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                    'quantityQNT': parseInt(quantity),\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.getAssetLastTrades = function (asset, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getTrades',\n                    'asset': asset,\n                    'includeAssetInfo': true,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getAssetOrders = function (asset, orderType, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': orderType,\n                    'asset': asset,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getAllTrades = function (firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAllTrades',\n                    'includeAssetInfo': true,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getAllOpenAskOrders = function (firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAllOpenAskOrders',\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getAllOpenBidOrders = function (firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAllOpenBidOrders',\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getAllLastTransfers = function (accountRs, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAssetTransfers',\n                    'account': accountRs,\n                    'includeAssetInfo': true,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getMyTrades = function (account, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getTrades',\n                    'account': account,\n                    'includeAssetInfo': true,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getExpectedAskOrders = function (asset) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getExpectedAskOrders',\n                    'asset': asset,\n                    'sortByPrice': true\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getExpectedBidOrders = function (asset) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getExpectedBidOrders',\n                    'asset': asset,\n                    'sortByPrice': true\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getExpectedAssetDeletes = function (asset, account) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getExpectedAssetDeletes',\n                    'includeAssetInfo': true\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getExpectedAssetTransfers = function (asset, account) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getExpectedAssetTransfers',\n                    'includeAssetInfo': true\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getExpectedOrderCancellations = function () {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getExpectedOrderCancellations'\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getBidOrderTrades = function (orderid, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getOrderTrades',\n                    'bidOrder': orderid,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeAssetInfo': true\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getAskOrderTrades = function (orderid, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getOrderTrades',\n                    'askOrder': orderid,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeAssetInfo': true\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n            this.getDividendsHistory = function (asset, firstIndex, lastIndex, timestamp) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getAssetDividends',\n                    'asset': asset,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'timestamp': timestamp\n                };\n                return Restangular.all(assetsConfig.assetsEndPoint).customGET('', params);\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('assets').controller('AssetsMainCtrl',\n    ['$scope', 'AssetsService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', '$state',\n        function ($scope, AssetsService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, $state) {\n\n            $scope.openIssueAssetModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/issue-asset-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openDeleteAssetModal = function (assetId, decimals) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/delete-asset-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'assetId': assetId,\n                                'decimals': decimals,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openDeleteAsseFulltModal = function (assetId, decimals) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/delete-asset-full-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'assetId': assetId,\n                                'decimals': decimals,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openPlaceOrderModal = function (assetId) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/place-order-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'assetId': assetId,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openTradeDeskModal = function (assetId, decimals) {\n                $state.go('client.signedin.assets.trade', {assetId: assetId});\n            };\n\n            $scope.openSearchAssetModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/search-asset-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openExpectedOrderModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/expected-order-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openOrderTradesModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/order-trades-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openExpectedTransfersModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/expected-transfers-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openExpectedDeletesModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/expected-deletes-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openExpectedBidModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/expected-bid-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openExpectedCancellationsModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/expected-cancellations-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openCancelOrderModal = function (orderId, assetId, quantity, price, decimals, type) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/cancel-order-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'orderId': orderId,\n                                'assetId': assetId,\n                                'quantity': quantity,\n                                'price': price,\n                                'decimals': decimals,\n                                'type': type\n\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openTransferAssetModal = function (assetId, decimals) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/transfer-asset-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'assetId': assetId,\n                                'decimals': decimals,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openSendAssetModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/send-asset-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openDividendPaymentModal = function (assetId, decimals) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/dividend-payment-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'assetId': assetId,\n                                'decimals': decimals,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openAssetDetailsModal = function (assetId) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/asset-details.html',\n                    size: 'lg',\n                    controller: 'AssetDetailsCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'assetId': assetId,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openDividendsDetailsModal = function (assetId) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/dividends-details.html',\n                    size: 'lg',\n                    controller: 'DividendsDetailsCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'assetId': assetId,\n                            };\n                        }\n                    }\n                });\n            };\n\n\n        }]);\n\nangular.module('assets').controller('AssetsCtrl',\n    ['$scope', 'AssetsService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter',\n        function ($scope, AssetsService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter) {\n\n            $scope.sort_order = 'desc';\n            $scope.sort_orderColumn = 'height';\n\n            $scope.sort_default = function () {\n              $scope.sort_order = 'desc';\n              $scope.sort_orderColumn = 'height';\n              $scope.reloadAssets();\n            };\n\n            $scope.sort_supply = function () {\n                $scope.sort_orderColumn = 'quantity';\n                $scope.reloadAssets();\n            };\n\n            $scope.sort_height = function () {\n                $scope.sort_orderColumn = 'height';\n                $scope.reloadAssets();\n            };\n\n            $scope.sort_decimals = function () {\n                $scope.sort_orderColumn = 'decimals';\n                $scope.reloadAssets();\n            };\n\n            $scope.sort_name = function () {\n                $scope.sort_orderColumn = 'name';\n                $scope.reloadAssets();\n            };\n\n            $scope.sort_toggle = function () {\n                if ($scope.sort_order === 'desc') {\n                    $scope.sort_order = 'asc';\n                } else if ($scope.sort_order === 'asc') {\n                    $scope.sort_order = 'desc';\n                }\n                $scope.reloadAssets();\n            };\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('assets')\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    AssetsService.getAssets(\n                        data.start,\n                        endIndex,\n                        $scope.sort_order,\n                        $scope.sort_orderColumn\n                      ).then(function (response) {\n\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'assets': response.assets\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('asset').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                    }),\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openAssetDetailsModal(\\'' + row.asset +\n                            '\\')\" ng-controller=\"AssetsMainCtrl\"> ' + data + '</a>';\n\n                    }),\n                DTColumnBuilder.newColumn('accountRS').withTitle('Issuer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Current Supply').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return supplyFilter(data, row.decimals);\n                    }),\n                DTColumnBuilder.newColumn('numberOfAccounts').withTitle('Shareholders').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('numberOfTrades').withTitle('Trades').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('numberOfTransfers').withTitle('Transfers').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('asset').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var tt_desk = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"TradeDesk\"';\n\n                        var tt_divih = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Dividends History\"';\n\n                        var trade = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_desk + ' ng-controller=\"AssetsMainCtrl\"' +\n                            ' ng-click=\"openTradeDeskModal(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\')\">' +\n                            ' <i class=\"fa fa-bar-chart\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                        var divih = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_divih + ' ng-controller=\"AssetsMainCtrl\"' +\n                            ' ng-click=\"openDividendsDetailsModal(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\')\">' +\n                            ' <i class=\"fa fa-usd\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                        return trade + ' ' + divih ;\n                    })\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n\n            $scope.reloadAssets = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n\n        }]);\n\nangular.module('assets').controller('MyAssetsCtrl',\n    ['$scope', 'AssetsService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService',\n        function ($scope, AssetsService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService) {\n\n            $scope.accountRS = CommonsService.getAccountDetailsFromSession('accountRs');\n\n            $scope.dtOptionsAssets = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', false)\n                .withDataProp('accountAssets')\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', false)\n                .withOption('bFilter', false).withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var accountId = CommonsService.getAccountDetailsFromSession('accountId');\n                    AssetsService.getAccountAssets(accountId).then(function (response) {\n // console.log(response)\n                        callback({\n                            'iTotalRecords': response.accountAssets.length,\n                            'iTotalDisplayRecords': response.accountAssets.length,\n                            'accountAssets': response.accountAssets\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumnsAssets = [\n\n                DTColumnBuilder.newColumn('asset').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                    }),\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openAssetDetailsModal(\\'' + row.asset +\n                            '\\')\" ng-controller=\"AssetsMainCtrl\"> ' + data + '</a>';\n                    }),\n\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return supplyFilter(data, row.decimals);\n                    }),\n\n                DTColumnBuilder.newColumn('currentQuantityQNT').withTitle('Holding').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var p = (row.quantityQNT * 100) / row.currentQuantityQNT;\n                        return p.toLocaleString('en-US', {minimumFractionDigits: 2}) + '%';\n                    }),\n                DTColumnBuilder.newColumn('numberOfAccounts').withTitle('Shareholders').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n                DTColumnBuilder.newColumn('numberOfTrades').withTitle('Trades').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n                DTColumnBuilder.newColumn('numberOfTransfers').withTitle('Transfers').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n                DTColumnBuilder.newColumn('asset').withTitle('Actions').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var divi_tag = true;\n                        var del_tag = true;\n\n                        // console.log ( $scope.accountRS );\n\n                        if ($scope.accountRS === row.issuerAccountRS) {\n                            divi_tag = false;\n                        }\n\n                        if ($scope.accountRS === row.issuerAccountRS &&  row.numberOfAccounts === 1 &&  row.numberOfTrades === 0 &&  row.numberOfTransfers === 0 ) {\n                            // del_tag = false;\n                        }\n\n                        var tt_del = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Delete Shares\"';\n\n                        var tt_transfer = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Transfer Assets\"';\n\n                        var tt_trade = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Trade Desk\"';\n\n                        var tt_divi = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Divident Payments\"';\n\n                        var tt_delfull = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Delete Asset\"';\n\n                        var del = '<button class=\"btn btn-default btn-xs\" ' + tt_del +\n                            ' ng-click=\"openDeleteAssetModal(\\'' + data + '\\',\\'' + row.decimals + '\\')\" ng-controller=\"AssetsMainCtrl\">' +\n                            ' <i class=\"fa fa-minus\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        var transfer = '<button class=\"btn btn-default btn-xs\" ' + tt_transfer +\n                            ' ng-click=\"openTransferAssetModal(\\'' + data + '\\',\\''  +\n                            row.decimals + '\\')\" ng-controller=\"AssetsMainCtrl\">' +\n                            ' <i class=\"fa fa-user\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        var trade = '<button class=\"btn btn-default btn-xs\" ' + tt_trade +\n                            ' ng-click=\"openTradeDeskModal(\\'' + data + '\\')\" ng-controller=\"AssetsMainCtrl\">' +\n                            ' <i class=\"fa fa-bar-chart\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        var divi = '<button class=\"btn btn-default btn-xs\" ' + tt_divi +\n                            ' ng-click=\"openDividendPaymentModal(\\'' + data + '\\',\\'' +\n                            row.decimals + '\\')\" ng-controller=\"AssetsMainCtrl\" ng-disabled=\"' + divi_tag + '\">' +\n                            ' <i class=\"fa fa-dollar\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        var delfull = '<button class=\"btn btn-default btn-xs\" ' + tt_delfull +\n                            ' ng-click=\"openDeleteAsseFulltModal(\\'' + data + '\\',\\'' +\n                            row.decimals + '\\')\" ng-controller=\"AssetsMainCtrl\" ng-disabled=\"' + del_tag + '\">' +\n                            ' <i class=\"fa fa-times\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        return trade + '&nbsp' + transfer + '&nbsp' + divi + '&nbsp' + del + '&nbsp' + delfull;\n\n                    }),\n\n            ];\n\n            $scope.dtInstanceCallbackAssets = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadAssets = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n        }]);\n\nangular.module('assets').controller('AssetsOpenOrdersCtrl',\n    ['$scope', 'AssetsService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService',\n        'numberStringFilter',\n        function ($scope, AssetsService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService, numberStringFilter) {\n\n            $scope.dtBidOrdersOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('bidOrders')\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var accountId = CommonsService.getAccountDetailsFromSession('accountRs');\n                    var endIndex = data.start + data.length - 1;\n                    AssetsService.getAccountCurrentBidOrders(accountId, data.start, endIndex).then(function (response) {\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'bidOrders': response.bidOrders\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtBidOrdersColumns = [\n\n                DTColumnBuilder.newColumn('order').withTitle('Order').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                    }),\n                DTColumnBuilder.newColumn('name').withTitle('Asset').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openAssetDetailsModal(\\'' + row.asset +\n                            '\\')\" ng-controller=\"AssetsMainCtrl\"> ' + data + '</a>';\n                    }),\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Price').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var price = data * Math.pow(10, row.decimals) / 100000000;\n                        return price.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n\n                    }),\n\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var quantity = parseInt(data) / Math.pow(10, row.decimals);\n                        return quantity.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n\n                    }),\n\n\n                DTColumnBuilder.newColumn('order').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var tt_desk = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"TradeDesk\"';\n\n                        var tt_cancel = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Cancel\"';\n\n                        var cancel = '<button class=\"btn btn-default btn-xs\"  ' + tt_cancel + ' ng-click=\"openCancelOrderModal(' +\n                            '\\'' + data + '\\',' +\n                            '\\'' + row.asset + '\\',' +\n                            '\\'' + row.quantityQNT + '\\',' +\n                            '\\'' + row.priceTQT + '\\',' +\n                            '\\'' + row.decimals + '\\',' +\n                            '\\'bid\\'' +\n                            ')\" ng-controller=\"AssetsMainCtrl\"> <i class=\"fa fa-times\" aria-hidden=\"true\"></i> </button>';\n\n                        var trade = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_desk + ' ng-controller=\"AssetsMainCtrl\"' +\n                            ' ng-click=\"openTradeDeskModal(\\'' + row.asset +\n                            '\\',\\'' + row.decimals + '\\')\">' +\n                            ' <i class=\"fa fa-bar-chart\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n\n                        return cancel + ' ' + trade;\n\n                    }),\n            ];\n\n            $scope.dtBidOrdersInstanceCallback = function (_dtInstance) {\n                $scope.dtInstanceBidOrder = _dtInstance;\n            };\n\n            $scope.reloadBidOrders = function () {\n                if ($scope.dtInstanceBidOrder) {\n                    $scope.dtInstanceBidOrder._renderer.rerender();\n                }\n            };\n\n\n            $scope.dtAskOrdersOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('askOrders')\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var accountId = CommonsService.getAccountDetailsFromSession('accountRs');\n                    var endIndex = data.start + data.length - 1;\n                    AssetsService.getAccountCurrentAskOrders(accountId, data.start, endIndex).then(function (response) {\n\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'askOrders': response.askOrders\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtAskOrdersColumns = [\n                DTColumnBuilder.newColumn('order').withTitle('Order').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                    }),\n                DTColumnBuilder.newColumn('name').withTitle('Asset').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openAssetDetailsModal(\\'' + row.asset +\n                            '\\')\" ng-controller=\"AssetsMainCtrl\"> ' + data + '</a>';\n                    }),\n\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Price').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var price = data * Math.pow(10, row.decimals) / 100000000;\n                        return price.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n\n                    }),\n\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var quantity = parseInt(data) / Math.pow(10, row.decimals);\n                        return quantity.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n                    }),\n\n                DTColumnBuilder.newColumn('order').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n\n                        var tt_desk = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"TradeDesk\"';\n\n                        var tt_cancel = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Cancel\"';\n\n\n                        var cancel = '<button class=\"btn btn-default btn-xs\"  ' + tt_cancel + ' ng-click=\"openCancelOrderModal(' +\n                            '\\'' + data + '\\',' +\n                            '\\'' + row.asset + '\\',' +\n                            '\\'' + row.quantityQNT + '\\',' +\n                            '\\'' + row.priceTQT + '\\',' +\n                            '\\'' + row.decimals + '\\',' +\n                            '\\'ask\\'' +\n                            ')\" ng-controller=\"AssetsMainCtrl\"> <i class=\"fa fa-times\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        var trade = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_desk + ' ng-controller=\"AssetsMainCtrl\"' +\n                            ' ng-click=\"openTradeDeskModal(\\'' + row.asset +\n                            '\\',\\'' + row.decimals + '\\')\">' +\n                            ' <i class=\"fa fa-bar-chart\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n\n                        return cancel + ' ' + trade;\n\n\n                    }),\n            ];\n\n            $scope.dtAskOrdersInstanceCallback = function (_dtInstance) {\n                $scope.dtInstanceAskOrder = _dtInstance;\n            };\n\n            $scope.reloadAskOrders = function () {\n                if ($scope.dtInstanceAskOrder) {\n                    $scope.dtInstanceAskOrder._renderer.rerender();\n                }\n            };\n\n\n        }]);\n\nangular.module('assets').controller('AssetsFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n        var issueAssetSteps = [\n            {\n                templateUrl: 'assets/modals/issue-asset-details.html',\n                title: 'Issue Asset Details',\n                controller: 'IssueAssetFormController',\n                isolatedScope: true,\n            },\n            {\n                templateUrl: 'assets/modals/issue-asset-confirm.html',\n                title: 'Issue Asset Confirmation',\n                controller: 'IssueAssetFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var deleteAssetSteps = [\n            {\n                templateUrl: 'assets/modals/delete-asset-details.html',\n                title: 'Delete Asset Details',\n                controller: 'DeleteAssetFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'assets/modals/delete-asset-confirm.html',\n                title: 'Delete Asset Confirmation',\n                controller: 'DeleteAssetFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var placeOrderSteps = [\n            {\n                templateUrl: 'assets/modals/place-order-confirm.html',\n                title: 'Place Order Confirmation',\n                controller: 'PlaceOrderFormController',\n                isolatedScope: true,\n                data: params,\n            },\n        ];\n\n        var tradeDeskSteps = [\n            {\n                templateUrl: 'assets/modals/trade-desk-details.html',\n                title: 'PLace Order Details',\n                controller: 'TradeDeskInputController',\n                isolatedScope: true,\n                data: params,\n            }\n        ];\n\n        var searchAssetSteps = [\n            {\n                templateUrl: 'assets/modals/search-asset-details.html',\n                title: 'Search Asset Details',\n                controller: 'SearchAssetFormCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'assets/modals/search-asset-confirm.html',\n                title: 'Search Asset Results',\n                controller: 'SearchAssetFormCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var expectedOrderSteps = [\n            {\n                templateUrl: 'assets/modals/expected-order-details.html',\n                title: 'Expected Order Details',\n                controller: 'ExpectedOrderFormCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'assets/modals/expected-order-confirm.html',\n                title: 'Expected Order Results',\n                controller: 'ExpectedOrderFormCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var expectedTransfersSteps = [\n            {\n                templateUrl: 'assets/modals/expected-transfers-confirm.html',\n                title: 'Expected Asset Transfers',\n                controller: 'ExpectedAssetTransfersFormCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var orderTradesSteps = [\n            {\n                templateUrl: 'assets/modals/order-trades-details.html',\n                title: 'Order Trade Details',\n                controller: 'OrderTradesFormCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'assets/modals/order-trades-confirm.html',\n                title: 'Order Trade  Results',\n                controller: 'OrderTradesFormCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var expectedDeletesSteps = [\n            {\n                templateUrl: 'assets/modals/expected-deletes-confirm.html',\n                title: 'Expected Asset Deletes',\n                controller: 'ExpectedAssetDeletesFormCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var expectedCancellationsSteps = [\n            {\n                templateUrl: 'assets/modals/expected-cancellations-confirm.html',\n                title: 'Expected Order Cancellation',\n                controller: 'ExpectedOrderCancellationFormCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var cancelOrderSteps = [\n            {\n                templateUrl: 'assets/modals/cancel-order-confirm.html',\n                title: 'Cancel Order Confirmation',\n                controller: 'CancelOrderFormController',\n                isolatedScope: true,\n                data: params\n            },\n        ];\n\n        var transferAssetSteps = [\n            {\n                templateUrl: 'assets/modals/transfer-asset-details.html',\n                title: 'Transfer Asset Details',\n                controller: 'TransferAssetFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'assets/modals/transfer-asset-confirm.html',\n                title: 'Transfer Asset Confirmation',\n                controller: 'TransferAssetFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var sendAssetSteps = [\n            {\n                templateUrl: 'assets/modals/send-asset-details.html',\n                title: 'Send Asset Details',\n                controller: 'TransferAssetFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'assets/modals/send-asset-confirm.html',\n                title: 'Send Asset Confirmation',\n                controller: 'TransferAssetFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var dividendPaymentSteps = [\n            {\n                templateUrl: 'assets/modals/dividend-payment-details.html',\n                title: 'Dividend Payment Details',\n                controller: 'DividendPaymentFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'assets/modals/dividend-payment-confirm.html',\n                title: 'Dividend Payment Confirmation',\n                controller: 'DividendPaymentFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var deleteAssetFullSteps = [\n            {\n                templateUrl: 'assets/modals/delete-asset-full-details.html',\n                title: 'Delete Asset Details',\n                controller: 'DeleteAssetFullFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'assets/modals/delete-asset-full-confirm.html',\n                title: 'Delete Asset Confirmation',\n                controller: 'DeleteAssetFullFormController',\n                isolatedScope: true,\n            },\n        ];\n\n\n        $scope.steps = {};\n\n        $scope.steps.issueAssetForm = issueAssetSteps;\n        $scope.steps.deleteAssetForm = deleteAssetSteps;\n        $scope.steps.placeOrderForm = placeOrderSteps;\n        $scope.steps.tradeDeskForm = tradeDeskSteps;\n        $scope.steps.searchAssetForm = searchAssetSteps;\n        $scope.steps.expectedOrderForm = expectedOrderSteps;\n        $scope.steps.expectedCancellationForm = expectedCancellationsSteps;\n        $scope.steps.expectedTransfersForm = expectedTransfersSteps;\n        $scope.steps.orderTradesForm = orderTradesSteps;\n        $scope.steps.expectedDeletesForm = expectedDeletesSteps;\n        $scope.steps.cancelOrderForm = cancelOrderSteps;\n        $scope.steps.transferAssetForm = transferAssetSteps;\n        $scope.steps.sendAssetForm = sendAssetSteps;\n        $scope.steps.dividendPaymentForm = dividendPaymentSteps;\n        $scope.steps.deleteAssetFullForm = deleteAssetFullSteps;\n\n    }]);\n\nangular.module('assets').controller('AllTradesCtrl',\n    ['$scope', 'AssetsService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService', 'buysellFilter',\n        'numericalStringFilter', 'numberStringFilter',\n        function ($scope, AssetsService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService, buysellFilter,\n                  numericalStringFilter, numberStringFilter) {\n\n            $scope.dtOptionsLastTrades = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', false)\n                .withDataProp('lastTrades')\n                .withOption('paging', true)\n                .withOption('processing', false)\n                .withOption('bFilter', false).withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    AssetsService.getAllTrades(data.start, endIndex).then(function (response) {\n                        callback({\n                            'iTotalRecords': response.trades.length,\n                            'iTotalDisplayRecords': response.trades.length,\n                            'lastTrades': response.trades\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumnsLastTrades = [\n\n                DTColumnBuilder.newColumn('askOrder').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var orderType = row.askOrder;\n                        if (row.tradeType === 'buy') {\n                            orderType = row.bidOrder;\n                        }\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + orderType + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n                    }),\n\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openAssetDetailsModal(\\'' + row.asset +\n                            '\\')\" ng-controller=\"AssetsMainCtrl\"> ' + data + '</a>';\n\n                    }),\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return timestampFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('tradeType').withTitle('Type').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return buysellFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('buyerRS').withTitle('Buyer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('sellerRS').withTitle('Seller').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Price').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var price = data * Math.pow(10, row.decimals) / 100000000;\n                        return price.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n\n                    }),\n\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var quantity = parseInt(data) / Math.pow(10, row.decimals);\n                        return quantity.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n\n                    }),\n\n                DTColumnBuilder.newColumn('asset').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var tt_desk = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"TradeDesk\"';\n\n                        return '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_desk + ' ng-controller=\"AssetsMainCtrl\"' +\n                            ' ng-click=\"openTradeDeskModal(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\')\">' +\n                            ' <i class=\"fa fa-bar-chart\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n                    })\n\n\n            ];\n\n            $scope.dtInstanceCallbackLastTrades = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadLastTrades = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n        }]);\n\nangular.module('assets').controller('AssetDetailsCtrl',\n    ['$scope', 'AssetsService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService', 'params',\n        '$uibModalInstance',\n        function ($scope, AssetsService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService, params,\n                  $uibModalInstance) {\n\n            $scope.initAssetDetails = function () {\n                AssetsService.getAsset(params.assetId, true).then(function (success) {\n                    $scope.assetDetails = success;\n                }, function (error) {\n                });\n            };\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n        }]);\n\nangular.module('assets').controller('MyTransfersCtrl',\n    ['$scope', 'AssetsService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService', 'buysellFilter',\n        'numericalStringFilter', 'numberStringFilter', 'AccountService',\n        function ($scope, AssetsService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService, buysellFilter,\n                  numericalStringFilter, numberStringFilter, AccountService) {\n\n            $scope.dtOptionsLastTransfers = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', false)\n                .withDataProp('lastTransfers')\n                .withOption('paging', true)\n                .withOption('processing', false)\n                .withOption('bFilter', false).withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var accountRS = AccountService.getAccountDetailsFromSession('accountRs');\n                    var endIndex = data.start + data.length - 1;\n                    AssetsService.getAllLastTransfers(accountRS, data.start, endIndex).then(function (response) {\n                        callback({\n                            'iTotalRecords': response.transfers.length,\n                            'iTotalDisplayRecords': response.transfers.length,\n                            'lastTransfers': response.transfers\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumnsLastTransfers = [\n\n                DTColumnBuilder.newColumn('assetTransfer').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n                    }),\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return timestampFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openAssetDetailsModal(\\'' + row.asset +\n                            '\\')\" ng-controller=\"AssetsMainCtrl\"> ' + data + '</a>';\n\n                    }),\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return supplyFilter(data, row.decimals);\n                    }),\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n\n                DTColumnBuilder.newColumn('asset').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var tt_desk = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"TradeDesk\"';\n\n                        return '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_desk + ' ng-controller=\"AssetsMainCtrl\"' +\n                            ' ng-click=\"openTradeDeskModal(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\')\">' +\n                            ' <i class=\"fa fa-bar-chart\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n                    })\n            ];\n\n            $scope.dtInstanceCallbackLastTransfers = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadLastTransfers = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n        }]);\n\nangular.module('assets').controller('MytradesCtrl',\n    ['$scope', 'AssetsService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService', 'buysellFilter',\n        'numericalStringFilter', 'numberStringFilter', 'AccountService',\n        function ($scope, AssetsService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService, buysellFilter,\n                  numericalStringFilter, numberStringFilter, AccountService) {\n\n            $scope.dtOptionsMyTrades = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', false)\n                .withDataProp('mytrades')\n                .withOption('paging', true)\n                .withOption('processing', false)\n                .withOption('bFilter', false).withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var accountRS = AccountService.getAccountDetailsFromSession('accountRs');\n                    var endIndex = data.start + data.length - 1;\n                    AssetsService.getMyTrades(accountRS, data.start, endIndex).then(function (response) {\n\n                        callback({\n                            'iTotalRecords': response.trades.length,\n                            'iTotalDisplayRecords': response.trades.length,\n                            'mytrades': response.trades\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumnsMyTrades = [\n\n                DTColumnBuilder.newColumn('askOrder').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var orderType = row.askOrder;\n                        if (row.tradeType === 'buy') {\n                            orderType = row.bidOrder;\n                        }\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + orderType + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n                    }),\n\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openAssetDetailsModal(\\'' + row.asset +\n                            '\\')\" ng-controller=\"AssetsMainCtrl\"> ' + data + '</a>';\n\n                    }),\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return timestampFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('tradeType').withTitle('Type').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return buysellFilter(data);\n                    }),\n\n\n                DTColumnBuilder.newColumn('buyerRS').withTitle('Buyer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('sellerRS').withTitle('Seller').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Price').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var price = data * Math.pow(10, row.decimals) / 100000000;\n                        return price.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n\n                    }),\n\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var quantity = parseInt(data) / Math.pow(10, row.decimals);\n                        return quantity.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n\n                    }),\n\n                DTColumnBuilder.newColumn('asset').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-default btn-xs\" ng-controller=\"AssetsMainCtrl\"' +\n                            ' ng-click=\"openTradeDeskModal(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\')\">' +\n                            ' <i class=\"fa fa-bar-chart\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n                    })\n\n\n            ];\n\n            $scope.dtInstanceCallbackMyTrades = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadMyTrades = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n        }]);\n\nangular.module('assets').controller('DividendsDetailsCtrl',\n    ['$scope', 'AssetsService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService', 'buysellFilter',\n        'numericalStringFilter', 'numberStringFilter', 'AccountService', 'params', '$uibModalInstance',\n        function ($scope, AssetsService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService, buysellFilter,\n                  numericalStringFilter, numberStringFilter, AccountService, params, $uibModalInstance) {\n\n            $scope.dtOptionsDividendsDetails = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', false)\n                .withDataProp('data')\n                .withOption('paging', true)\n                .withOption('processing', false)\n                .withOption('bFilter', false).withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    AssetsService.getDividendsHistory(params.assetId, data.start, endIndex,'').then(function (response) {\n\n                        callback({\n                            'iTotalRecords': response.dividends.length,\n                            'iTotalDisplayRecords': response.dividends.length,\n                            'data': response.dividends\n                        });\n                    });\n                })\n                .withDisplayLength(5).withBootstrap();\n\n            $scope.dtColumnsDividendsDetails = [\n\n              DTColumnBuilder.newColumn('assetDividend').withTitle('Details').notSortable()\n                  .renderWith(function (data, type, row, meta) {\n                      return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                          ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                          '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                  }),\n\n              DTColumnBuilder.newColumn('dividendHeight').withTitle('Height').notSortable()\n                  .renderWith(function (data, type, row, meta) {\n                      return  data;\n\n                  }),\n\n              DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                  .renderWith(function (data, type, row, meta) {\n                      return  timestampFilter(data);\n\n                  }),\n\n              DTColumnBuilder.newColumn('numberOfAccounts').withTitle('Accounts').notSortable()\n                  .renderWith(function (data, type, row, meta) {\n                      return  data;\n\n                  }),\n\n              DTColumnBuilder.newColumn('totalDividend').withTitle('Amount').notSortable()\n                  .renderWith(function (data, type, row, meta) {\n                      return  parseInt(data / 100000000);\n\n                  }),\n\n            ];\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.dtInstanceCallbackDividendsDetails = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('assets').controller('IssueAssetFormController',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService',\n        function ($scope, AssetsService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService) {\n\n\n            $scope.issueAssetForm = angular.copy(multiStepFormScope.issueAssetForm);\n\n\n            $scope.$watchCollection('[issueAssetForm.shares,issueAssetForm.decimals ]', function () {\n                $scope.issueAssetForm.units = $scope.issueAssetForm.shares * Math.pow(10,\n                        $scope.issueAssetForm.decimals);\n            });\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.issueAssetForm = angular.copy($scope.issueAssetForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.issueAsset = function () {\n                var issueAssetForm = multiStepFormScope.issueAssetForm;\n                var name = issueAssetForm.name;\n                var description = issueAssetForm.description;\n                var shares = issueAssetForm.shares;\n                var decimals = issueAssetForm.decimals;\n                var fee = issueAssetForm.fee;\n                var quantity = shares * (Math.pow(10, decimals));\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = issueAssetForm.secretPhrase;\n\n                if (shares === 1) {\n\n                  AlertService.addAlert(\n                      {\n                          type: 'info',\n                          msg: 'Note: ' + 'Singleton Assets are temporarily disabled. Please see forum for more informations.'\n                      }, alertConfig.issueAssetModalAlert\n                  );\n                  return;\n\n                }\n\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.issueAssetPromise = AssetsService.issueAsset(name, description, quantity, decimals, publicKey,\n                    fee).then(function (success) {\n                    if (!success.errorCode) {\n                        var unsignedBytes = success.unsignedTransactionBytes;\n                        var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                        $scope.transactionBytes =\n                            CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                        $scope.validBytes = true;\n\n                        $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                        $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                        $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.issueAssetModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.issueAssetModalAlert\n                    );\n                });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.issueAssetPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.issueAssetModalAlert\n                        );\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('assets').controller('DeleteAssetFormController',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'multiStepFormInstance', 'shareToQuantiyFilter',\n        function ($scope, AssetsService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, multiStepFormInstance, shareToQuantiyFilter) {\n\n\n            $scope.deleteAssetForm = angular.copy(multiStepFormScope.deleteAssetForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n                    $scope.deleteAssetForm.assetId = data.assetId;\n                    $scope.deleteAssetForm.decimals = data.decimals;\n                    AssetsService.getAsset(data.assetId).then(function (success) {\n                        $scope.deleteAssetForm.asset = success.name;\n                    });\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.deleteAssetForm = angular.copy($scope.deleteAssetForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.deleteAsset = function () {\n                var deleteAssetForm = multiStepFormScope.deleteAssetForm;\n                var asset = deleteAssetForm.assetId;\n                var fee = 1;\n                var quantity = shareToQuantiyFilter(deleteAssetForm.quantity, $scope.deleteAssetForm.decimals);\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = deleteAssetForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.deleteAssetPromise = AssetsService.deleteAssetShares(asset, quantity, fee, publicKey)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.deleteAssetModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.deleteAssetModalAlert\n                        );\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.deleteAssetPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.deleteAssetModalAlert);\n                    });\n            };\n\n        }]);\n\nangular.module('assets').controller('DeleteAssetFullFormController',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'multiStepFormInstance', 'shareToQuantiyFilter',\n        function ($scope, AssetsService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, multiStepFormInstance, shareToQuantiyFilter) {\n\n\n            $scope.deleteAssetFullForm = angular.copy(multiStepFormScope.deleteAssetFullForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n                    $scope.deleteAssetFullForm.assetId = data.assetId;\n                    // $scope.deleteAssetFullForm.decimals = data.decimals;\n                    AssetsService.getAsset(data.assetId).then(function (success) {\n                        $scope.deleteAssetFullForm.asset = success.name;\n                    });\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.deleteAssetFullForm = angular.copy($scope.deleteAssetFullForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.deleteAsset = function () {\n                var deleteAssetFullForm = multiStepFormScope.deleteAssetFullForm;\n                var asset = deleteAssetFullForm.assetId;\n                var fee = 1;\n                // var quantity = shareToQuantiyFilter(deleteAssetForm.quantity, $scope.deleteAssetForm.decimals);\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = deleteAssetFullForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.deleteAssetFullPromise = AssetsService.deleteAssetFull(asset, fee, publicKey)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.deleteAssetFullModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.deleteAssetFullModalAlert\n                        );\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.deleteAssetPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.deleteAssetModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('assets').controller('SearchAssetFormCtrl',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'searchTermFilter', '$compile', 'multiStepFormScope', '$validation', 'supplyFilter','$q',\n        function ($scope, AssetsService, SessionStorageService, $state, DTOptionsBuilder,\n                  DTColumnBuilder, searchTermFilter, $compile, multiStepFormScope, $validation, supplyFilter,$q) {\n\n            $scope.searchAssetForm = {};\n\n            $scope.onSubmit = function () {\n                $validation.validate($scope.searchAssetForm);\n                if ($scope.searchAssetForm.$valid) {\n                    $scope.$nextStep();\n                }\n            };\n\n            $scope.searchAssetForm = angular.copy(multiStepFormScope.searchAssetForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.searchAssetForm = angular.copy($scope.searchAssetForm);\n            });\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('serverSide', false)\n                .withDataProp('assets')\n                .withOption('processing', true)\n                .withOption('info', false)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var query = $scope.searchAssetForm.query;\n                    var nameSearch=AssetsService.serachAssets(query);\n                    var idSearch=AssetsService.getAsset(query);\n                    $q.all([nameSearch,idSearch]).then(function (response) {\n                        if(response[1].asset){\n                            response[0].assets=response[0].assets||[];\n                            response[0].assets.push(response[1]);\n                        }\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'assets': response[0].assets\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('accountRS').withTitle('Issuer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('asset').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var details = '<button type=\"button\" class=\"btn btn-default btn-sm\" ng-controller=\"AssetsMainCtrl\"' +\n                            ' ng-click=\"openAssetDetailsModal(\\'' + row.asset + '\\')\">' +\n                            ' <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> ' + '</button>';\n\n\n                        var trade = '<button type=\"button\" class=\"btn btn-default btn-sm\" ng-controller=\"AssetsMainCtrl\"' +\n                            ' ng-click=\"openTradeDeskModal(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\')\">' +\n                            ' <i class=\"fa fa-bar-chart\" aria-hidden=\"true\"></i> ' + '</button>';\n\n                        return details + '&nbsp;' + trade;\n\n                    }),\n\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('assets').controller('CancelOrderFormController',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'multiStepFormInstance',\n        function ($scope, AssetsService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, multiStepFormInstance) {\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.cancelOrderForm = angular.copy($scope.cancelOrderForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.cancelOrder = function () {\n\n                $scope.cancelOrderForm = {};\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n                    $scope.cancelOrderForm.orderId = data.orderId;\n                    $scope.cancelOrderForm.type = data.type;\n\n                    $scope.cancelOrderForm.quantity = data.quantity;\n                    $scope.cancelOrderForm.price = data.price;\n                    $scope.cancelOrderForm.decimals = data.decimals;\n                    $scope.cancelOrderForm.fee = 1;\n                    AssetsService.getAsset(data.assetId).then(function (success) {\n\n                        $scope.cancelOrderForm.asset = success.name;\n                    });\n                }\n\n                var cancelOrderForm = $scope.cancelOrderForm;\n                var order = cancelOrderForm.orderId;\n                var fee = cancelOrderForm.fee;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = cancelOrderForm.secretPhrase;\n                var type = cancelOrderForm.type;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.cancelOrderPromise = AssetsService.cancelOrder(order, fee, publicKey, type)\n                    .then(function (success) {\n\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                            $scope.validBytes = true;\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.cancelBidOrderModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.cancelBidOrderModalAlert\n                        );\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.cancelOrderPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.cancelBidOrderModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('assets').controller('TransferAssetFormController',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'shareToQuantiyFilter',\n        function ($scope, AssetsService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, shareToQuantiyFilter) {\n\n            $scope.transferAssetForm = angular.copy(multiStepFormScope.transferAssetForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n                    $scope.transferAssetForm.assetId = data.assetId;\n                    $scope.transferAssetForm.decimals = data.decimals;\n                    $scope.transferAssetForm.name = data.name;\n                    if(data.assetId) {\n                        AssetsService.getAsset(data.assetId).then(function (success) {\n                            $scope.transferAssetForm.name = success.name;\n                        });\n                    }\n                }\n            };\n\n            $scope.nextStep = function () {\n                if ($scope.transferAssetForm.assetId && $scope.transferAssetForm.decimals !== undefined && $scope.transferAssetForm.name) {\n                    $scope.$nextStep();\n                } else {\n                    var assetId = $scope.transferAssetForm.assetId;\n                    AssetsService.getAsset(assetId, true).then(function (success) {\n                        if (success.asset) {\n                            $scope.transferAssetForm.assetId = success.asset;\n                            $scope.transferAssetForm.decimals = success.decimals;\n                            $scope.transferAssetForm.name = success.name;\n                            $scope.$nextStep();\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.transferAssetModalAlert\n                            );\n                        }\n                    },  function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.transferAssetModalAlert\n                        );\n                    });\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.transferAssetForm = angular.copy($scope.transferAssetForm);\n            });\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: false,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.transferAssetForm.recipient = result.accountRS;\n                });\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.transferAsset = function () {\n                var transferAssetForm = multiStepFormScope.transferAssetForm;\n                var asset = transferAssetForm.assetId;\n                var quantity = shareToQuantiyFilter(transferAssetForm.quantity, $scope.transferAssetForm.decimals);\n                var fee = transferAssetForm.fee;\n                var recipientRS = transferAssetForm.recipient;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n\n\n\n\n\n                var secret = transferAssetForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n\n                $scope.sendAssetPromise = AssetsService.transferAsset(publicKey, recipientRS, asset, quantity, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.transferAssetModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.transferAssetModalAlert\n                        );\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.sendAssetPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.transferAssetModalAlert\n                        );\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('assets').controller('DividendPaymentFormController',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'shareToQuantiyFilter', 'amountToQuantFilter', 'CurrenciesService','controlConfig',\n        function ($scope, AssetsService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, shareToQuantiyFilter, amountToQuantFilter, CurrenciesService,controlConfig) {\n\n\n            $scope.dividendPaymentForm = angular.copy(multiStepFormScope.dividendPaymentForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n                    $scope.dividendPaymentForm.assetId = data.assetId;\n                    $scope.dividendPaymentForm.decimals = data.decimals;\n                    AssetsService.getAsset(data.assetId).then(function (success) {\n                        $scope.dividendPaymentForm.asset = success.name;\n                    });\n                }\n\n                CurrenciesService.getBlockChainStatus().then(function (success) {\n                    $scope.dividendPaymentForm.height = success.numberOfBlocks;\n                    $scope.dividendPaymentForm.height = $scope.dividendPaymentForm.height - 1;\n                    // var hasPhasing = SessionStorageService.getFromSession(\n                    //     controlConfig.SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY);\n                    // console.log(hasPhasing);\n                    // if (hasPhasing) {\n                    //     $scope.dividendPaymentForm.height =\n                    //         $scope.dividendPaymentForm.height + $rootScope.options.TX_HEIGHT - 1441;\n                    // }\n                });\n\n\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.dividendPaymentForm = angular.copy($scope.dividendPaymentForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.dividendPayment = function () {\n                var dividendPaymentForm = multiStepFormScope.dividendPaymentForm;\n                var assetId = dividendPaymentForm.assetId;\n\n                var amountPerQuant = amountToQuantFilter(dividendPaymentForm.amountPerQuant);\n\n                amountPerQuant = parseInt(amountPerQuant / Math.pow(10, parseInt(dividendPaymentForm.decimals)));\n\n                if (amountPerQuant < 1) {\n                    AlertService.addAlert(\n                        {\n                            type: 'danger',\n                            msg: 'Sorry, an error occured! Reason: ' + 'Amount per share less than asset decimals: (' +\n                            dividendPaymentForm.decimals + '). Dividend would be (0) per smallest asset unit.'\n                        }, alertConfig.dividendPaymentModalAlert\n                    );\n                    return;\n                }\n\n                var fee = 1;\n                var height = dividendPaymentForm.height;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = dividendPaymentForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.dividendPaymentPromise =\n                    AssetsService.dividendPayment(publicKey, assetId, height, amountPerQuant, fee)\n                                 .then(function (success) {\n                                     if (!success.errorCode) {\n                                         var unsignedBytes = success.unsignedTransactionBytes;\n                                         var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                                         $scope.transactionBytes =\n                                             CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                                         $scope.validBytes = true;\n\n                                         $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                                         $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                                         $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n                                     } else {\n                                         AlertService.addAlert(\n                                             {\n                                                 type: 'danger',\n                                                 msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                             }, alertConfig.dividendPaymentModalAlert\n                                         );\n                                     }\n                                 }, function (error) {\n                                     AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                         alertConfig.dividendPaymentModalAlert\n                                     );\n                                 });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.dividendPaymentPromise =\n                    CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.dividendPaymentModalAlert\n                        );\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('assets').controller('PlaceOrderFormController',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'shareToQuantiyFilter', 'amountToQuantFilter', 'quantityToShareFilter',\n        function ($scope, AssetsService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, shareToQuantiyFilter, amountToQuantFilter, quantityToShareFilter) {\n\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.placeOrderForm = angular.copy($scope.placeOrderForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.placeOrder = function () {\n\n                $scope.placeOrderForm = {};\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n                    $scope.placeOrderForm.assetId = data.assetId;\n                    $scope.placeOrderForm.requestType = data.requestType;\n                    $scope.placeOrderForm.asset = data.asset;\n                    $scope.placeOrderForm.quantity = data.quantity;\n                    $scope.placeOrderForm.price = data.price;\n                    $scope.placeOrderForm.decimals = data.decimals;\n                    $scope.placeOrderForm.fee = 1;\n                    $scope.placeOrderForm.asset = data.asset;\n                }\n\n                var placeOrderForm = $scope.placeOrderForm;\n                var asset = placeOrderForm.assetId;\n                var fee = placeOrderForm.fee;\n\n                var quantity = parseInt(shareToQuantiyFilter(placeOrderForm.quantity, placeOrderForm.decimals));\n\n                var price = parseInt(placeOrderForm.price * 100000000 / Math.pow(10, placeOrderForm.decimals));\n\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = placeOrderForm.secretPhrase;\n                var requestType = placeOrderForm.requestType;\n\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.placeAssetOrderPromise=AssetsService.placeOrder(publicKey, price, asset, quantity, fee, requestType)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.placeAssertOrderModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.placeAssertOrderModalAlert\n                        );\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.placeAssetOrderPromise=CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                    $scope.$emit('close-modal');\n                    $rootScope.$broadcast('reload-dashboard');\n                    $rootScope.$broadcast('order-placed');\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n\n                        // $state.go('client.signedin.account.pending');\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.placeAssertOrderModalAlert\n                    );\n                });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('assets').controller('TradeDeskInputController',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'FeeService', '$rootScope',\n        'CommonsService', 'DTOptionsBuilder', 'DTColumnBuilder', 'amountTQTFilter', 'searchTermFilter', '$compile',\n        'quantityToShareFilter', 'shareToQuantiyFilter', '$stateParams', 'timestampFilter', 'numericalStringFilter',\n        'quantToAmountFilter', 'buysellFilter', 'numberStringFilter', 'amountToDecimalFilter', '$q',\n        function ($scope, AssetsService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, FeeService,\n                  $rootScope, CommonsService, DTOptionsBuilder, DTColumnBuilder, amountTQTFilter, searchTermFilter,\n                  $compile, quantityToShareFilter, shareToQuantiyFilter, $stateParams, timestampFilter,\n                  numericalStringFilter, quantToAmountFilter, buysellFilter, numberStringFilter,\n                  amountToDecimalFilter, $q) {\n\n            $scope.getAsset = function () {\n                var assetId = $stateParams.assetId;\n                $scope.assetId = assetId;\n                AssetsService.getAsset(assetId, true).then(function (success) {\n\n                    $scope.assetDetails = success;\n                    $scope.decimals = success.decimals;\n                    var accountRs = CommonsService.getAccountDetailsFromSession('accountRs');\n\n                    AssetsService.getAccountSingleAsset(accountRs, assetId).then(function (success) {\n\n                        $scope.accountDetails = success;\n                        $scope.quantityQNT = success.quantityQNT;\n                        $scope.unconfirmedQuantityQNT = success.unconfirmedQuantityQNT;\n\n\n                    }, function (error) {\n                        console.log(error);\n                    });\n\n\n                }, function (error) {\n                    console.log(error);\n                });\n            };\n\n            $scope.$watchCollection('buyOrderForm', function (buyOrderForm) {\n\n                $scope.buyOrderForm.totalPrice = numericalStringFilter(\n                    parseFloat(( (buyOrderForm.quantity * buyOrderForm.price) )));\n\n                if (buyOrderForm.price && buyOrderForm.quantity) {\n                    var askQuantityQnt = shareToQuantiyFilter(buyOrderForm.quantity, $scope.decimals);\n                    if (askQuantityQnt <= $scope.assetDetails.quantityQNT) {\n                        $scope.enableBuy = true;\n                    } else {\n                        $scope.enableBuy = false;\n                    }\n                } else {\n                    $scope.enableBuy = false;\n                }\n            });\n\n            $scope.$watchCollection('askOrderForm', function (askOrderForm) {\n                $scope.askOrderForm.totalPrice = numericalStringFilter(\n                    parseFloat(( (askOrderForm.quantity * askOrderForm.price) )));\n\n                if ($scope.unconfirmedQuantityQNT && askOrderForm.price && askOrderForm.quantity) {\n\n                    var sellQuantityQnt = shareToQuantiyFilter(askOrderForm.quantity, $scope.decimals);\n                    if (sellQuantityQnt <= $scope.unconfirmedQuantityQNT) {\n                        $scope.enableSell = true;\n                    } else {\n                        $scope.enableSell = false;\n                    }\n\n\n                } else {\n                    $scope.enableSell = false;\n                }\n            });\n\n            $scope.$on('buy-form', function (event, data) {\n                $scope.buyOrderForm.price = data.priceTQT * Math.pow(10, $scope.decimals) / 100000000;\n                $scope.buyOrderForm.quantity = quantityToShareFilter(data.quantityQNT, $scope.decimals);\n            });\n\n            $scope.$on('ask-form', function (event, data) {\n                $scope.askOrderForm.price = data.priceTQT * Math.pow(10, $scope.decimals) / 100000000;\n                $scope.askOrderForm.quantity = quantityToShareFilter(data.quantityQNT, $scope.decimals);\n            });\n\n            $scope.placeOrderClick = function (buyOrderForm, type) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'assets/modals/place-order-form.html',\n                    size: 'lg',\n                    controller: 'AssetsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'assetId': $scope.assetId,\n                                'price': buyOrderForm.price,\n                                'quantity': buyOrderForm.quantity,\n                                'requestType': type,\n                                'decimals': $scope.decimals,\n                                'asset': $scope.assetDetails.name\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            function rowCallback(nRow, aData, eventType) {\n                // Unbind first in order to avoid any duplicate handler (see\n                // https://github.com/l-lin/angular-datatables/issues/87)\n                $('td', nRow).unbind('click');\n                $('td', nRow).bind('click', function () {\n                    $scope.$apply(function () {\n                        $rootScope.$broadcast(eventType, aData);\n                    });\n                });\n                return nRow;\n            }\n\n            $scope.dtAskOrdersOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('askOrders')\n                .withOption('processing', true)\n                .withOption('ordering', false)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                        rowCallback(nRow, aData, 'buy-form');\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n\n                    var endIndex = data.start + data.length - 1;\n                    var promisesArray = [];\n                    var assetOrdersPromise = AssetsService.getAssetOrders($scope.assetId,\n                        AssetsService.GET_ASSET_ORDERS.ASK_ORDER, data.start,\n                        endIndex);\n                    var assetDetailsPromise = AssetsService.getAsset($scope.assetId, true);\n                    promisesArray.push(assetOrdersPromise);\n                    if (!$scope.decimals) {\n                        promisesArray.push(assetDetailsPromise);\n                    }\n                    $q.all(promisesArray).then(function (response) {\n                        var offersResponse = response[0];\n                        var assetDetailsResponse = response[1];\n                        if (assetDetailsResponse) {\n                            $scope.decimals = assetDetailsResponse.decimals;\n                        }\n                        callback({\n                            'iTotalRecords': 100,\n                            'iTotalDisplayRecords': 100,\n                            'askOrders': offersResponse.askOrders\n                        });\n                    });\n                })\n                .withDisplayLength(5).withBootstrap();\n\n            $scope.fireFormFillEvent = function (eventName) {\n                $rootScope.$broadcast(eventName);\n            };\n\n            $scope.dtAskOrdersColumns = [\n\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Price per share').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(Math.pow(10, $scope.decimals) * quantToAmountFilter(data));\n                    }),\n\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(quantityToShareFilter(data, $scope.decimals));\n                    }),\n\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Sum').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(quantToAmountFilter(data) * (row.quantityQNT));\n                    }),\n\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Actions').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-default btn-xs\"> <i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i> </button>';\n                    }),\n\n            ];\n\n            $scope.dtAskOrdersInstanceCallback = function (_dtInstance) {\n                $scope.dtAskOrderInstance = _dtInstance;\n            };\n\n            $scope.reloadAskOrders = function () {\n                if ($scope.dtAskOrderInstance) {\n                    $scope.dtAskOrderInstance._renderer.rerender();\n                }\n            };\n\n            $scope.dtBidOrdersOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('bidOrders')\n                .withOption('processing', true)\n                .withOption('ordering', false)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                        rowCallback(nRow, aData, 'ask-form');\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    var promisesArray = [];\n                    var assetOrdersPromise = AssetsService.getAssetOrders($scope.assetId,\n                        AssetsService.GET_ASSET_ORDERS.BID_ORDER, data.start,\n                        endIndex);\n                    var assetDetailsPromise = AssetsService.getAsset($scope.assetId, true);\n                    promisesArray.push(assetOrdersPromise);\n                    if (!$scope.decimals) {\n                        promisesArray.push(assetDetailsPromise);\n                    }\n\n                    $q.all(promisesArray).then(function (response) {\n                        var offersResponse = response[0];\n                        var assetDetailsResponse = response[1];\n                        if (assetDetailsResponse) {\n                            $scope.decimals = assetDetailsResponse.decimals;\n                        }\n                        callback({\n                            'iTotalRecords': 100,\n                            'iTotalDisplayRecords': 100,\n                            'bidOrders': offersResponse.bidOrders\n                        });\n                    });\n                })\n                .withDisplayLength(5).withBootstrap();\n\n            $scope.dtBidOrdersColumns = [\n\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Price per share').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        return data * Math.pow(10, $scope.decimals) / 100000000;\n                    }),\n\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(quantityToShareFilter(data, $scope.decimals));\n\n                    }),\n\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Sum').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(shareToQuantiyFilter(quantToAmountFilter(data), $scope.decimals) *\n                            quantityToShareFilter(row.quantityQNT, $scope.decimals));\n                    }),\n\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Actions').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-default btn-xs\"> <i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i> </button>';\n                    }),\n\n            ];\n\n            $scope.dtBidOrdersInstanceCallback = function (_dtInstance) {\n                $scope.dtBidOrderInstance = _dtInstance;\n            };\n\n            $scope.reloadBidOrders = function () {\n                if ($scope.dtBidOrderInstance) {\n                    $scope.dtBidOrderInstance._renderer.rerender();\n                }\n            };\n\n\n            $scope.dtTradeOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', false)\n                .withDataProp('trades')\n                .withOption('paging', true)\n                .withOption('processing', false)\n                .withOption('bFilter', false).withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    AssetsService.getAssetLastTrades($scope.assetId, data.start, endIndex).then(function (response) {\n                        $scope.tradeData = getTradeData(response.trades);\n                        $scope.labels = Array.apply(null, {length: response.trades.length}).map(Number.call, Number);\n                        $scope.lastTrade = response.trades[0];\n\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'trades': response.trades\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtTradeColumns = [\n\n                DTColumnBuilder.newColumn('askOrder').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var orderType = row.bidOrder;\n                        if (row.tradeType === 'buy') {\n                            orderType = row.askOrder;\n                        }\n\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + orderType + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i>' + '</button>';\n                    }),\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return timestampFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n\n\n                        var quantity = parseInt(data) / Math.pow(10, row.decimals);\n                        return quantity.toLocaleString('en-US',\n                            {maximumFractionDigits: row.decimals, minimumFractionDigits: row.decimals});\n                    }),\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Price').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var price = parseInt(data) * Math.pow(10, row.decimals) / 100000000;\n                        return price.toLocaleString('en-US',\n                            {maximumFractionDigits: row.decimals, minimumFractionDigits: row.decimals});\n                    }),\n\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Sum').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var quantity = parseInt(row.quantityQNT) / Math.pow(10, $scope.decimals);\n                        var price = parseInt(data) * Math.pow(10, $scope.decimals);\n                        var sum = quantity * price / 100000000;\n                        return sum.toLocaleString('en-US',\n                            {maximumFractionDigits: row.decimals, minimumFractionDigits: row.decimals});\n                    }),\n\n\n                DTColumnBuilder.newColumn('buyerRS').withTitle('Buyer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('sellerRS').withTitle('Seller').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('tradeType').withTitle('Type').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return buysellFilter(data);\n                    }),\n            ];\n\n            $scope.$on('order-placed', function () {\n                $scope.dtAskOrderInstance._renderer.rerender();\n                $scope.dtBidOrderInstance._renderer.rerender();\n            });\n\n            $scope.dtLastTradesInstanceCallback = function (_dtInstance) {\n                $scope.dtLastTradesrInstance = _dtInstance;\n            };\n\n            $scope.reloadLastTrades = function () {\n                if ($scope.dtLastTradesrInstance) {\n                    $scope.dtLastTradesrInstance._renderer.rerender();\n                }\n            };\n\n            function getTradeData(trades) {\n                var maxSize = 50;\n                var optionSize = trades.length;\n                if (optionSize > maxSize) {\n                    optionSize = maxSize;\n                }\n                var resultPriceArray = [];\n                var resultQuantityArray = [];\n                for (var i = 0; i < optionSize; i++) {\n                    var resultObject = {};\n                    var priceObject = {};\n                    var quantityObject = {};\n                    priceObject.key = optionSize - i;\n                    priceObject.value = quantToAmountFilter(shareToQuantiyFilter(trades[i].priceTQT, $scope.decimals));\n                    quantityObject.key = optionSize - i;\n                    quantityObject.value = quantityToShareFilter(trades[i].quantityQNT, $scope.decimals);\n                    resultPriceArray.push(priceObject);\n                    resultQuantityArray.push(quantityObject);\n\n                }\n                return [{\n                    'key': 'Quantity',\n                    'bar': true,\n                    'values': resultQuantityArray\n                },\n                    {\n                        'key': 'Price',\n                        'values': resultPriceArray\n                    }].map(function (series) {\n                    series.values = series.values.map(function (d) {\n                        return {x: d.key, y: d.value};\n                    });\n                    return series;\n                });\n            }\n\n            $scope.chartOptions = {\n                chart: {\n                    type: 'linePlusBarChart',\n                    height: '245',\n                    margin: {\n                        top: 20,\n                        right: 75,\n                        bottom: 10,\n                        left: 75\n                    },\n                    bars: {\n                        forceY: [0]\n                    },\n                    bars2: {\n                        forceY: [0]\n                    },\n                    focusEnable: false,\n                    isArea: 'true',\n                    color: ['#bdbdbd', '#00C851'],\n                    xAxis: {\n                        axisLabel: '',\n                        showMaxMin: true,\n                        show: false,\n                        tickFormat: function (d) {\n                            return null;\n                        },\n\n                    },\n                    y1Axis: {\n                        axisLabelDistance: 3,\n                        tickFormat: function (d) {\n                            return d.toLocaleString('en-US',\n                                {maximumFractionDigits: $scope.decimals, minimumFractionDigits: $scope.decimals});\n                        },\n                    },\n                    y2Axis: {\n                        axisLabelDistance: 3,\n                        tickFormat: function (d) {\n                            return d.toLocaleString('en-US',\n                                {maximumFractionDigits: $scope.decimals, minimumFractionDigits: $scope.decimals});\n                        },\n                    },\n\n                }\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('assets').controller('ExpectedOrderFormCtrl',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'searchTermFilter', '$compile', 'multiStepFormScope', '$validation', 'supplyFilter',\n        'numericalStringFilter', 'quantToAmountFilter', 'quantityToShareFilter', '$q', 'AlertService', 'alertConfig',\n        function ($scope, AssetsService, SessionStorageService, $state, DTOptionsBuilder,\n                  DTColumnBuilder, searchTermFilter, $compile, multiStepFormScope, $validation, supplyFilter,\n                  numericalStringFilter, quantToAmountFilter, quantityToShareFilter, $q, AlertService, alertConfig) {\n\n            $scope.expectedOrderForm = {};\n\n            var addedUnknown = false;\n\n            $scope.onSubmit = function () {\n                $validation.validate($scope.expectedOrderForm);\n\n                if ($scope.expectedOrderForm.$valid) {\n                    $scope.nextStep();\n                }\n            };\n\n            $scope.nextStep = function () {\n                var assetId = $scope.expectedOrderForm.asset;\n                AssetsService.getAsset(assetId).then(function (success) {\n                    if (success.asset) {\n                        $scope.$nextStep();\n                    } else {\n                        if (!addedUnknown) {\n                            addAlert(success);\n                            addedUnknown = true;\n                        }\n                    }\n                }, function (error) {\n                    addAlert(error);\n                });\n            };\n\n            function addAlert(errorResponse) {\n                AlertService.addAlert(\n                    {\n                        type: 'danger',\n                        msg: 'Sorry, an error occured! Reason: ' + errorResponse.errorDescription\n                    }, alertConfig.expectedAssetOrderModalAlert\n                );\n            }\n\n            $scope.expectedOrderForm = angular.copy(multiStepFormScope.expectedOrderForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.expectedOrderForm = angular.copy($scope.expectedOrderForm);\n            });\n\n            $scope.dtAskOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('serverSide', false)\n                .withDataProp('askOrders')\n                .withOption('processing', true)\n                .withOption('info', false)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var asset = $scope.expectedOrderForm.asset;\n                    var assetDetailsPromise = AssetsService.getAsset(asset, true);\n                    var expectedAskOrdersPromise = AssetsService.getExpectedAskOrders(asset);\n                    $q.all([assetDetailsPromise, expectedAskOrdersPromise]).then(function (response) {\n                        $scope.decimals = response[0].decimals;\n                        callback({\n                            'iTotalRecords': response[1].askOrders.length,\n                            'iTotalDisplayRecords': response[1].askOrders.length,\n                            'askOrders': response[1].askOrders\n                        });\n\n                    });\n                })\n                .withDisplayLength(5).withBootstrap();\n\n            $scope.dtAskColumns = [\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Price per share').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(Math.pow(10, $scope.decimals) * quantToAmountFilter(data));\n                    }),\n\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(quantityToShareFilter(data, $scope.decimals));\n                    }),\n\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Sum').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(quantToAmountFilter(data) * (row.quantityQNT));\n                    }),\n\n            ];\n\n            $scope.dtAskInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n\n            $scope.dtBidOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('serverSide', false)\n                .withDataProp('bidOrders')\n                .withOption('processing', true)\n                .withOption('info', false)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var asset = $scope.expectedOrderForm.asset;\n                    var assetDetailsPromise = AssetsService.getAsset(asset, true);\n                    var expectedBidOrdersPromise = AssetsService.getExpectedBidOrders(asset);\n                    $q.all([assetDetailsPromise, expectedBidOrdersPromise]).then(function (response) {\n                        $scope.decimals = response[0].decimals;\n                        callback({\n                            'iTotalRecords': response[1].bidOrders.length,\n                            'iTotalDisplayRecords': response[1].bidOrders.length,\n                            'bidOrders': response[1].bidOrders\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtBidColumns = [\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Price per share').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(Math.pow(10, $scope.decimals) * quantToAmountFilter(data));\n                    }),\n\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(quantityToShareFilter(data, $scope.decimals));\n                    }),\n\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Sum').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(quantToAmountFilter(data) * (row.quantityQNT));\n                    }),\n\n            ];\n\n            $scope.dtBidInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n\n        }]);\n\nangular.module('assets').controller('ExpectedOrderCancellationFormCtrl',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'searchTermFilter', '$compile', 'multiStepFormScope', '$validation', 'supplyFilter',\n        'numericalStringFilter', 'quantToAmountFilter', 'quantityToShareFilter', '$q',\n        function ($scope, AssetsService, SessionStorageService, $state, DTOptionsBuilder,\n                  DTColumnBuilder, searchTermFilter, $compile, multiStepFormScope, $validation, supplyFilter,\n                  numericalStringFilter, quantToAmountFilter, quantityToShareFilter, $q) {\n\n            $scope.expectedOrderCancellationForm = {};\n\n            $scope.onSubmit = function () {\n                $validation.validate($scope.expectedOrderCancellationForm);\n                if ($scope.expectedOrderCancellationForm.$valid) {\n                    $scope.$nextStep();\n                }\n            };\n\n            $scope.expectedOrderCancellationForm = angular.copy(multiStepFormScope.expectedOrderCancellationForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.expectedOrderCancellationForm = angular.copy($scope.expectedOrderCancellationForm);\n            });\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('serverSide', false)\n                .withDataProp('orderCancellations')\n                .withOption('processing', true)\n                .withOption('info', false)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var expectedAskOrdersPromise = AssetsService.getExpectedOrderCancellations();\n                    $q.all([expectedAskOrdersPromise]).then(function (response) {\n                        callback({\n                            'iTotalRecords': response[0].orderCancellations.length,\n                            'iTotalDisplayRecords': response[0].orderCancellations.length,\n                            'orderCancellations': response[0].orderCancellations\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n                DTColumnBuilder.newColumn('accountRS').withTitle('Account').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('order').withTitle('Order').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n        }]);\n\nangular.module('assets').controller('ExpectedAssetTransfersFormCtrl',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'searchTermFilter', '$compile', 'multiStepFormScope', '$validation', 'supplyFilter',\n        'numericalStringFilter', 'quantToAmountFilter', 'quantityToShareFilter', '$q', '$uibModal', 'timestampFilter',\n        function ($scope, AssetsService, SessionStorageService, $state, DTOptionsBuilder,\n                  DTColumnBuilder, searchTermFilter, $compile, multiStepFormScope, $validation, supplyFilter,\n                  numericalStringFilter, quantToAmountFilter, quantityToShareFilter, $q, $uibModal, timestampFilter) {\n\n            $scope.expectedTransfersForm = {};\n\n            $scope.onSubmit = function () {\n                $validation.validate($scope.expectedTransfersForm);\n                if ($scope.expectedTransfersForm.$valid) {\n                    $scope.$nextStep();\n                }\n            };\n\n            $scope.expectedTransfersForm = angular.copy(multiStepFormScope.expectedTransfersForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.expectedTransfersForm = angular.copy($scope.expectedTransfersForm);\n            });\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.expectedTransfersForm.recipientRS = result.accountRS;\n                });\n            };\n\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('serverSide', false)\n                .withDataProp('transfers')\n                .withOption('processing', true)\n                .withOption('info', false)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n\n                    AssetsService.getExpectedAssetTransfers().then(function (response) {\n                        callback({\n                            'iTotalRecords': response.transfers.length,\n                            'iTotalDisplayRecords': response.transfers.length,\n                            'transfers': response.transfers\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('name').withTitle('Asset').notSortable()\n                .renderWith(function (data, type, row, meta) {\n                    return '<a ng-click=\"openAssetDetailsModal(\\'' + row.asset +\n                        '\\')\" ng-controller=\"AssetsMainCtrl\"> ' + data + '</a>';\n                }),\n\n                DTColumnBuilder.newColumn('senderRS').withTitle('Sender').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(quantityToShareFilter(data, row.decimals));\n                    }),\n\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n        }]);\n\nangular.module('assets').controller('OrderTradesFormCtrl',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'searchTermFilter', '$compile', 'multiStepFormScope', '$validation', 'supplyFilter',\n        'numericalStringFilter', 'quantToAmountFilter', 'quantityToShareFilter', '$q', '$uibModal', 'timestampFilter',\n        'buysellFilter',\n        function ($scope, AssetsService, SessionStorageService, $state, DTOptionsBuilder,\n                  DTColumnBuilder, searchTermFilter, $compile, multiStepFormScope, $validation, supplyFilter,\n                  numericalStringFilter, quantToAmountFilter, quantityToShareFilter, $q, $uibModal, timestampFilter,\n                  buysellFilter) {\n\n            $scope.orderTradesForm = {};\n\n            $scope.onSubmit = function () {\n                $validation.validate($scope.orderTradesForm);\n                if ($scope.orderTradesForm.$valid) {\n                    $scope.$nextStep();\n                }\n            };\n\n            $scope.orderTradesForm = angular.copy(multiStepFormScope.orderTradesForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.orderTradesForm = angular.copy($scope.orderTradesForm);\n            });\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.orderTradesForm.recipientRS = result.accountRS;\n                });\n            };\n\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('serverSide', false)\n                .withDataProp('trades')\n                .withOption('processing', true)\n                .withOption('info', false)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var orderid = $scope.orderTradesForm.orderid;\n                    var bidOrderTrades = AssetsService.getBidOrderTrades(orderid);\n                    var askOrderTrades = AssetsService.getAskOrderTrades(orderid);\n                    $q.all([bidOrderTrades, askOrderTrades]).then(function (success) {\n                        var bidOrders = success[0];\n                        var askOrders = success[1];\n                        var allTrades = {};\n                        allTrades.trades = [];\n                        if (!bidOrders.errorCode && bidOrders.trades.length > 0) {\n                            allTrades.trades = allTrades.trades.concat(bidOrders.trades);\n                        }\n                        if (!askOrders.errorCode && askOrders.trades.length > 0) {\n                            allTrades.trades = allTrades.trades.concat(askOrders.trades);\n                        }\n                        callback({\n                            'iTotalRecords': allTrades.trades.length,\n                            'iTotalDisplayRecords': allTrades.trades.length,\n                            'trades': allTrades.trades\n                        });\n                    });\n\n                })\n                .withDisplayLength(5).withBootstrap();\n\n            $scope.dtColumns = [\n                DTColumnBuilder.newColumn('askOrder').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var orderType = row.askOrder;\n                        if (row.tradeType === 'buy') {\n                            orderType = row.bidOrder;\n                        }\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + orderType + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i>' + '</button>';\n                    }),\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return timestampFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var quantity = parseInt(data) / Math.pow(10, row.decimals);\n                        return quantity.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n                    }),\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Price').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var price = parseInt(data) * Math.pow(10, row.decimals) / 100000000;\n                        return price.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n                    }),\n\n\n                DTColumnBuilder.newColumn('tradeType').withTitle('Type').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return buysellFilter(data);\n                    }),\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n        }]);\n\nangular.module('assets').controller('ExpectedAssetDeletesFormCtrl',\n    ['$scope', 'AssetsService', 'SessionStorageService', '$state', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'searchTermFilter', '$compile', 'multiStepFormScope', '$validation', 'supplyFilter',\n        'numericalStringFilter', 'quantToAmountFilter', 'quantityToShareFilter', '$q', '$uibModal', 'timestampFilter',\n        function ($scope, AssetsService, SessionStorageService, $state, DTOptionsBuilder,\n                  DTColumnBuilder, searchTermFilter, $compile, multiStepFormScope, $validation, supplyFilter,\n                  numericalStringFilter, quantToAmountFilter, quantityToShareFilter, $q, $uibModal, timestampFilter) {\n\n            $scope.expectedDeletesForm = {};\n\n            $scope.onSubmit = function () {\n                $validation.validate($scope.expectedDeletesForm);\n                if ($scope.expectedDeletesForm.$valid) {\n                    $scope.$nextStep();\n                }\n            };\n\n            $scope.expectedDeletesForm = angular.copy(multiStepFormScope.expectedDeletesForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.expectedDeletesForm = angular.copy($scope.expectedDeletesForm);\n            });\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.expectedDeletesForm.recipientRS = result.accountRS;\n                });\n            };\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('serverSide', false)\n                .withDataProp('deletes')\n                .withOption('processing', true)\n                .withOption('info', false)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    AssetsService.getExpectedAssetDeletes().then(function (response) {\n                        callback({\n                            'iTotalRecords': response.deletes.length,\n                            'iTotalDisplayRecords': response.deletes.length,\n                            'deletes': response.deletes\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                .renderWith(function (data, type, row, meta) {\n                    return '<a ng-click=\"openAssetDetailsModal(\\'' + row.asset +\n                        '\\')\" ng-controller=\"AssetsMainCtrl\"> ' + data + '</a>';\n                }),\n\n                DTColumnBuilder.newColumn('accountRS').withTitle('Account').notSortable()\n                  .renderWith(function (data, type, row, meta) {\n                      return searchTermFilter(data);\n                  }),\n                DTColumnBuilder.newColumn('assetDelete').withTitle('Transaction').notSortable()\n                  .renderWith(function (data, type, row, meta) {\n                      return searchTermFilter(data);\n                  }),\n\n                DTColumnBuilder.newColumn('quantityQNT').withTitle('Quantity').notSortable()\n                  .renderWith(function (data, type, row, meta) {\n                      return numericalStringFilter(quantityToShareFilter(data, row.decimals));\n                  }),\n\n\n\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies', ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node', 'options']);\n\nangular.module('currencies').constant('currenciesConfig', {\n    'currenciesEndPoint': 'api'\n});\n\nangular.module('currencies').config(\n    ['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n\n        $stateProvider.state('client.signedin.currencies', {\n            url: '^/currencies',\n            templateUrl: './currencies/views/main.html',\n            abstract: true\n        }).state('client.signedin.currencies.currencies', {\n            url: '^/currencies/currencies',\n            templateUrl: './currencies/views/currencies.html',\n            controller: 'CurrenciesCtrl'\n        }).state('client.signedin.currencies.mycurrencies', {\n            url: '^/currencies/mycurrencies',\n            templateUrl: './currencies/views/mycurrencies.html',\n            controller: 'MyCurrenciesCtrl'\n        }).state('client.signedin.currencies.exchanges', {\n            url: '^/currencies/exchanges',\n            templateUrl: './currencies/views/exchanges.html',\n            controller: 'CurrenciesExchangesCtrl'\n        }).state('client.signedin.currencies.myexchanges', {\n            url: '^/currencies/myexchanges',\n            templateUrl: './currencies/views/myexchanges.html',\n            controller: 'CurrenciesMyExchangesCtrl'\n        }).state('client.signedin.currencies.mytransfers', {\n            url: '^/currencies/mytransfers',\n            templateUrl: './currencies/views/mytransfers.html',\n            controller: 'CurrenciesMyTransfersCtrl'\n        }).state('client.signedin.currencies.myoffers', {\n            url: '^/currencies/myoffers',\n            templateUrl: './currencies/views/myoffers.html',\n            controller: 'CurrenciesMyOffersCtrl'\n        }).state('client.signedin.currencies.trade', {\n            url: '^/currencies/{currencyId}/trade',\n            templateUrl: './currencies/views/trade.html',\n            controller: 'CurrencyTradeDeskInputController'\n        });\n\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies').service('CurrenciesService',\n    ['nodeConfig', 'SessionStorageService', 'NodeService', 'baseConfig', 'currenciesConfig', 'Restangular',\n        'TransactionService', '$rootScope', 'OptionsService',\n        function (nodeConfig, SessionStorageService, NodeService, baseConfig, currenciesConfig, Restangular,\n                  TransactionService, $rootScope, OptionsService) {\n\n            this.getCurrencies = function (firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAllCurrencies',\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeCounts': true\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n\n            };\n\n            this.getCurrency = function (currencyCode) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getCurrency',\n                    'code': currencyCode,\n                    'includeCounts': true\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getCurrencyById = function (currencyId) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getCurrency',\n                    'currency': currencyId,\n                    'includeCounts': true\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getAccountCurrencies = function (account) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAccountCurrencies',\n                    'account': account,\n                    'includeCurrencyInfo': true,\n                    'includeCounts': true,\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getSingleAccountCurrency = function (account, currency) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAccountCurrencies',\n                    'account': account,\n                    'currency': currency,\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getMultipleCurrenctLastExchanges = function (currency) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getLastExchanges',\n                    'currencies': currency,\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.issueCurrency =\n                function (publicKey, name, code, description, type, initialSupply, maxSupply, decimals, fee,\n                          minCurrencyAmount, activHeight, reserveSupply) {\n                    Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                        OptionsService.getOption('RANDOMIZE_NODES')));\n                    var params = {\n                        'publicKey': publicKey,\n                        'requestType': 'issueCurrency',\n                        'name': name,\n                        'code': code,\n                        'description': description,\n                        'type': type,\n                        'initialSupply': parseInt(initialSupply),\n                        'maxSupply': parseInt(maxSupply),\n                        'decimals': parseInt(decimals),\n                        'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                        'broadcast': 'false',\n                        'deadline': OptionsService.getOption('DEADLINE'),\n                        'minReservePerUnitTQT': minCurrencyAmount,\n                        'reserveSupply': reserveSupply,\n                        'issuanceHeight': parseInt(activHeight)\n\n                    };\n                    return TransactionService.createTransaction(params);\n                };\n\n            this.canDeleteCurrency = function (currency, accountRS) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'), OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'canDeleteCurrency',\n                    'account': accountRS,\n                    'currency': currency,\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customPOST('', '', params, '');\n            };\n\n            this.deleteCurrency = function (currency, fee, publicKey) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'), OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'deleteCurrency',\n                    'publicKey': publicKey,\n                    'currency': currency,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.searchCurrencies = function (query) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'), OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'searchCurrencies',\n                    'query': query,\n                    'includeCounts': true\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.transferCurrency = function (publicKey, recipientRS, currency, units, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'), OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'transferCurrency',\n                    'recipient': recipientRS,\n                    'currency': currency,\n                    'publicKey': publicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                    'units': parseInt(units),\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.getBlockChainStatus = function () {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'), OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getBlockchainStatus',\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.publishExchangeOffer = function (publicKey, currency, limits, supply, expirationHeight, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'), OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'publishExchangeOffer',\n                    'currency': currency,\n                    'publicKey': publicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                    'buyRateTQT': parseInt(limits.buyRate),\n                    'sellRateTQT': parseInt(limits.sellRate),\n                    'totalBuyLimit': parseInt(limits.totalBuy),\n                    'totalSellLimit': parseInt(limits.totalSell),\n                    'initialBuySupply': parseInt(supply.initialBuy),\n                    'initialSellSupply': parseInt(supply.initialSell),\n                    'expirationHeight': parseInt(expirationHeight)\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.getAllExchanges = function (firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'), OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAllExchanges',\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeCurrencyInfo': true\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.currencyReserveClaim = function (publicKey, currency, units, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'), OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'currencyReserveClaim',\n                    'currency': currency,\n                    'units': units,\n                    'publicKey': publicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.currencyReserveIncrease = function (publicKey, currency, amountPerUnit, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'), OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'currencyReserveIncrease',\n                    'currency': currency,\n                    'amountPerUnitTQT': parseInt(amountPerUnit),\n                    'publicKey': publicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.buyCurrency = function (publicKey, currency, rateTQT, units, fee) {\n\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'), OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'currencyBuy',\n                    'currency': currency,\n                    'rateTQT': parseInt(rateTQT),\n                    'units': parseInt(units),\n                    'publicKey': publicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n\n                return TransactionService.createTransaction(params);\n            };\n\n            this.sellCurrency = function (publicKey, currency, rateTQT, units, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'), OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'currencySell',\n                    'currency': currency,\n                    'rateTQT': parseInt(rateTQT),\n                    'units': parseInt(units),\n                    'publicKey': publicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.getAvailableToBuy = function (currency, units  ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getAvailableToBuy',\n                    'currency': accountRs,\n                    'units': units\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getAvailableToSell = function (currency, units  ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getAvailableToSell',\n                    'currency': currency,\n                    'units': units\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getBuyOffers = function ( account, currency, firstIndex, lastIndex   ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getBuyOffers',\n                    'account': account,\n                    'currency': currency,\n                    'availableOnly': true,\n                    'sortByRate': true,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getSellOffers = function (account, currency, firstIndex, lastIndex   ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getSellOffers',\n                    'account': account,\n                    'currency': currency,\n                    'availableOnly': true,\n                    'sortByRate': true,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getCurrencyAccounts = function (currency, firstIndex, lastIndex   ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getCurrencyAccounts',\n                    'currency': currency,\n                    'availableOnly': true,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getCurrencyFounders = function (currency, firstIndex, lastIndex   ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getCurrencyFounders',\n                    'currency': currency,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getCurrencyTransfers = function (currency, account, firstIndex, lastIndex   ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getCurrencyTransfers',\n                    'currency': currency,\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeCurrencyInfo': true\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getExchanges = function (currency, account, firstIndex, lastIndex   ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getExchanges',\n                    'currency': currency,\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeCurrencyInfo': true\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getDeskExchanges = function (currency, firstIndex, lastIndex   ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getExchanges',\n                    'currency': currency,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeCurrencyInfo': true\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getAccountExchangeRequests = function (accountRs, currency, firstIndex, lastIndex ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getAccountExchangeRequests',\n                    'account': accountRs,\n                    'currency': accountRs,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeCurrencyInfo': true,\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getExpectedCurrencyTransfers = function (currency, account, firstIndex, lastIndex   ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getExpectedCurrencyTransfers',\n                    'currency': currency,\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeCurrencyInfo': true\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getExpectedExchangeRequests = function (currency, account, firstIndex, lastIndex   ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getExpectedExchangeRequests',\n                    'currency': currency,\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeCurrencyInfo': true\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getExpectedSellOffers = function (currency, account, firstIndex, lastIndex   ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getExpectedSellOffers',\n                    'currency': currency,\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'sortByRate': true\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getAvailableToSell = function (currency, units   ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getAvailableToSell',\n                    'currency': currency,\n                    'units': units\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n            this.getAvailableToBuy = function (currency, units   ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getAvailableToBuy',\n                    'currency': currency,\n                    'units': units\n                };\n                return Restangular.all(currenciesConfig.currenciesEndPoint).customGET('', params);\n            };\n\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies').controller('CurrenciesMainCtrl',\n    ['$scope', 'CurrenciesService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', '$state',\n        function ($scope, CurrenciesService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, $state) {\n\n            $scope.openIssueCurrencyModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/issue-currency-form.html',\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openDeleteCurrencyModal = function (currencyId, decimals, ticker) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/delete-currency-form.html',\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'currencyId': currencyId,\n                                'decimals': decimals,\n                                'ticker': ticker,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openPublishExchangeOfferModal = function (currencyId, decimals, ticker) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/publish-exchange-offer-form.html',\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'currencyId': currencyId,\n                                'decimals': decimals,\n                                'ticker': ticker,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openPublishExchangeBuyOfferModal = function (currencyId, decimals, ticker) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/publish-exchange-buy-offer-form.html',\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'currencyId': currencyId,\n                                'decimals': decimals,\n                                'ticker': ticker,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openPublishExchangeSellOfferModal = function (currencyId, decimals, ticker) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/publish-exchange-sell-offer-form.html',\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'currencyId': currencyId,\n                                'decimals': decimals,\n                                'ticker': ticker,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openCancelExchangeOfferModal = function (currencyId, typeOnly) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/cancel-exchange-offer-form.html',\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'currencyId': currencyId,\n                                'typeOnly': typeOnly\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openCurrencyReserveClaimModal = function (currencyId, decimals, ticker) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/currency-reserve-claim-form.html',\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'currencyId': currencyId,\n                                'decimals': decimals,\n                                'ticker': ticker,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openCurrencyReserveIncreaseModal = function (currencyId, decimals, ticker) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/currency-reserve-increase-form.html',\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'currencyId': currencyId,\n                                'decimals': decimals,\n                                'ticker': ticker,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openBuyCurrencyModal = function (currencyId, decimals, ticker) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/buy-currency-form.html',\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'currencyId': currencyId,\n                                'decimals': decimals\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openSellCurrencyModal = function (currencyId, decimals, ticker) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/sell-currency-form.html',\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'currencyId': currencyId,\n                                'decimals': decimals\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openSearchCurrencyModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/search-currency-form.html',\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openTransferCurrencyModal = function (currencyId, decimals, ticker) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/transfer-currency-form.html',\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'currencyId': currencyId,\n                                'decimals': decimals,\n                                'ticker': ticker,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openSendCurrencyModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/send-currency-form.html',\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openCurrencyDetailsModal = function (currencyId, decimals, ticker) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'currencies/modals/currency-details.html',\n                    size: 'lg',\n                    controller: 'CurrencyDetailsCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'currencyId': currencyId,\n                                'decimals': decimals,\n                                'ticker': ticker,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openTradeDesk = function (currencyId) {\n                $state.go('client.signedin.currencies.trade', {currencyId: currencyId});\n            };\n\n        }]);\n\nangular.module('currencies').controller('CurrenciesCtrl',\n    ['$scope', 'CurrenciesService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter',\n        function ($scope, CurrenciesService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter) {\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('currencies')\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    CurrenciesService.getCurrencies(data.start, endIndex).then(function (response) {\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'currencies': response.currencies\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n\n                DTColumnBuilder.newColumn('currency').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                    }),\n\n                DTColumnBuilder.newColumn('code').withTitle('Ticker').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openCurrencyDetailsModal(\\'' + row.code +\n                            '\\')\" ng-controller=\"CurrenciesMainCtrl\"> ' + data + '</a>';\n                    }),\n\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('accountRS').withTitle('Issuer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('currentSupply').withTitle('Supply').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return supplyFilter(data, row.decimals);\n                    }),\n\n                DTColumnBuilder.newColumn('numberOfExchanges').withTitle('Exchanges').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('numberOfTransfers').withTitle('Transfers').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('currency').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var tt_desk = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"TradeDesk\"';\n\n                        var trade_tag = false;\n\n                        if ( parseInt(row.currentSupply) === 0) { trade_tag = true; }\n\n                        return '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_desk + ' ng-controller=\"CurrenciesMainCtrl\"' +\n                            'ng-disabled=\"' + trade_tag + '\"' + ' ng-click=\"openTradeDesk(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\')\">' +\n                            ' <i class=\"fa fa-bar-chart\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                    })\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadCurrencies = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n\n        }]);\n\nangular.module('currencies').controller('MyCurrenciesCtrl',\n    ['$scope', 'CurrenciesService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService',\n        'currencyModelFilter',\n        function ($scope, CurrenciesService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService,\n                  currencyModelFilter) {\n\n            $scope.dtOptionsCurrencies = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('serverSide', false)\n                .withDataProp('accountCurrencies')\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', false)\n                .withOption('bFilter', false).withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var accountId = CommonsService.getAccountDetailsFromSession('accountId');\n                    CurrenciesService.getAccountCurrencies(accountId).then(function (response) {\n                        callback({\n                            'iTotalRecords': response.accountCurrencies.length,\n                            'iTotalDisplayRecords': response.accountCurrencies.length,\n                            'accountCurrencies': response.accountCurrencies\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumnsCurrencies = [\n\n                DTColumnBuilder.newColumn('currency').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                    }),\n\n                DTColumnBuilder.newColumn('code').withTitle('Ticker').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openCurrencyDetailsModal(\\'' + row.code +\n                            '\\')\" ng-controller=\"CurrenciesMainCtrl\"> ' + data + '</a>';\n                    }),\n\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('units').withTitle('Units').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return supplyFilter(data, row.decimals);\n                    }),\n\n                DTColumnBuilder.newColumn('numberOfExchanges').withTitle('Exchanges').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('numberOfTransfers').withTitle('Transfers').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('currency').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var tt_desk = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"TradeDesk\"';\n\n                        var tt_exchange = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Exchange\"';\n\n                        var tt_transfer = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Transfer\"';\n\n                        var tt_delete = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Delete\"';\n\n\n                        var trade = '<button type=\"button\" class=\"btn btn-default btn-xs\" ' + tt_desk + ' ng-controller=\"CurrenciesMainCtrl\"' +\n                            ' ng-click=\"openTradeDesk(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\',\\'' + row.code + '\\')\">' +\n                            ' <i class=\"fa fa-bar-chart\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                        var transfer = '<button type=\"button\" class=\"btn btn-default btn-xs\" ' + tt_transfer + ' ng-controller=\"CurrenciesMainCtrl\"' +\n                            ' ng-click=\"openTransferCurrencyModal(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\',\\'' + row.code + '\\')\">' +\n                            ' <i class=\"fa fa-user\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                        var del = '<button type=\"button\" class=\"btn btn-default btn-xs\" ' + tt_delete + ' ng-controller=\"CurrenciesMainCtrl\"' +\n                            ' ng-click=\"openDeleteCurrencyModal(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\',\\'' + row.code + '\\')\">' +\n                            ' <i class=\"fa fa-times\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                        var exchange = '<button type=\"button\" class=\"btn btn-default btn-xs\" ' + tt_exchange + ' ng-controller=\"CurrenciesMainCtrl\"' +\n                            ' ng-click=\"openPublishExchangeOfferModal(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\',\\'' + row.code +  '\\')\">' +\n                            ' <i class=\"fa fa-usd\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                        var claim = '<button type=\"button\" class=\"btn btn-default btn-xs\" ng-controller=\"CurrenciesMainCtrl\"' +\n                            ' ng-click=\"openCurrencyReserveClaimModal(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\',\\'' + row.code + '\\')\">' +\n                            ' <i class=\"fa fa-hand-paper-o\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                        var increase = '<button type=\"button\" class=\"btn btn-default btn-xs\" ng-controller=\"CurrenciesMainCtrl\"' +\n                            ' ng-click=\"openCurrencyReserveIncreaseModal(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\',\\'' + row.code + '\\')\">' +\n                            ' <i class=\"fa fa-arrow-up\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                        var founder = '<button type=\"button\" class=\"btn btn-default btn-xs\" ng-controller=\"CurrenciesMainCtrl\"' +\n                            ' ng-click=\"openCurrencyFoundersModal(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\',\\'' + row.code + '\\')\">' +\n                            ' <i class=\"fa fa-diamond\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n\n                        return trade + ' ' + exchange + ' ' + transfer + ' ' + del;\n\n                    })\n\n            ];\n\n            $scope.dtInstanceCallbackCurrencies = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadCurrencies = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n\n        }]);\n\nangular.module('currencies').controller('CurrenciesExchangesCtrl',\n    ['$scope', 'CurrenciesService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'quantToAmountFilter',\n        'numericalStringFilter',\n        function ($scope, CurrenciesService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, quantToAmountFilter,\n                  numericalStringFilter) {\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('exchanges')\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    CurrenciesService.getAllExchanges(data.start, endIndex).then(function (response) {\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'exchanges': response.exchanges\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('offer').withTitle('Offer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                    }),\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return timestampFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('code').withTitle('Ticker').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openCurrencyDetailsModal(\\'' + row.code +\n                            '\\')\" ng-controller=\"CurrenciesMainCtrl\"> ' + data + '</a>';\n                    }),\n\n\n                DTColumnBuilder.newColumn('rateTQT').withTitle('Rate').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var price = data * Math.pow(10, row.decimals) / 100000000;\n                        return price.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n\n                    }),\n\n                DTColumnBuilder.newColumn('units').withTitle('Units').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var quantity = parseInt(data) / Math.pow(10, row.decimals);\n                        return quantity.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n\n                    }),\n\n                DTColumnBuilder.newColumn('sellerRS').withTitle('Seller').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('buyerRS').withTitle('Buyer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('transaction').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-default btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                    }),\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadCurrencies = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n\n        }]);\n\nangular.module('currencies').controller('CurrenciesFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n        var issueCurrencySteps = [\n            {\n                templateUrl: 'currencies/modals/issue-currency-details.html',\n                title: 'Issue Currency Details',\n                controller: 'IssueCurrencyFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'currencies/modals/issue-currency-details-2.html',\n                title: 'Issue Currency Details 2',\n                controller: 'IssueCurrencyFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'currencies/modals/issue-currency-confirm.html',\n                title: 'Issue Currency Confirmation',\n                controller: 'IssueCurrencyFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var deleteCurrencySteps = [\n            {\n                templateUrl: 'currencies/modals/delete-currency-details.html',\n                title: 'Delete Currency Details',\n                controller: 'DeleteCurrencyFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'currencies/modals/delete-currency-confirm.html',\n                title: 'Delete Currency Confirmation',\n                controller: 'DeleteCurrencyFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var searchCurrenciesSteps = [\n            {\n                templateUrl: 'currencies/modals/search-currency-details.html',\n                title: 'Search Currency Query',\n                controller: 'SearchCurrencyFormCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'currencies/modals/search-currency-confirm.html',\n                title: 'Search Currency Results',\n                controller: 'SearchCurrencyFormCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var transferCurrencySteps = [\n            {\n                templateUrl: 'currencies/modals/transfer-currency-details.html',\n                title: 'Transfer Currency Details',\n                controller: 'TransferCurrencyFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'currencies/modals/transfer-currency-confirm.html',\n                title: 'Transfer Currency Confirmation',\n                controller: 'TransferCurrencyFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var sendCurrencySteps = [\n            {\n                templateUrl: 'currencies/modals/send-currency-details.html',\n                title: 'Send Currency Details',\n                controller: 'TransferCurrencyFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'currencies/modals/send-currency-confirm.html',\n                title: 'Send Currency Confirmation',\n                controller: 'TransferCurrencyFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var publishExchangeOfferSteps = [\n            {\n                templateUrl: 'currencies/modals/publish-exchange-offer-details.html',\n                title: 'Exchange Offer Details',\n                controller: 'PublishExchangeOrderFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'currencies/modals/publish-exchange-offer-confirm.html',\n                title: 'Exchange Offer Confirmation',\n                controller: 'PublishExchangeOrderFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var cancelExchangeOfferSteps = [\n            {\n                templateUrl: 'currencies/modals/cancel-exchange-offer-confirm.html',\n                title: 'Exchange Offer Details',\n                controller: 'CancelExchangeOfferFormController',\n                isolatedScope: true,\n                data: params,\n            },\n        ];\n\n        var publishExchangeBuyOfferSteps = [\n            {\n                templateUrl: 'currencies/modals/publish-exchange-buy-offer-details.html',\n                title: 'Currency Buy Offer Details',\n                controller: 'PublishExchangeOrderFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'currencies/modals/publish-exchange-buy-offer-confirm.html',\n                title: 'Currency Buy Offer Confirmation',\n                controller: 'PublishExchangeOrderFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var publishExchangeSellOfferSteps = [\n            {\n                templateUrl: 'currencies/modals/publish-exchange-sell-offer-details.html',\n                title: 'Currency Sell Offer Details',\n                controller: 'PublishExchangeOrderFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'currencies/modals/publish-exchange-sell-offer-confirm.html',\n                title: 'Currency Sell Offer Confirmation',\n                controller: 'PublishExchangeOrderFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var currencyReserveClaimSteps = [\n            {\n                templateUrl: 'currencies/modals/currency-reserve-claim-details.html',\n                title: 'Reserve Claim Details',\n                controller: 'CurrencyReserveClaimFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'currencies/modals/currency-reserve-claim-confirm.html',\n                title: 'Reserve Claim Confirmation',\n                controller: 'CurrencyReserveClaimFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var currencyReserveIncreaseSteps = [\n            {\n                templateUrl: 'currencies/modals/currency-reserve-increase-details.html',\n                title: 'Reserve Increase Details',\n                controller: 'CurrencyReserveIncreaseFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'currencies/modals/currency-reserve-increase-confirm.html',\n                title: 'Reserve Increase Confirmation',\n                controller: 'CurrencyReserveIncreaseFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var buyCurrencySteps = [\n\n            {\n                templateUrl: 'currencies/modals/buy-currency-confirm.html',\n                title: 'Buy Currency Confirmation',\n                controller: 'BuyCurrencyFormController',\n                isolatedScope: true,\n                data: params,\n            },\n        ];\n\n        var sellCurrencySteps = [\n\n            {\n                templateUrl: 'currencies/modals/sell-currency-confirm.html',\n                title: 'Sell Currency Confirmation',\n                controller: 'SellCurrencyFormController',\n                isolatedScope: true,\n                data: params,\n            },\n        ];\n\n\n        $scope.steps = {};\n\n        $scope.steps.issueCurrencyForm = issueCurrencySteps;\n        $scope.steps.deleteCurrencyForm = deleteCurrencySteps;\n        $scope.steps.searchCurrencyForm = searchCurrenciesSteps;\n        $scope.steps.transferCurrencyForm = transferCurrencySteps;\n        $scope.steps.sendCurrencyForm = sendCurrencySteps;\n        $scope.steps.publishExchangeOfferForm = publishExchangeOfferSteps;\n        $scope.steps.publishExchangeBuyOfferForm = publishExchangeBuyOfferSteps;\n        $scope.steps.publishExchangeSellOfferForm = publishExchangeSellOfferSteps;\n        $scope.steps.cancelExchangeOfferForm = cancelExchangeOfferSteps;\n        $scope.steps.currencyReserveClaimForm = currencyReserveClaimSteps;\n        $scope.steps.currencyReserveIncreaseForm = currencyReserveIncreaseSteps;\n        $scope.steps.buyCurrencyForm = buyCurrencySteps;\n        $scope.steps.sellCurrencyForm = sellCurrencySteps;\n\n    }]);\n\nangular.module('currencies').controller('CurrencyDetailsCtrl',\n    ['$scope', 'CurrenciesService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService', 'params',\n        '$uibModalInstance',\n        function ($scope, CurrenciesService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService, params,\n                  $uibModalInstance) {\n\n            $scope.initCurrencyDetails = function () {\n                CurrenciesService.getCurrency(params.currencyId, true).then(function (success) {\n                    $scope.currencyDetails = success;\n                }, function (error) {\n                });\n            };\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n        }]);\n\nangular.module('currencies').controller('CurrenciesMyExchangesCtrl',\n    ['$scope', 'CurrenciesService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'quantToAmountFilter',\n        'numericalStringFilter', 'AccountService', 'numberStringFilter',\n        function ($scope, CurrenciesService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, quantToAmountFilter,\n                  numericalStringFilter, AccountService, numberStringFilter) {\n\n            $scope.dtMyExchangesOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('myexchanges')\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    var accountRS = AccountService.getAccountDetailsFromSession('accountRs');\n                    CurrenciesService.getExchanges('', accountRS, data.start, endIndex).then(function (response) {\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'myexchanges': response.exchanges\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtMyExchangesColumns = [\n\n\n                DTColumnBuilder.newColumn('offer').withTitle('Offer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                    }),\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return timestampFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('code').withTitle('Ticker').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openCurrencyDetailsModal(\\'' + row.code +\n                            '\\')\" ng-controller=\"CurrenciesMainCtrl\"> ' + data + '</a>';\n                    }),\n\n                DTColumnBuilder.newColumn('rateTQT').withTitle('Rate').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n\n                        var price = data * Math.pow(10, row.decimals) / 100000000;\n                        return price.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n\n\n                    }),\n\n                DTColumnBuilder.newColumn('units').withTitle('Units').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var quantity = parseInt(data) / Math.pow(10, row.decimals);\n                        return quantity.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n\n                    }),\n\n\n                DTColumnBuilder.newColumn('sellerRS').withTitle('Seller').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('buyerRS').withTitle('Buyer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('transaction').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-default btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                    }),\n\n            ];\n\n            $scope.dtMyExchangesInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadMyExchanges = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n\n        }]);\n\nangular.module('currencies').controller('CurrenciesMyTransfersCtrl',\n    ['$scope', 'CurrenciesService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'quantToAmountFilter',\n        'numericalStringFilter', 'AccountService',\n        function ($scope, CurrenciesService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, quantToAmountFilter,\n                  numericalStringFilter, AccountService) {\n\n            $scope.dtMyTransfersOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('transfers')\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    var accountRS = AccountService.getAccountDetailsFromSession('accountRs');\n                    CurrenciesService.getCurrencyTransfers('', accountRS, data.start, endIndex)\n                        .then(function (response) {\n                            callback({\n                                'iTotalRecords': 1000,\n                                'iTotalDisplayRecords': 1000,\n                                'transfers': response.transfers\n                            });\n                        });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtMyTransfersColumns = [\n\n\n                DTColumnBuilder.newColumn('transfer').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                    }),\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return timestampFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('code').withTitle('Ticker').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openCurrencyDetailsModal(\\'' + row.code +\n                            '\\')\" ng-controller=\"CurrenciesMainCtrl\"> ' + data + '</a>';\n                    }),\n\n                DTColumnBuilder.newColumn('units').withTitle('Units').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return supplyFilter(data, row.decimals);\n                    }),\n\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n\n            ];\n\n            $scope.dtMyTransfersInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadMyTransfers = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n\n        }]);\n\nangular.module('currencies').controller('CurrenciesMyOffersCtrl',\n    ['$scope', 'CurrenciesService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'quantToAmountFilter',\n        'numericalStringFilter', 'AccountService',\n        function ($scope, CurrenciesService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, quantToAmountFilter,\n                  numericalStringFilter, AccountService) {\n\n            $scope.dtMyBuyOffersOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('buyoffers')\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    var accountRS = AccountService.getAccountDetailsFromSession('accountRs');\n                    CurrenciesService.getBuyOffers(accountRS, '', data.start, endIndex).then(function (response) {\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'buyoffers': response.offers\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtMyBuyOffersColumns = [\n\n                DTColumnBuilder.newColumn('offer').withTitle('offer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n                    }),\n\n                DTColumnBuilder.newColumn('code').withTitle('Ticker').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openCurrencyDetailsModal(\\'' + row.code +\n                            '\\')\" ng-controller=\"CurrenciesMainCtrl\"> ' + data + '</a>';\n                    }),\n\n\n                DTColumnBuilder.newColumn('rateTQT').withTitle('price').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var price = data * Math.pow(10, row.decimals) / 100000000;\n                        return price.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n\n                    }),\n\n                DTColumnBuilder.newColumn('limit').withTitle('Limit').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return supplyFilter(data, row.decimals);\n                    }),\n\n                DTColumnBuilder.newColumn('supply').withTitle('Supply').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return supplyFilter(data, row.decimals);\n                    }),\n\n                DTColumnBuilder.newColumn('expirationHeight').withTitle('Height').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n                DTColumnBuilder.newColumn('currency').withTitle('Actions').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + ' ng-controller=\"CurrenciesMainCtrl\"' +\n                            ' ng-click=\"openCancelExchangeOfferModal(\\'' + data + '\\',\\'BUY\\')\">' +\n                            ' <i class=\"fa fa-times\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                    }),\n\n\n            ];\n\n            $scope.dtMySellOffersOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('buyoffers')\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    var accountRS = AccountService.getAccountDetailsFromSession('accountRs');\n                    CurrenciesService.getSellOffers(accountRS, '', data.start, endIndex).then(function (response) {\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'buyoffers': response.offers\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtMySellOffersColumns = [\n\n                DTColumnBuilder.newColumn('offer').withTitle('offer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n                    }),\n\n                DTColumnBuilder.newColumn('code').withTitle('Ticker').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a ng-click=\"openCurrencyDetailsModal(\\'' + row.code +\n                            '\\')\" ng-controller=\"CurrenciesMainCtrl\"> ' + data + '</a>';\n                    }),\n\n\n                DTColumnBuilder.newColumn('rateTQT').withTitle('price').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var price = data * Math.pow(10, row.decimals) / 100000000;\n                        return price.toLocaleString('en-US', {minimumFractionDigits: row.decimals});\n\n                    }),\n\n                DTColumnBuilder.newColumn('limit').withTitle('Limit').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return supplyFilter(data, row.decimals);\n                    }),\n\n                DTColumnBuilder.newColumn('supply').withTitle('Supply').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return supplyFilter(data, row.decimals);\n                    }),\n\n                DTColumnBuilder.newColumn('expirationHeight').withTitle('Height').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n                DTColumnBuilder.newColumn('currency').withTitle('Actions').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + ' ng-controller=\"CurrenciesMainCtrl\"' +\n                            ' ng-click=\"openCancelExchangeOfferModal(\\'' + data + '\\',\\'SELL\\')\">' +\n                            ' <i class=\"fa fa-times\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                    }),\n\n\n            ];\n\n            $scope.dtMyBuyOffersInstanceCallback = function (_dtInstance) {\n                $scope.dtInstanceBuyOffer = _dtInstance;\n            };\n            $scope.reloadMyBuyOffers = function () {\n                if ($scope.dtInstanceBuyOffer) {\n                    $scope.dtInstanceBuyOffer._renderer.rerender();\n                }\n            };\n\n            $scope.dtMySellOffersInstanceCallback = function (_dtInstance) {\n                $scope.dtInstanceSellOffer = _dtInstance;\n            };\n            $scope.reloadMySellOffers = function () {\n                if ($scope.dtInstanceSellOffer) {\n                    $scope.dtInstanceSellOffer._renderer.rerender();\n                }\n            };\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies').controller('SearchCurrencyFormCtrl',\n    ['$scope', 'CurrenciesService', 'SessionStorageService', '$state', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'searchTermFilter', '$compile', 'multiStepFormScope', '$validation', 'supplyFilter',\n        'currencyModelFilter', '$q',\n        function ($scope, CurrenciesService, SessionStorageService, $state, DTOptionsBuilder,\n                  DTColumnBuilder, searchTermFilter, $compile, multiStepFormScope, $validation, supplyFilter,\n                  currencyModelFilter, $q) {\n\n            $scope.searchCurrencyForm = {};\n\n            $scope.onSubmit = function () {\n                $validation.validate($scope.searchCurrencyForm);\n                if ($scope.searchCurrencyForm.$valid) {\n                    $scope.$nextStep();\n                }\n            };\n\n            $scope.searchCurrencyForm = angular.copy(multiStepFormScope.searchCurrencyForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.searchCurrencyForm = angular.copy($scope.searchCurrencyForm);\n            });\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('serverSide', false)\n                .withDataProp('currencies')\n                .withOption('processing', true)\n                .withOption('info', false)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var query = $scope.searchCurrencyForm.query;\n                    var nameSearch = CurrenciesService.searchCurrencies(query);\n                    var idSearch = CurrenciesService.getCurrencyById(query);\n                    $q.all([nameSearch,idSearch]).then(function (response) {\n                        if(response[1].currency){\n                            response[0].currencies=response[0].currencies||[];\n                            response[0].currencies.push(response[1]);\n                        }\n                        callback({\n                            'iTotalRecords': response[0].currencies.length,\n                            'iTotalDisplayRecords': response[0].currencies.length,\n                            'currencies': response[0].currencies\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('code').withTitle('Ticker').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('accountRS').withTitle('Issuer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('currency').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var details = '<button type=\"button\" class=\"btn btn-default btn-sm\" ng-controller=\"CurrenciesMainCtrl\"' +\n                            ' ng-click=\"openCurrencyDetailsModal(\\'' + row.code + '\\')\">' +\n                            ' <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> ' + '</button>';\n\n\n                        var trade = '<button type=\"button\" class=\"btn btn-default btn-sm\" ng-controller=\"CurrenciesMainCtrl\"' +\n                            ' ng-click=\"openTradeDesk(\\'' + data +\n                            '\\',\\'' + row.decimals + '\\')\">' +\n                            ' <i class=\"fa fa-bar-chart\" aria-hidden=\"true\"></i> ' + '</button>';\n\n                        return details + '&nbsp;' + trade;\n\n                    }),\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies').controller('IssueCurrencyFormController',\n    ['$scope', 'CurrenciesService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService',\n        function ($scope, CurrenciesService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService) {\n\n            $scope.issueCurrencyForm = angular.copy(multiStepFormScope.issueCurrencyForm);\n            $scope.issueCurrencyForm2 = angular.copy(multiStepFormScope.issueCurrencyForm2);\n\n            $scope.currencyTypes = [1,2,4,8,32];\n\n            $scope.$watchCollection('issueCurrencyForm2.initialSupply', function () {\n                if ($scope.issueCurrencyForm2) {\n                    $scope.issueCurrencyForm2.maxSupply = $scope.issueCurrencyForm2.initialSupply;\n                }\n            });\n\n            $scope.$watchCollection('issueCurrencyForm2.types', function (currencyTypes) {\n\n                if (currencyTypes) {\n                    if (currencyTypes[1]) {\n                        //Exchangeable\n                    }\n                    if (currencyTypes[2]) {\n                        //controllable\n                    }\n\n                    if (currencyTypes[4]) {\n                        //reservable\n                        $scope.reservable = true;\n                        currencyTypes[8] = true;\n\n                    } else {\n                        currencyTypes[8] = false;\n                        $scope.reservable = false;\n                    }\n                    if (currencyTypes[8]) {\n                        $scope.reservable = true;\n\n                        if (!currencyTypes[4]) {\n                            currencyTypes[4] = true;\n                        }\n\n                        $scope.issueCurrencyForm2.initialSupply = 0;\n\n                    }\n                }\n            });\n\n            $scope.getBlockChainStatus = function () {\n                console.log('executing block chain status');\n                CurrenciesService.getBlockChainStatus().then(function (success) {\n                    $scope.currentHeight = success.numberOfBlocks;\n                });\n            };\n\n            function removeElementFromArray(array, elem) {\n                if (array) {\n                    var length = array.length;\n                    for (var i = 0; i < length; i++) {\n                        array[i].selected = false;\n                    }\n                }\n            }\n\n            function hasElement(array, value) {\n                if (array) {\n                    var length = array.length;\n                    for (var i = 0; i < length; i++) {\n                        return array[i].selected;\n                    }\n                }\n                return false;\n            }\n\n            function sumArray(json) {\n                var sum = 0;\n                if (json) {\n                    for (var key in json) {\n                        if (json.hasOwnProperty(key) && json[key]) {\n                            sum = sum + parseInt(key);\n                        }\n                    }\n\n                }\n                return sum;\n            }\n\n            $scope.validateAndMoveNextStep = function () {\n                var issueCurrencyForm2 = $scope.issueCurrencyForm2;\n                var typesArray = issueCurrencyForm2.types;\n                var type = sumArray(issueCurrencyForm2.types);\n                if (!(type > 0)) {\n                    AlertService.addAlert(\n                        {\n                            type: 'danger',\n                            msg: 'Form error. Atleast one currency type must be selected'\n                        }, alertConfig.issueCurrencyModalAlert\n                    );\n                    return;\n                }\n                $scope.$nextStep();\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.issueCurrencyForm = angular.copy($scope.issueCurrencyForm);\n                multiStepFormScope.issueCurrencyForm2 = angular.copy($scope.issueCurrencyForm2);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.issueCurrency = function () {\n                var issueCurrencyForm = multiStepFormScope.issueCurrencyForm;\n                var issueCurrencyForm2 = multiStepFormScope.issueCurrencyForm2;\n                var name = issueCurrencyForm.name;\n                var code = issueCurrencyForm.code.toUpperCase();\n                var description = issueCurrencyForm.description;\n                var decimals = parseInt(issueCurrencyForm2.decimals);\n                var initialSupply = parseInt(issueCurrencyForm2.initialSupply) * Math.pow(10, decimals);\n                var maxSupply = parseInt(issueCurrencyForm2.maxSupply) * Math.pow(10, decimals);\n                var type = sumArray(issueCurrencyForm2.types);\n\n                var activHeight = 0;\n                var minAmount = '';\n                var reserveSupply = '';\n\n                if (type&(1<<2)) {\n                    activHeight = parseInt(issueCurrencyForm2.activHeight);\n                    minAmount = parseInt(issueCurrencyForm2.minAmount) * 100000000;\n                    reserveSupply = parseInt(issueCurrencyForm2.reserveSupply) * Math.pow(10, decimals);\n                }\n\n                var fee = 1;\n\n                if (!fee) {\n                    fee = 1;\n                }\n\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = issueCurrencyForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                $scope.issueCUrrencyPromise = CurrenciesService.issueCurrency(publicKey, name, code, description, type,\n                    initialSupply, maxSupply,\n                    decimals, fee, minAmount, activHeight, reserveSupply)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.issueCurrencyModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.issueCurrencyModalAlert);\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.issueCUrrencyPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' +\n                                    success.transaction +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.issueCurrencyModalAlert);\n                    });\n            };\n\n        }\n\n    ]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies').controller('DeleteCurrencyFormController',\n    ['$scope', 'CurrenciesService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'multiStepFormInstance',\n        function ($scope, CurrenciesService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, multiStepFormInstance) {\n\n\n            $scope.deleteCurrencyForm = angular.copy(multiStepFormScope.deleteCurrencyForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n\n                    $scope.deleteCurrencyForm.currencyId = data.currencyId;\n                    $scope.deleteCurrencyForm.decimals = data.decimals;\n                    $scope.deleteCurrencyForm.ticker = data.ticker;\n\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.deleteCurrencyForm = angular.copy($scope.deleteCurrencyForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.deleteCurrency = function () {\n                var deleteCurrencyForm = multiStepFormScope.deleteCurrencyForm;\n                var currency = deleteCurrencyForm.currencyId;\n                var fee = deleteCurrencyForm.fee;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var accountRS = CommonsService.getAccountDetailsFromSession('accountRs');\n                var secret = deleteCurrencyForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.deleteCurrencyPromise = CurrenciesService.canDeleteCurrency(currency, accountRS)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            if (success.canDelete) {\n                                $scope.deleteCurrencyPromise = CurrenciesService.deleteCurrency(currency, fee,\n                                    publicKey)\n                                    .then(function (success) {\n                                        if (!success.errorCode) {\n                                            var unsignedBytes = success.unsignedTransactionBytes;\n                                            var signatureHex = CryptoService.signatureHex(unsignedBytes,\n                                                secretPhraseHex);\n                                            $scope.transactionBytes =\n                                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                                            $scope.validBytes = true;\n\n                                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                                        } else {\n                                            AlertService.addAlert(\n                                                {\n                                                    type: 'danger',\n                                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                                }, alertConfig.deleteCurrencyModalAlert\n                                            );\n                                        }\n                                    }, function (error) {\n                                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                            alertConfig.deleteCurrencyModalAlert);\n                                    });\n                            } else {\n                                AlertService.addAlert(\n                                    {\n                                        type: 'danger',\n                                        msg: 'Sorry, You can not delete currency ' + currency\n                                    }, alertConfig.deleteCurrencyModalAlert\n                                );\n                            }\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.deleteCurrencyModalAlert);\n                    });\n\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.deleteCurrencyPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.deleteCurrencyModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies').controller('TransferCurrencyFormController',\n    ['$scope', 'CurrenciesService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService',\n        function ($scope, CurrenciesService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService) {\n\n\n            $scope.transferCurrencyForm = angular.copy(multiStepFormScope.transferCurrencyForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n\n                    $scope.transferCurrencyForm.currencyId = data.currencyId;\n                    $scope.transferCurrencyForm.decimals = data.decimals;\n                    $scope.transferCurrencyForm.ticker = data.ticker;\n                }\n            };\n\n            $scope.nextStep = function () {\n                var currencyForm = $scope.transferCurrencyForm;\n                if (currencyForm.currencyId && currencyForm.decimals !== undefined && currencyForm.ticker) {\n                    $scope.$nextStep();\n                } else {\n                    CurrenciesService.getCurrencyById(currencyForm.currencyId).then(function (success) {\n                        if (success.currency) {\n                            $scope.transferCurrencyForm.currencyId = success.currency;\n                            $scope.transferCurrencyForm.decimals = success.decimals;\n                            $scope.transferCurrencyForm.ticker = success.code;\n                            $scope.$nextStep();\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.transferCurrencyModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.transferCurrencyModalAlert);\n                    });\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.transferCurrencyForm = angular.copy($scope.transferCurrencyForm);\n            });\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: false,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.transferCurrencyForm.recipient = result.accountRS;\n                });\n            };\n\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.transferCurrency = function () {\n                var transferCurrencyForm = multiStepFormScope.transferCurrencyForm;\n                var currency = transferCurrencyForm.currencyId;\n                var units = parseInt(transferCurrencyForm.units * Math.pow(10, transferCurrencyForm.decimals));\n                var fee = 1;\n                var recipientRS = transferCurrencyForm.recipient;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = transferCurrencyForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.transferCurrencyPromise = CurrenciesService.transferCurrency(publicKey, recipientRS, currency,\n                    units, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.transferCurrencyModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.transferCurrencyModalAlert);\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.transferCurrencyPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.transferCurrencyModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies').controller('PublishExchangeOrderFormController',\n    ['$scope', 'CurrenciesService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'shareToQuantiyFilter', 'amountToQuantFilter', 'controlConfig',\n        function ($scope, CurrenciesService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, shareToQuantiyFilter, amountToQuantFilter, controlConfig) {\n\n\n            $scope.publishExchangeOfferForm = angular.copy(multiStepFormScope.publishExchangeOfferForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n                    $scope.publishExchangeOfferForm.currencyId = data.currencyId;\n                    $scope.publishExchangeOfferForm.decimals = data.decimals;\n                    $scope.publishExchangeOfferForm.ticker = data.ticker;\n                    CurrenciesService.getCurrencyById(data.currencyId).then(function (success) {\n                        $scope.publishExchangeOfferForm.name = success.name;\n                    });\n\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.publishExchangeOfferForm = angular.copy($scope.publishExchangeOfferForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.checkControlEnabled = function () {\n                var accountControl = {};\n                accountControl.hasControl =\n                    SessionStorageService.getFromSession(controlConfig.SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY);\n                accountControl.controlDetails =\n                    SessionStorageService.getFromSession(controlConfig.SESSION_ACCOUNT_CONTROL_JSONCONTROL_KEY);\n                accountControl.phasingFinishHeight = $rootScope.options.TX_HEIGHT;\n                $scope.accountControl = accountControl;\n            };\n\n            $scope.getBlockChainStatus = function () {\n                CurrenciesService.getBlockChainStatus().then(function (success) {\n                    $scope.publishExchangeOfferForm.currentHeight = success.numberOfBlocks;\n                });\n            };\n\n            $scope.expirationHeight = 1440;\n            $scope.days = 1;\n\n            $scope.increment = function () {\n                if ($scope.expirationHeight >= 14400) {\n                    $scope.expirationHeight = 14400;\n                    return;\n                } else {\n                    $scope.expirationHeight = $scope.expirationHeight + 1440;\n                }\n\n                $scope.publishExchangeOfferForm.expirationHeight = $scope.expirationHeight;\n                $scope.days = parseInt($scope.expirationHeight / 1440);\n            };\n\n            $scope.decrement = function () {\n                if ($scope.expirationHeight <= 1440) {\n                    $scope.expirationHeight = 1440;\n                    return;\n                } else {\n                    $scope.expirationHeight = $scope.expirationHeight - 1440;\n                }\n\n                $scope.publishExchangeOfferForm.expirationHeight = $scope.expirationHeight;\n                $scope.days = parseInt($scope.expirationHeight / 1440);\n            };\n\n            $scope.max = function () {\n                $scope.expirationHeight = 14400;\n                $scope.publishExchangeOfferForm.expirationHeight = 14400;\n\n                $scope.days = parseInt($scope.expirationHeight / 1440);\n\n            };\n\n            $scope.min = function () {\n                $scope.expirationHeight = 1440;\n                $scope.publishExchangeOfferForm.expirationHeight = 1440;\n                $scope.days = parseInt($scope.expirationHeight / 1440);\n            };\n\n\n            $scope.publishExchangeOffer = function () {\n\n                var publishExchangeOfferForm = multiStepFormScope.publishExchangeOfferForm;\n                var currency = publishExchangeOfferForm.currencyId;\n                var limits = {};\n\n                if (publishExchangeOfferForm.typeOnly === 'BUY') {\n\n                    publishExchangeOfferForm.sellRate = publishExchangeOfferForm.buyRate;\n                    publishExchangeOfferForm.sellLimit = 0;\n                    publishExchangeOfferForm.initialSellSupply = 0;\n                    publishExchangeOfferForm.buyLimit = publishExchangeOfferForm.initialBuySupply;\n\n                }\n                if (publishExchangeOfferForm.typeOnly === 'SELL') {\n                    publishExchangeOfferForm.buyRate = publishExchangeOfferForm.sellRate;\n                    publishExchangeOfferForm.buyLimit = 0;\n                    publishExchangeOfferForm.initialBuySupply = 0;\n                    publishExchangeOfferForm.sellLimit = publishExchangeOfferForm.initialSellSupply;\n\n\n                }\n                limits.buyRate = parseInt(amountToQuantFilter(publishExchangeOfferForm.buyRate) / Math.pow(10,\n                        publishExchangeOfferForm.decimals));\n                limits.sellRate = parseInt(amountToQuantFilter(publishExchangeOfferForm.sellRate) / Math.pow(10,\n                        publishExchangeOfferForm.decimals));\n\n                limits.totalBuy = parseInt(\n                    publishExchangeOfferForm.buyLimit * Math.pow(10, publishExchangeOfferForm.decimals));\n                limits.totalSell = parseInt(\n                    publishExchangeOfferForm.sellLimit * Math.pow(10, publishExchangeOfferForm.decimals));\n\n                var supply = {};\n\n                supply.initialBuy = parseInt(\n                    publishExchangeOfferForm.initialBuySupply * Math.pow(10, publishExchangeOfferForm.decimals));\n                supply.initialSell = parseInt(\n                    publishExchangeOfferForm.initialSellSupply * Math.pow(10, publishExchangeOfferForm.decimals));\n\n                var expirationHeight = parseInt(publishExchangeOfferForm.expirationHeight) + parseInt(\n                        publishExchangeOfferForm.currentHeight);\n\n                $scope.publishExchangeOfferForm.expirationHeight = expirationHeight;\n\n                var fee = 1;\n\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = publishExchangeOfferForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.publishExchangeOfferPromise = CurrenciesService.publishExchangeOffer(publicKey, currency, limits,\n                    supply, expirationHeight, fee)\n                                                                      .then(function (success) {\n                                                                          if (!success.errorCode) {\n                                                                              var unsignedBytes = success.unsignedTransactionBytes;\n                                                                              var signatureHex = CryptoService.signatureHex(\n                                                                                  unsignedBytes, secretPhraseHex);\n                                                                              $scope.transactionBytes =\n                                                                                  CryptoService.signTransactionHex(\n                                                                                      unsignedBytes, signatureHex);\n\n                                                                              $scope.validBytes = true;\n\n                                                                              $scope.tx_fee =\n                                                                                  success.transactionJSON.feeTQT /\n                                                                                  100000000;\n                                                                              $scope.tx_amount =\n                                                                                  success.transactionJSON.amountTQT /\n                                                                                  100000000;\n                                                                              $scope.tx_total =\n                                                                                  $scope.tx_fee + $scope.tx_amount;\n                                                                          } else {\n                                                                              AlertService.addAlert(\n                                                                                  {\n                                                                                      type: 'danger',\n                                                                                      msg: 'Sorry, an error occured! Reason: ' +\n                                                                                      success.errorDescription\n                                                                                  },\n                                                                                  alertConfig.publishExchangeOfferModalAlert\n                                                                              );\n                                                                          }\n                                                                      }, function (error) {\n                                                                          AlertService.addAlert(\n                                                                              AlertService.getNoConnectionMessage(\n                                                                                  error),\n                                                                              alertConfig.publishExchangeOfferModalAlert);\n                                                                      });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.publishExchangeOfferPromise = CommonsService.broadcastTransaction(transactionBytes)\n                                                                   .then(function (success) {\n                                                                       $scope.$emit('close-modal');\n                                                                       $rootScope.$broadcast('reload-dashboard');\n                                                                       $rootScope.$broadcast('order-placed');\n                                                                       if (!success.errorCode) {\n                                                                           AlertService.addAlert(\n                                                                               {\n                                                                                   type: 'success',\n                                                                                   msg: 'Transaction succesfull broadcasted with Id : ' +\n                                                                                   success.transaction +\n                                                                                   ''\n                                                                               });\n\n                                                                           // $state.go('client.signedin.account.pending');\n                                                                       } else {\n                                                                           AlertService.addAlert(\n                                                                               {\n                                                                                   type: 'danger',\n                                                                                   msg: 'Unable to broadcast transaction. Reason: ' +\n                                                                                   success.errorDescription\n                                                                               });\n                                                                       }\n\n                                                                   }, function (error) {\n                                                                       AlertService.addAlert(\n                                                                           AlertService.getNoConnectionMessage(error),\n                                                                           alertConfig.publishExchangeOfferModalAlert);\n                                                                   });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies').controller('CurrencyReserveClaimFormController',\n    ['$scope', 'CurrenciesService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'multiStepFormInstance', 'shareToQuantiyFilter',\n        function ($scope, CurrenciesService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, multiStepFormInstance, shareToQuantiyFilter) {\n\n\n            $scope.currencyReserveClaimForm = angular.copy(multiStepFormScope.currencyReserveClaimForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n\n                    $scope.currencyReserveClaimForm.currencyId = data.currencyId;\n                    $scope.currencyReserveClaimForm.decimals = data.decimals;\n                    $scope.currencyReserveClaimForm.ticker = data.ticker;\n\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.currencyReserveClaimForm = angular.copy($scope.currencyReserveClaimForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.currencyReserveClaim = function () {\n                var currencyReserveClaimForm = multiStepFormScope.currencyReserveClaimForm;\n                var currency = currencyReserveClaimForm.currencyId;\n                var fee = 1;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n\n                var units = parseInt(\n                    shareToQuantiyFilter(currencyReserveClaimForm.units, currencyReserveClaimForm.decimals));\n                var secret = currencyReserveClaimForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.currencyReserveClaimPromse = CurrenciesService.currencyReserveClaim(publicKey, currency, units,\n                    fee).then(function (success) {\n                    if (!success.errorCode) {\n                        var unsignedBytes = success.unsignedTransactionBytes;\n                        var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                        $scope.transactionBytes =\n                            CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                        $scope.validBytes = true;\n\n                        $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                        $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                        $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.currencyReserveClaimModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.currencyReserveClaimModalAlert);\n                });\n\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.currencyReserveClaimPromse = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.currencyReserveClaimModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies').controller('CurrencyReserveIncreaseFormController',\n    ['$scope', 'CurrenciesService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'multiStepFormInstance', 'shareToQuantiyFilter',\n        function ($scope, CurrenciesService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, multiStepFormInstance, shareToQuantiyFilter) {\n\n\n            $scope.currencyReserveIncreaseForm = angular.copy(multiStepFormScope.currencyReserveIncreaseForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n\n                    $scope.currencyReserveIncreaseForm.currencyId = data.currencyId;\n                    $scope.currencyReserveIncreaseForm.decimals = data.decimals;\n                    $scope.currencyReserveIncreaseForm.ticker = data.ticker;\n\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.currencyReserveIncreaseForm = angular.copy($scope.currencyReserveIncreaseForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.currencyReserveIncrease = function () {\n                var currencyReserveIncreaseForm = multiStepFormScope.currencyReserveIncreaseForm;\n                var currency = currencyReserveIncreaseForm.currencyId;\n                var fee = 1;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var amountPerUnit = currencyReserveIncreaseForm.amountPerUnit;\n                var secret = currencyReserveIncreaseForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.currencyReserveIncreasePromise = CurrenciesService.currencyReserveIncrease(publicKey, currency,\n                    amountPerUnit, fee).then(function (success) {\n                    if (!success.errorCode) {\n                        var unsignedBytes = success.unsignedTransactionBytes;\n                        var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                        $scope.transactionBytes =\n                            CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                        $scope.validBytes = true;\n\n                        $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                        $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                        $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.currencyReserveIncreaseModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.currencyReserveIncreaseModalAlert);\n                });\n\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.currencyReserveIncreasePromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.currencyReserveIncreaseModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies').controller('BuyCurrencyFormController',\n    ['$scope', 'CurrenciesService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'multiStepFormInstance', 'shareToQuantiyFilter', 'amountToQuantFilter',\n        function ($scope, CurrenciesService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, multiStepFormInstance, shareToQuantiyFilter, amountToQuantFilter) {\n\n\n            $scope.buyCurrencyForm = angular.copy(multiStepFormScope.buyCurrencyForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n                    $scope.buyCurrencyForm.currencyId = data.currencyId;\n                    $scope.buyCurrencyForm.decimals = data.decimals;\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.buyCurrencyForm = angular.copy($scope.buyCurrencyForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.buyCurrency = function () {\n                var data = $scope.$getActiveStep().data;\n                $scope.buyCurrencyForm = $scope.buyCurrencyForm || {};\n\n                if (data) {\n                    $scope.buyCurrencyForm.currency = data.currency;\n                    $scope.buyCurrencyForm.currencyId = data.currencyId;\n                    $scope.buyCurrencyForm.currency = data.currency;\n                    $scope.buyCurrencyForm.shares = data.shares;\n                    $scope.buyCurrencyForm.rate = data.rate;\n                    $scope.buyCurrencyForm.decimals = data.decimals;\n                    $scope.buyCurrencyForm.fee = 1;\n                }\n\n                var buyCurrencyForm = multiStepFormScope.buyCurrencyForm || $scope.buyCurrencyForm;\n                var currency = buyCurrencyForm.currencyId;\n                var fee = 1;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n\n                var units = parseInt(shareToQuantiyFilter(buyCurrencyForm.shares, buyCurrencyForm.decimals));\n                var rateTQT = parseInt(\n                    amountToQuantFilter(buyCurrencyForm.rate) / Math.pow(10, buyCurrencyForm.decimals));\n\n\n                var secret = buyCurrencyForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                $scope.buyCurrencyPromise = CurrenciesService.buyCurrency(publicKey, currency, rateTQT, units, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.buyCurrencyModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.buyCurrencyModalAlert);\n                    });\n\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.buyCurrencyPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.buyCurrencyModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies').controller('SellCurrencyFormController',\n    ['$scope', 'CurrenciesService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'multiStepFormInstance', 'shareToQuantiyFilter', 'amountToQuantFilter',\n        function ($scope, CurrenciesService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, multiStepFormInstance, shareToQuantiyFilter, amountToQuantFilter) {\n\n\n            $scope.sellCurrencyForm = angular.copy(multiStepFormScope.sellCurrencyForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n                    $scope.sellCurrencyForm.currency = data.currency;\n                    $scope.sellCurrencyForm.currencyId = data.currencyId;\n                    $scope.sellCurrencyForm.decimals = data.decimals;\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.sellCurrencyForm = angular.copy($scope.sellCurrencyForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.sellCurrency = function () {\n                var data = $scope.$getActiveStep().data;\n                $scope.sellCurrencyForm = $scope.sellCurrencyForm || {};\n\n                if (data) {\n                    $scope.sellCurrencyForm.currency = data.currency;\n                    $scope.sellCurrencyForm.currencyId = data.currencyId;\n                    $scope.sellCurrencyForm.currency = data.currency;\n                    $scope.sellCurrencyForm.shares = data.shares;\n                    $scope.sellCurrencyForm.rate = data.rate;\n                    $scope.sellCurrencyForm.decimals = data.decimals;\n                    $scope.sellCurrencyForm.fee = 1;\n                }\n                var sellCurrencyForm = $scope.sellCurrencyForm;\n                var currency = sellCurrencyForm.currencyId;\n                var fee = 1;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n\n                var units = parseInt(shareToQuantiyFilter(sellCurrencyForm.shares, sellCurrencyForm.decimals));\n                var rateTQT = parseInt(\n                    amountToQuantFilter(sellCurrencyForm.rate) / Math.pow(10, sellCurrencyForm.decimals));\n\n\n                var secret = sellCurrencyForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                $scope.sellCurrencyPromise=CurrenciesService.sellCurrency(publicKey, currency, rateTQT, units, fee).then(function (success) {\n                    if (!success.errorCode) {\n                        var unsignedBytes = success.unsignedTransactionBytes;\n                        var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                        $scope.transactionBytes =\n                            CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                        $scope.validBytes = true;\n\n                        $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                        $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                        $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.sellCurrencyModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sellCurrencyModalAlert);\n                });\n\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.sellCurrencyPromise=CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                    $scope.$emit('close-modal');\n                    $rootScope.$broadcast('reload-dashboard');\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n                        // $state.go('client.signedin.account.pending');\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sellCurrencyModalAlert);\n                });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies').controller('CurrencyTradeDeskInputController',\n    ['$scope', 'CurrenciesService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'FeeService', '$rootScope',\n        'CommonsService', 'DTOptionsBuilder', 'DTColumnBuilder', 'amountTQTFilter', 'searchTermFilter', '$compile',\n        'quantityToShareFilter', 'shareToQuantiyFilter', '$stateParams', 'timestampFilter', 'numericalStringFilter',\n        'quantToAmountFilter', 'buysellFilter', 'numberStringFilter', 'amountToDecimalFilter', '$q',\n        function ($scope, CurrenciesService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, FeeService,\n                  $rootScope, CommonsService, DTOptionsBuilder, DTColumnBuilder, amountTQTFilter, searchTermFilter,\n                  $compile, quantityToShareFilter, shareToQuantiyFilter, $stateParams, timestampFilter,\n                  numericalStringFilter, quantToAmountFilter, buysellFilter, numberStringFilter, amountToDecimalFilter,\n                  $q) {\n\n            $scope.hasBuyOffers = function () {\n                if ($scope.bidLength > 0) {\n                    return true;\n                } else {\n                    return false;\n                }\n            };\n\n            $scope.hasSellOffers = function () {\n                if ($scope.askLength > 0) {\n                    return true;\n                } else {\n                    return false;\n                }\n            };\n\n\n            $scope.getCurrency = function () {\n                var currencyId = $stateParams.currencyId;\n                $scope.currencyId = currencyId;\n                CurrenciesService.getCurrencyById(currencyId).then(function (success) {\n\n                    $scope.currencyDetails = success;\n                    $scope.decimals = success.decimals;\n\n                    var accountRs = CommonsService.getAccountDetailsFromSession('accountRs');\n\n                    CurrenciesService.getSingleAccountCurrency(accountRs, currencyId).then(function (success) {\n                        $scope.accountDetails = success;\n                        $scope.units = success.units;\n                        $scope.unconfirmedUnits = success.unconfirmedUnits;\n                    }, function (error) {\n                        console.log(error);\n                    });\n\n                }, function (error) {\n                    console.log(error);\n                });\n            };\n\n            $scope.$watchCollection('buyOrderForm', function (buyOrderForm) {\n\n                $scope.buyOrderForm.totalPrice = numericalStringFilter(\n                    parseFloat(( (buyOrderForm.quantity * buyOrderForm.price) )));\n\n                if (buyOrderForm.price && buyOrderForm.quantity && $scope.askLength) {\n                    $scope.enableBuy = true;\n                }\n            });\n\n            $scope.$watchCollection('askOrderForm', function (askOrderForm) {\n\n                $scope.askOrderForm.totalPrice = numericalStringFilter(\n                    parseFloat(( (askOrderForm.quantity * askOrderForm.price) )));\n\n                if (askOrderForm.price && askOrderForm.quantity && $scope.bidLength) {\n                    $scope.enableSell = true;\n                }\n            });\n\n            $scope.$on('buy-form', function (event, data) {\n                $scope.buyOrderForm.price = data.rateTQT * Math.pow(10, $scope.decimals) / 100000000;\n                $scope.buyOrderForm.quantity = quantityToShareFilter(data.supply, $scope.decimals);\n            });\n\n            $scope.$on('ask-form', function (event, data) {\n                $scope.askOrderForm.price = data.rateTQT * Math.pow(10, $scope.decimals) / 100000000;\n                $scope.askOrderForm.quantity = quantityToShareFilter(data.supply, $scope.decimals);\n            });\n\n\n            $scope.placeOrderClick = function (buyOrderForm, type) {\n                var templateUrl;\n                if (type === 'ask') {\n                    templateUrl = 'currencies/modals/sell-currency-form.html';\n                } else {\n                    templateUrl = 'currencies/modals/buy-currency-form.html';\n                }\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: templateUrl,\n                    size: 'lg',\n                    controller: 'CurrenciesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'currencyId': $scope.currencyId,\n                                'rate': buyOrderForm.price,\n                                'shares': buyOrderForm.quantity,\n                                'requestType': type,\n                                'decimals': $scope.decimals,\n                                'currency': $scope.currencyDetails.name\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            function rowCallback(nRow, aData, eventType) {\n                // Unbind first in order to avoid any duplicate handler (see\n                // https://github.com/l-lin/angular-datatables/issues/87)\n                $('td', nRow).unbind('click');\n                $('td', nRow).bind('click', function () {\n                    $scope.$apply(function () {\n                        $rootScope.$broadcast(eventType, aData);\n                    });\n                });\n                return nRow;\n            }\n\n            $scope.dtAskOrdersOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', false)\n                .withDataProp('offers')\n                .withOption('processing', true)\n                .withOption('ordering', false)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                        rowCallback(nRow, aData, 'buy-form');\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n\n                    var endIndex = data.start + data.length - 1;\n                    var promisesArray = [];\n                    var currencyOrdersPromise = CurrenciesService.getSellOffers(null, $scope.currencyId);\n                    var currencyDetailsPromise = CurrenciesService.getCurrencyById($scope.currencyId);\n                    promisesArray.push(currencyOrdersPromise);\n                    if (!$scope.decimals) {\n                        promisesArray.push(currencyDetailsPromise);\n                    }\n\n                    $q.all(promisesArray).then(function (response) {\n                        var offersResponse = response[0];\n                        var currencyDetailsResponse = response[1];\n                        if (currencyDetailsResponse) {\n                            $scope.decimals = currencyDetailsResponse.decimals;\n                        }\n                        $scope.askLength = offersResponse.offers.length;\n                        callback({\n                            'iTotalRecords': 100,\n                            'iTotalDisplayRecords': 100,\n                            'offers': offersResponse.offers\n                        });\n                    });\n                })\n                .withDisplayLength(5).withBootstrap();\n\n            $scope.fireFormFillEvent = function (eventName) {\n                $rootScope.$broadcast(eventName);\n            };\n\n            $scope.dtAskOrdersColumns = [\n\n                DTColumnBuilder.newColumn('rateTQT').withTitle('Price per share').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        return numericalStringFilter(Math.pow(10, $scope.decimals) * quantToAmountFilter(data));\n\n                    }),\n\n                DTColumnBuilder.newColumn('supply').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(quantityToShareFilter(data, $scope.decimals));\n                    }),\n\n                DTColumnBuilder.newColumn('rateTQT').withTitle('Sum').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var sum = ( row.rateTQT * row.supply) / 100000000;\n                        return numericalStringFilter(sum, $scope.decimals);\n\n                    }),\n\n                DTColumnBuilder.newColumn('rateTQT').withTitle('Actions').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-default btn-sm\"> <i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i> </button>';\n                    }),\n\n            ];\n\n            $scope.dtAskOrdersInstanceCallback = function (_dtInstance) {\n                $scope.dtAskOrderInstance = _dtInstance;\n            };\n\n            $scope.reloadAskOrders = function () {\n                if ($scope.dtAskOrderInstance) {\n                    $scope.dtAskOrderInstance._renderer.rerender();\n                }\n            };\n\n            $scope.dtBidOrdersOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', false)\n                .withDataProp('offers')\n                .withOption('processing', true)\n                .withOption('ordering', false)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                        rowCallback(nRow, aData, 'ask-form');\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    var promisesArray = [];\n                    var currencyOrdersPromise = CurrenciesService.getBuyOffers(null, $scope.currencyId);\n                    var currencyDetailsPromise = CurrenciesService.getCurrencyById($scope.currencyId);\n                    promisesArray.push(currencyOrdersPromise);\n                    if (!$scope.decimals) {\n                        promisesArray.push(currencyDetailsPromise);\n                    }\n\n                    $q.all(promisesArray).then(function (response) {\n                        var offersResponse = response[0];\n                        var currencyDetailsResponse = response[1];\n                        if (currencyDetailsResponse) {\n                            $scope.decimals = currencyDetailsResponse.decimals;\n                        }\n                        $scope.bidLength = offersResponse.offers.length;\n                        callback({\n                            'iTotalRecords': 100,\n                            'iTotalDisplayRecords': 100,\n                            'offers': offersResponse.offers\n                        });\n                    });\n                })\n                .withDisplayLength(5).withBootstrap();\n\n            $scope.dtBidOrdersColumns = [\n\n                DTColumnBuilder.newColumn('rateTQT').withTitle('Price per share').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(Math.pow(10, $scope.decimals) * quantToAmountFilter(data));\n                    }),\n\n                DTColumnBuilder.newColumn('supply').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(quantityToShareFilter(data, $scope.decimals));\n\n                    }),\n\n                DTColumnBuilder.newColumn('rateTQT').withTitle('Sum').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var sum = ( row.rateTQT * row.supply) / 100000000;\n                        return numericalStringFilter(sum, $scope.decimals);\n\n\n\n                    }),\n\n                DTColumnBuilder.newColumn('rateTQT').withTitle('Actions').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-default btn-sm\"> <i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i> </button>';\n                    }),\n\n            ];\n\n            $scope.dtBidOrdersInstanceCallback = function (_dtInstance) {\n                $scope.dtBidOrderInstance = _dtInstance;\n            };\n\n            $scope.reloadBidOrders = function () {\n                if ($scope.dtBidOrderInstance) {\n                    $scope.dtBidOrderInstance._renderer.rerender();\n                }\n            };\n\n\n            $scope.dtTradeOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', false)\n                .withDataProp('exchanges')\n                .withOption('paging', true)\n                .withOption('processing', false)\n                .withOption('bFilter', false).withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    CurrenciesService.getDeskExchanges($scope.currencyId, data.start, endIndex)\n                        .then(function (response) {\n                            $scope.tradeData = getTradeData(response.exchanges);\n                            $scope.labels = Array.apply(null, {length: response.exchanges.length})\n                                .map(Number.call, Number);\n                            $scope.lastTrade = response.exchanges[0];\n\n                            callback({\n                                'iTotalRecords': 1000,\n                                'iTotalDisplayRecords': 1000,\n                                'exchanges': response.exchanges\n                            });\n                        });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtTradeColumns = [\n\n                DTColumnBuilder.newColumn('transaction').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i>' + '</button>';\n                    }),\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return timestampFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('units').withTitle('Quantity').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var quantity = parseInt(data) / Math.pow(10, $scope.decimals);\n                        return quantity.toLocaleString('en-US', {minimumFractionDigits: $scope.decimals});\n                    }),\n                DTColumnBuilder.newColumn('rateTQT').withTitle('Price').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var price = parseInt(data) * Math.pow(10, $scope.decimals) / 100000000;\n                        return price.toLocaleString('en-US', {minimumFractionDigits: $scope.decimals});\n                    }),\n\n                DTColumnBuilder.newColumn('rateTQT').withTitle('Sum').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                      var quantity = parseInt(row.units) / Math.pow(10, $scope.decimals);\n                      var price = parseInt(data) * Math.pow(10, $scope.decimals) ;\n                      var sum = quantity * price / 100000000;\n                        return sum.toLocaleString('en-US', {minimumFractionDigits: $scope.decimals});\n                    }),\n\n\n                DTColumnBuilder.newColumn('buyerRS').withTitle('Buyer').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('sellerRS').withTitle('Seller').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n            ];\n\n            $scope.$on('order-placed', function () {\n                $scope.dtAskOrderInstance._renderer.rerender();\n                $scope.dtBidOrderInstance._renderer.rerender();\n            });\n\n            $scope.dtLastTradesInstanceCallback = function (_dtInstance) {\n                $scope.dtLastTradesrInstance = _dtInstance;\n            };\n\n            $scope.reloadLastTrades = function () {\n                if ($scope.dtLastTradesrInstance) {\n                    $scope.dtLastTradesrInstance._renderer.rerender();\n                }\n            };\n\n            function getTradeData(trades) {\n                var optionSize = trades.length;\n                var resultPriceArray = [];\n                var resultQuantityArray = [];\n                for (var i = 0; i < optionSize; i++) {\n                    var resultObject = {};\n                    var priceObject = {};\n                    var quantityObject = {};\n\n                    priceObject.key = optionSize - i;\n                    priceObject.value = quantToAmountFilter(shareToQuantiyFilter(trades[i].rateTQT, $scope.decimals));\n                    quantityObject.key = optionSize - i;\n                    quantityObject.value = quantityToShareFilter(trades[i].units, $scope.decimals);\n                    resultPriceArray.push(priceObject);\n                    resultQuantityArray.push(quantityObject);\n\n                }\n                return [{\n                    'key': 'Quantity',\n                    'bar': true,\n                    'values': resultQuantityArray\n                },\n                    {\n                        'key': 'Price',\n                        'values': resultPriceArray\n                    }].map(function (series) {\n                    series.values = series.values.map(function (d) {\n                        return {x: d.key, y: d.value};\n                    });\n                    return series;\n                });\n            }\n\n            $scope.chartOptions = {\n                chart: {\n                    type: 'linePlusBarChart',\n                    height: 230,\n                    margin: {\n                        top: 30,\n                        right: 75,\n                        bottom: 50,\n                        left: 75\n                    },\n                    bars: {\n                        forceY: [0]\n                    },\n                    bars2: {\n                        forceY: [0]\n                    },\n                    focusEnable: false,\n                    isArea: 'true',\n                    color: ['#bdbdbd', '#00C851'],\n                    xAxis: {\n                        axisLabel: '',\n                        showMaxMin: true,\n                        show: false,\n                        tickFormat: function (d) {\n                            return null;\n                        },\n\n                    },\n                    y1Axis: {\n\n                        axisLabelDistance: 3,\n                        tickFormat: function (d) {\n                            return d.toLocaleString('en-US', {minimumFractionDigits: 4});\n                        },\n                    },\n                    y2Axis: {\n\n                        axisLabelDistance: 3,\n                        tickFormat: function (d) {\n                            return d.toLocaleString('en-US', {minimumFractionDigits: 2});\n                        },\n                    },\n\n                }\n            };\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('currencies').controller('CancelExchangeOfferFormController',\n    ['$scope', 'CurrenciesService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'shareToQuantiyFilter', 'amountToQuantFilter',\n        function ($scope, CurrenciesService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, shareToQuantiyFilter, amountToQuantFilter) {\n\n\n            $scope.cancelExchangeOfferForm = angular.copy(multiStepFormScope.cancelExchangeOfferForm) || {};\n            $scope.cancelExchangeOfferForm.buyRate = 0.00000001;\n            $scope.cancelExchangeOfferForm.buyLimit = 1;\n            $scope.cancelExchangeOfferForm.initialBuySupply = 1;\n            $scope.cancelExchangeOfferForm.sellLimit = 1;\n            $scope.cancelExchangeOfferForm.initialSellSupply = 1;\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n                    $scope.cancelExchangeOfferForm.currencyId = data.currencyId;\n                    $scope.cancelExchangeOfferForm.typeOnly = data.typeOnly;\n                    CurrenciesService.getCurrencyById(data.currencyId).then(function (success) {\n                        $scope.cancelExchangeOfferForm.code = success.code;\n                        $scope.cancelExchangeOfferForm.name = success.name;\n                        $scope.cancelExchangeOfferForm.decimals = success.decimals;\n                    });\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.cancelExchangeOfferForm = angular.copy($scope.cancelExchangeOfferForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.getBlockChainStatus = function () {\n                CurrenciesService.getBlockChainStatus().then(function (success) {\n                    $scope.cancelExchangeOfferForm.currentHeight = success.numberOfBlocks;\n                });\n            };\n\n            $scope.cancelExchangeOffer = function () {\n\n                var cancelExchangeOfferForm = $scope.cancelExchangeOfferForm;\n                var currency = cancelExchangeOfferForm.currencyId;\n\n                var limits = {};\n\n                cancelExchangeOfferForm.sellRate = cancelExchangeOfferForm.buyRate;\n                if (cancelExchangeOfferForm.typeOnly === 'BUY') {\n                    cancelExchangeOfferForm.sellLimit = 0;\n                    cancelExchangeOfferForm.initialSellSupply = 0;\n                }\n                if (cancelExchangeOfferForm.typeOnly === 'SELL') {\n                    cancelExchangeOfferForm.buyLimit = 0;\n                    cancelExchangeOfferForm.initialBuySupply = 0;\n                }\n\n                limits.buyRate = 1;\n                limits.sellRate = 1;\n\n                limits.totalBuy = parseFloat(\n                    cancelExchangeOfferForm.buyLimit * Math.pow(10, cancelExchangeOfferForm.decimals));\n                limits.totalSell = parseFloat(\n                    cancelExchangeOfferForm.sellLimit * Math.pow(10, cancelExchangeOfferForm.decimals));\n\n                var supply = {};\n\n                supply.initialBuy = parseFloat(\n                    cancelExchangeOfferForm.initialBuySupply * Math.pow(10, cancelExchangeOfferForm.decimals));\n                supply.initialSell = parseFloat(\n                    cancelExchangeOfferForm.initialSellSupply * Math.pow(10, cancelExchangeOfferForm.decimals));\n\n                var fee = 1;\n\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = cancelExchangeOfferForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.cancelExchangeOfferPromise = CurrenciesService.getBlockChainStatus().then(function (success) {\n                    var expirationHeight = success.numberOfBlocks + 2;\n                    $scope.cancelExchangeOfferPromise = CurrenciesService.publishExchangeOffer(publicKey, currency,\n                        limits, supply, expirationHeight, fee)\n                        .then(function (success) {\n                            if (!success.errorCode) {\n\n                                var unsignedBytes = success.unsignedTransactionBytes;\n                                var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                                $scope.transactionBytes =\n                                    CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                                $scope.broadcastTransaction($scope.transactionBytes);\n                                $scope.validBytes = true;\n\n                                $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                                $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                                $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n                            } else {\n                                AlertService.addAlert(\n                                    {\n                                        type: 'danger',\n                                        msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                    }, alertConfig.publishExchangeOfferModalAlert\n                                );\n                            }\n                        }, function (error) {\n                            AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                alertConfig.publishExchangeOfferModalAlert);\n                        });\n                });\n\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.cancelExchangeOfferPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        $rootScope.$broadcast('order-placed');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.publishExchangeOfferModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\n\nangular.module('account',\n    ['baseClient', 'crypto', 'login', 'node', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node', 'clientAlert',\n        'datatables.scroller', 'ja.qr', 'options','assets','currencies']);\n\nangular.module('account').constant('accountConfig', {\n    'accountEndPoint': 'api'\n});\n\nangular.module('account')\n    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n\n        $stateProvider.state('client.signedin.account', {\n            url: '^/accounts',\n            templateUrl: './account/views/main.html',\n            abstract: true\n        }).state('client.signedin.account.details', {\n            url: '^/accounts/details',\n            templateUrl: './account/views/details.html',\n            controller: 'AccountMainCtrl'\n        }).state('client.signedin.account.transactions', {\n            url: '^/accounts/transactions',\n            templateUrl: './account/views/transactions.html',\n            controller: 'AccountTransactionsCtrl'\n        }).state('client.signedin.account.pending', {\n            url: '^/accounts/pending',\n            templateUrl: './account/views/unconfirmed.html',\n            controller: 'AccountUnconfirmedTransactionsCtrl'\n        }).state('client.signedin.account.lessors', {\n            url: '^/accounts/lessors',\n            templateUrl: './account/views/lessors.html',\n            controller: 'AccountLessorCtrl'\n        }).state('client.signedin.account.control', {\n            url: '^/accounts/control',\n            templateUrl: './account/views/control.html',\n            controller: 'ControlMainCtrl'\n        }).state('client.signedin.account.properties', {\n            url: '^/accounts/properties',\n            templateUrl: './account/views/properties.html',\n            controller: 'AccountPropertiesCtrl'\n        }).state('client.signedin.account.ledger', {\n            url: '^/accounts/ledger',\n            templateUrl: './account/views/ledgerentries.html',\n            controller: 'AccountLedgerCtrl'\n        }).state('client.signedin.account.funding', {\n            url: '^/accounts/funding',\n            templateUrl: './account/views/funding.html',\n            controller: 'FundingMonitorCtrl'            \n        });\n\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('account').service('AccountService',\n    ['nodeConfig', 'SessionStorageService', 'NodeService', 'baseConfig', 'accountConfig', 'Restangular', 'loginConfig',\n        'CryptoService', 'TransactionService', '$rootScope', 'OptionsService', 'CommonsService',\n        function (nodeConfig, SessionStorageService, NodeService, baseConfig, accountConfig, Restangular, loginConfig,\n                  CryptoService, TransactionService, $rootScope, OptionsService, CommonsService) {\n\n            this.getAccountTransaction = function (account, firstIndex, lastIndex, type, subtype) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getBlockchainTransactions',\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'type': type,\n                    'subtype': subtype,\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customGET('', params);\n            };\n\n            this.getAccountUnconfirmedTransactions = function (account) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getUnconfirmedTransactions',\n                    'account': account\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customGET('', params);\n\n            };\n\n            this.getAccountDetails = function (accountRS) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAccount',\n                    'includeAssets': 'true', 'includeCurrencies': 'true', 'includeEffectiveBalance': 'true',\n                    'includeLessors': 'true',\n                    'account': accountRS\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customGET('', params);\n            };\n\n            this.getAccountLessors = function (accountRS) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAccount',\n                    'includeLessors': 'true',\n                    'includeCurrentHeight': 'true',\n                    'includeEffectiveBalance': 'true',\n                    'account': accountRS\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customGET('', params);\n            };\n\n            this.getAccountDetailsFromSession = function (keyName) {\n                var accountDetails = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_DETAILS_KEY);\n                if (keyName) {\n                    return accountDetails[keyName];\n                }\n                return accountDetails;\n            };\n\n            this.createPhasedTransaction = function (params) {\n                return TransactionService.createTransaction(params);\n            };\n\n            this.createTransaction =\n                function (senderPublicKey, recipientRS, amount, fee, data, nonce, recipientPublicKey) {\n\n                    var params = {\n                        'requestType': 'sendToken',\n                        'recipient': recipientRS,\n                        'amountTQT': parseInt(amount),\n                        'publicKey': senderPublicKey,\n                        'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                        'deadline': OptionsService.getOption('DEADLINE'),\n                        'broadcast': 'false',\n                        'messageToEncryptIsText': 'true',\n                        'compressMessageToEncrypt': 'true',\n                        'encryptedMessageData': data,\n                        'encryptedMessageNonce': nonce,\n                        'encryptedMessageIsPrunable': 'false',\n                        'recipientPublicKey': recipientPublicKey\n                    };\n\n                    return TransactionService.createTransaction(params);\n                };\n\n            this.broadcastTransaction = function (transactionBytes) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'broadcastTransaction',\n                    'transactionBytes': transactionBytes\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customPOST('', '', params, '');\n            };\n\n            this.setAccountInfo = function (publicKey, name, description, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'setAccountInfo',\n                    'publicKey': publicKey,\n                    'name': name,\n                    'description': description,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.searchAccounts = function (query) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'searchAccounts',\n                    'query': query\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customGET('', params);\n            };\n\n            this.setBalanceLeasing =\n                function (senderPublicKey, recipientRS, period, fee, data, nonce, recipientPublicKey) {\n                    Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                        OptionsService.getOption('RANDOMIZE_NODES')));\n                    var params = {\n                        'requestType': 'leaseBalance',\n                        'recipient': recipientRS,\n                        'period': parseInt(period),\n                        'publicKey': senderPublicKey,\n                        'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                        'deadline': OptionsService.getOption('DEADLINE'),\n                        'broadcast': 'false',\n                        'messageToEncryptIsText': 'true',\n                        'compressMessageToEncrypt': 'true',\n                        'encryptedMessageData': data,\n                        'encryptedMessageNonce': nonce,\n                        'encryptedMessageIsPrunable': 'false',\n                        'recipientPublicKey': recipientPublicKey\n                    };\n\n                    return TransactionService.createTransaction(params);\n\n                };\n\n            this.blockGeneration = function (mode, secret, node) {\n\n                if (node !== 'LOCAL_HOST') {\n                    Restangular.setBaseUrl(\n                        NodeService.getNodeUrl(\n                            OptionsService.getOption('CONNECTION_MODE'),\n                            OptionsService.getOption('RANDOMIZE_NODES')\n                        )\n                    );\n                } else {\n                    Restangular.setBaseUrl(\n                        NodeService.getLocalNodeUrl()\n                    );\n                }\n\n                var command = 'getForging';\n                switch (mode) {\n                    case 0:\n                        command = 'getForging';\n                        break;\n                    case 1:\n                        command = 'startForging';\n                        break;\n                    case 2:\n                        command = 'stopForging';\n                        break;\n                }\n\n                var params = {\n                    'requestType': command,\n                    'secretPhrase': secret\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customPOST('', '', params, '');\n            };\n\n            this.searchAlias = function (query) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAliasesLike',\n                    'aliasPrefix': query,\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customGET('', params);\n            };\n\n            this.getVoterPhasedTransactions = function (account, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getVoterPhasedTransactions',\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customGET('', params);\n            };\n\n            this.approveTransactions = function (accountPublicKey, transactionFullHash, fee, revealedSecret) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'approveTransaction',\n                    'transactionFullHash': transactionFullHash,\n                    'revealedSecret': revealedSecret,\n                    'revealedSecretIsText': true,\n                    'publicKey': accountPublicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false'\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customPOST('', '', params, '');\n            };\n\n            this.getPhasingOnlyControl = function (account) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getPhasingOnlyControl',\n                    'account': account,\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customGET('', params);\n            };\n\n            this.setAccountControl = function (publicKey, quorum, accounts, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'setPhasingOnlyControl',\n                    'controlQuorum': quorum,\n                    'controlWhitelisted': accounts,\n                    'publicKey': publicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                    'controlVotingModel': '0'\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customPOST('', '', params, '');\n            };\n\n            this.removeAccountControl = function (publicKey, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'setPhasingOnlyControl',\n                    'publicKey': publicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                    'controlVotingModel': '-1'\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.setPhasingOnlyControl = function (json) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'setPhasingOnlyControl',\n                    'controlVotingModel': json.controlVotingModel,\n                    'controlQuorum': json.controlQuorum,\n                    'controlMinBalance': json.controlMinBalance,\n                    'controlMinBalanceModel': json.controlMinBalanceModel,\n                    'controlHolding': json.controlHolding,\n                    'controlWhitelisted': json.account,\n                    'controlMaxFees': json.controlMaxFees,\n                    'controlMinDuration': json.controlMinDuration,\n                    'controlMaxDuration': json.controlMaxDuration,\n                    'publicKey': json.publicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customPOST('', '', params, '');\n            };\n\n            this.getAccountProperties = function (recipient, setter, property, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAccountProperties',\n                    'recipient': recipient,\n                    'setter': setter,\n                    'property': property,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customGET('', params);\n            };\n\n            this.setAccountProperty = function (recipient, property, value, senderPublicKey, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'setAccountProperty',\n                    'publicKey': senderPublicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                    'recipient': recipient,\n                    'property': property,\n                    'value': value\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customPOST('', '', params, '');\n            };\n\n            this.deleteAccountProperty = function (recipient, property, setter, senderPublicKey, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'deleteAccountProperty',\n                    'publicKey': senderPublicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                    'property': property,\n                    'recipient': recipient,\n                    'setter': setter\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customPOST('', '', params, '');\n            };\n\n            this.getAccountLedger = function (account, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAccountLedger',\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customGET('', params);\n            };\n\n            this.startFundingMonitor =\n                function (property, amount, threshold, interval, holding, holdingType, secretPhrase, adminPassword) {\n                    Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                        OptionsService.getOption('RANDOMIZE_NODES')));\n                    var params = {\n                        'requestType': 'startFundingMonitor',\n                        'property': property,\n                        'amount': amount,\n                        'threshold': threshold,\n                        'interval': interval,\n                        'holding': holding,\n                        'holdingType': holdingType,\n                        'secretPhrase': secretPhrase,\n                        'adminPassword': adminPassword\n                    };\n                    return Restangular.all(accountConfig.accountEndPoint).customPOST('', '', params, '');\n                };\n\n            this.stopFundingMonitor =\n                function (property, holding, holdingType, account, secretPhrase, adminPassword) {\n                    Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                        OptionsService.getOption('RANDOMIZE_NODES')));\n                    var params = {\n                        'requestType': 'stopFundingMonitor',\n                        'property': property,\n                        'holding': holding,\n                        'holdingType': holdingType,\n                        'secretPhrase': secretPhrase,\n                        'account': account,\n                        'adminPassword': adminPassword\n                    };\n                    return Restangular.all(accountConfig.accountEndPoint).customPOST('', '', params, '');\n                };\n\n            this.getActivationHeights = function (names) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getActivationHeights',\n                    'name': CommonsService.convertToArray(names),\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customGET('', params);\n            };\n\n            this.getFundingMonitors = function (property, holding, holdingType, account, secretPhrase, adminPassword) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getFundingMonitor',\n                    'property': property,\n                    'holding': holding,\n                    'holdingType': holdingType,\n                    'secretPhrase': secretPhrase,\n                    'adminPassword': adminPassword,\n                    'includeMonitoredAccounts': true\n                };\n                return Restangular.all(accountConfig.accountEndPoint).customGET('', params);\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('account').service('FaucetService',\n    ['nodeConfig', 'SessionStorageService', 'NodeService', 'baseConfig', 'accountConfig', 'Restangular', 'loginConfig',\n        'CryptoService', 'TransactionService', '$rootScope', 'OptionsService',\n        function (nodeConfig, SessionStorageService, NodeService, baseConfig, accountConfig, Restangular, loginConfig,\n                  CryptoService, TransactionService, $rootScope, OptionsService) {\n\n            var FAUCET_URL = 'http://185.103.75.217:8890/api/v1';\n\n            this.welcomeFaucetCall = function (email, publicKey, accountRs, ip) {\n                Restangular.setBaseUrl(FAUCET_URL);\n                ip = ip || '127.0.0.5';\n                var params = {\n                    'ip': ip,\n                    'email': email,\n                    'publickey': publicKey,\n                    'account': accountRs,\n                };\n                return Restangular.all('faucet').customPOST(params, '', '');\n            };\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('account').controller('AccountMainCtrl',\n    ['$scope', '$uibModal', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', 'timestampFilter', 'amountTQTFilter', '$compile', 'controlConfig',\n        'CommonsService', 'quantToAmountFilter', 'quantityToShareFilter', 'numericalStringFilter', 'AssetsService',\n        'CurrenciesService', '$timeout', 'numberStringFilter', 'PeerService', 'EscrowService', 'AlertService',\n        'alertConfig', 'SubscriptionService', '$state',\n        function ($scope, $uibModal, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, timestampFilter, amountTQTFilter, $compile, controlConfig,\n                  CommonsService, quantToAmountFilter, quantityToShareFilter, numericalStringFilter, AssetsService,\n                  CurrenciesService, $timeout, numberStringFilter, PeerService, EscrowService, AlertService,\n                  alertConfig, SubscriptionService, $state) {\n\n\n            $scope.openSendTokenModal = function (recipient) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/send-token-form.html',\n                    size: 'lg',\n                    controller: 'StepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                recipient: recipient,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openSearchAccountModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/search-account-form.html',\n                    size: 'lg',\n                    controller: 'StepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openSetAccountModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/set-account-form.html',\n                    controller: 'StepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openTransactionTypeModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/transaction-types.html',\n                    size: 'lg',\n                    controller: 'AccountMainCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openBalanceLeasingModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/balance-leasing-form.html',\n                    size: 'lg',\n                    controller: 'BalanceLeasingCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openBlockGenerationModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/block-generation.html',\n                    size: 'lg',\n                    controller: 'BlockGenerationCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openStartFundingMonitorModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/start-funding-monitor.html',\n                    size: 'lg',\n                    controller: 'StartFundingMonitorCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openWelcomeFaucetModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/welcome-faucet-form.html',\n                    size: 'lg',\n                    controller: 'StepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openSetAccountPropertyModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/properties-form.html',\n                    size: 'lg',\n                    controller: 'StepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openDeleteAccountPropertyModal = function (account, property, mode) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/properties-delete-form.html',\n                    size: 'lg',\n                    controller: 'StepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                account: account,\n                                property: property,\n                                mode: mode\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.getAccountFromSession = function () {\n                $scope.accountDetails = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_DETAILS_KEY);\n                $scope.privateKey = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                $scope.activePeer = NodeService.getNode(false);\n                $scope.localPeer = SessionStorageService.getFromSession(nodeConfig.SESSION_LOCAL_NODE);\n            };\n\n            $scope.stopFundingMonitor = function (property, secretPhrase, holdingType, holding ) {\n\n              if (parseInt(holdingType)===0) {\n\n                AccountService.stopFundingMonitor(property, undefined, undefined, undefined,\n                    secretPhrase, undefined).then(function (success) {\n\n                    if (parseInt(success.stopped) === 1) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Funding monitor for property: ' + property + ' successfull stopped.'\n                            }, alertConfig.stopFundingMonitorAlert);\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to stop funding monitor. Reason: ' + ' Wrong secret or property'\n                            }, alertConfig.stopFundingMonitorAlert);\n                    }\n                });\n\n              } else {\n\n                AccountService.stopFundingMonitor(property, undefined, undefined, undefined,\n                    holding, holdingType, secretPhrase, undefined).then(function (success) {\n\n                    if (parseInt(success.stopped) === 1) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Funding monitor for property: ' + property + ' successfull stopped.'\n                            }, alertConfig.stopFundingMonitorAlert);\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to stop funding monitor. Reason: ' + ' Wrong secret or property'\n                            }, alertConfig.stopFundingMonitorAlert);\n                    }\n                });\n              }\n\n            };\n\n            $scope.getAccountDetails = function () {\n\n                $scope.getAssetsXmcValue();\n                $scope.getCurrenciesXmcValue();\n\n                var accountRS = AccountService.getAccountDetailsFromSession('accountRs');\n                AccountService.getAccountDetails(accountRS).then(function (success) {\n\n                    // Account is unknown\n                    if (success.errorCode === 5) {\n                        success.publicKey = AccountService.getAccountDetailsFromSession('publicKey');\n\n                        if (!success.balanceTQT) {\n                            success.balanceTQT = 0;\n                        }\n                        if (!success.unconfirmedBalanceTQT) {\n                            success.unconfirmedBalanceTQT = 0;\n                        }\n                        if (!success.forgedBalanceTQT) {\n                            success.forgedBalanceTQT = 0;\n                        }\n                        if (!success.effectiveBalance) {\n                            success.effectiveBalance = 0;\n                        }\n\n                        // show welcome and faucet modal only if unknown and balance 0\n\n                        if (success.balanceTQT === 0) {\n\n                            $scope.publicKey = success.publicKey;\n                            $scope.accountRs = accountRS;\n                            // $scope.openWelcomeFaucetModal();\n                        }\n\n                    }\n\n                    $scope.multisig =\n                        ' <span class=\"label label-success label-md\" style=\"margin-top:-3px;\"> STANDARD </span> ';\n\n                    AccountService.getPhasingOnlyControl(accountRS).then(function (success) {\n                        if (success.account) {\n                            $scope.multisig =\n                                ' <span class=\"label label-danger label-md\" style=\"margin-top:-3px;\"> CONTROLLED </span> ';\n\n                            $scope.controlDetected = true;\n                            $scope.multisigModel = JSON.stringify(success);\n                            $scope.controlVotingModel = success.votingModel;\n                            $scope.controlQuorum = success.quorum;\n                            $scope.accountRS = success.accountRS;\n                            $scope.maxFees = success.maxFees;\n                            $scope.minBalance = success.minBalance;\n                            $scope.WhitelistAccountRS = success.whitelist.length;\n\n                            $scope.whitelistedRS = '';\n                            for (var i = 0; i < $scope.WhitelistAccountRS; i++) {\n\n                                $scope.whitelistedRS =  $scope.whitelistedRS + '<br/>' + success.whitelist[i].whitelistedRS;\n                            }\n\n                            SessionStorageService.saveToSession(controlConfig.SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY,\n                                true);\n                            SessionStorageService.saveToSession(controlConfig.SESSION_ACCOUNT_CONTROL_JSONCONTROL_KEY,\n                                success);\n\n                        } else {\n\n                            SessionStorageService.saveToSession(controlConfig.SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY,\n                                false);\n                            SessionStorageService.saveToSession(controlConfig.SESSION_ACCOUNT_CONTROL_JSONCONTROL_KEY,\n                                '');\n\n                        }\n                    }, function (error) {\n\n\n                    });\n\n                    $scope.leasesDetected = false;\n\n                    if (success.currentLesseeRS) {\n                        $scope.leasesDetected = true;\n                    }\n\n                    $scope.account = success;\n\n                }, function (error) {\n\n                });\n            };\n\n            $scope.labels = ['Assets', 'Currencies', 'Account'];\n\n            $scope.getChart = function () {\n                $timeout(function () {\n                    $scope.holdingData =\n                        [$scope.accountAssetXmcValue, $scope.accountCurrencyXmcValue,\n                            quantToAmountFilter($scope.account ? $scope.account.balanceTQT : 0)];\n                    var graphData = [];\n                    var sum = 0;\n                    for (var i = 0; i < $scope.labels.length; i++) {\n                        var currentData = {};\n                        currentData.key = $scope.labels[i];\n                        currentData.value = $scope.holdingData[i];\n                        sum = sum + currentData.value;\n                        graphData.push(currentData);\n                    }\n\n                    $scope.accountHoldingData = graphData;\n                    $scope.total = sum;\n\n                }, 2000);\n            };\n\n            $scope.chartOptions =\n                {\n                    'chart': {\n                        'type': 'pieChart',\n                        'responsive': true,\n                        'height': 225,\n                        'width': 175,\n\n\n                        'showLegend': true,\n                        'noData': 'Holding data not avilable',\n\n                        x: function (d) {\n                            return d.key;\n                        },\n                        y: function (d) {\n                            return d.value;\n                        },\n                        tooltip: {\n                            valueFormatter: function (d) {\n                                return numberStringFilter((d * 100 / $scope.total)) + ' %';\n                            }\n                        }\n\n                    }\n                };\n\n            $scope.getAssetsXmcValue = function () {\n                var accountRs = CommonsService.getAccountDetailsFromSession('accountRs');\n                AssetsService.getAccountAssets(accountRs).then(function (success) {\n\n                    var assets = success.accountAssets;\n                    var assetsInfos = {};\n                    var assetsIds = [];\n                    for (var i = 0; i < assets.length; i++) {\n                        var assetId = assets[i].asset;\n                        assetsInfos[assetId] = assets[i];\n                        assetsIds.push(assetId);\n                    }\n                    AssetsService.getMultipleAssetLastTrades(assetsIds).then(function (success) {\n                        var sum = 0;\n                        var trades = success.trades || [];\n                        for (var i = 0; i < trades.length; i++) {\n                            var trade = trades[i];\n                            var currentAsset = assetsInfos[trade.asset];\n                            var price = trade.priceTQT;\n                            var units = currentAsset.quantityQNT;\n\n                            var amount = ( price * units ) / 100000000;\n\n                            sum = sum + amount;\n\n                        }\n                        $scope.accountAssetXmcValue = sum;\n                    }, function (error) {\n\n                    });\n                }, function (error) {\n\n                });\n            };\n\n            $scope.getCurrenciesXmcValue = function () {\n                var accountRs = CommonsService.getAccountDetailsFromSession('accountRs');\n                CurrenciesService.getAccountCurrencies(accountRs).then(function (success) {\n\n                    var currencies = success.accountCurrencies;\n                    var currenciesInfos = {};\n                    var currencyIds = [];\n                    for (var i = 0; i < currencies.length; i++) {\n                        var currencyId = currencies[i].currency;\n                        currenciesInfos[currencyId] = currencies[i];\n                        currencyIds.push(currencyId);\n                    }\n\n                    CurrenciesService.getMultipleCurrenctLastExchanges(currencyIds).then(function (success) {\n\n                        var sum = 0;\n                        var currencies = success.exchanges || [];\n                        for (var i = 0; i < currencies.length; i++) {\n                            var exchange = currencies[i];\n                            var currentCurrency = currenciesInfos[exchange.currency];\n                            var price = quantToAmountFilter(exchange.rateTQT);\n                            var units = currentCurrency.units;\n                            sum = sum + (units * price );\n                        }\n                        $scope.accountCurrencyXmcValue = sum;\n                    }, function (error) {\n\n                    });\n                }, function (error) {\n\n                });\n            };\n\n            $scope.approvals = 0;\n            $scope.escrows = 0;\n            $scope.subscriptions = 0;\n\n            $scope.getBadges = function () {\n\n                var accountRs = CommonsService.getAccountDetailsFromSession('accountRs');\n                AccountService.getVoterPhasedTransactions(accountRs).then(function (success) {\n                    var approvals = success.transactions;\n                    $scope.approvals = approvals ? approvals.length : 0;\n                }, function (error) {\n                    $scope.approvals = 0;\n                });\n\n                EscrowService.getAccountEscrowTransactions(accountRs).then(function (success) {\n                    var escrows = success.escrows;\n                    $scope.escrows = escrows ? escrows.length : 0;\n                }, function (error) {\n                    $scope.escrows = 0;\n                });\n\n                SubscriptionService.getAccountSubscriptions(accountRs).then(function (success) {\n                    var subscriptions = success.subscriptions;\n                    $scope.subscriptions = subscriptions ? subscriptions.length : 0;\n                }, function (error) {\n                    $scope.subscriptions = 0;\n                });\n\n\n            };\n\n        }]);\n\n\nangular.module('account').controller('AccountUnconfirmedTransactionsCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', 'timestampFilter', 'amountTQTFilter', '$compile',\n        'transactionConfFilter', 'transactionTypeFilter', 'searchTermFilter', 'baseConfig',\n        'transactionIconSubTypeFilter', 'CommonsService',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, timestampFilter, amountTQTFilter, $compile,\n                  transactionConfFilter, transactionTypeFilter, searchTermFilter, baseConfig,\n                  transactionIconSubTypeFilter, CommonsService) {\n\n            $scope.dtUnconfirmedOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                                                          .withDOM('frtip')\n                                                          .withOption('serverSide', false)\n                                                          .withDataProp('unconfirmedTransactions')\n                                                          .withOption('processing', true)\n                                                          .withOption('info', false)\n                                                          .withOption('paging', true)\n                                                          .withOption('ordering', false)\n                                                          .withOption('bFilter', false)\n                                                          .withOption('fnRowCallback',\n                                                              function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                                                                  $compile(nRow)($scope);\n                                                              })\n                                                          .withOption('ajax', function (data, callback, settings) {\n                                                              var account = AccountService.getAccountDetailsFromSession(\n                                                                  'accountId');\n                                                              AccountService.getAccountUnconfirmedTransactions(account)\n                                                                            .then(function (response) {\n                                                                                response.unconfirmedTransactions =\n                                                                                    CommonsService.sanitizeJson(\n                                                                                        response.unconfirmedTransactions);\n                                                                                callback({\n                                                                                    'iTotalRecords': response.unconfirmedTransactions.length,\n                                                                                    'iTotalDisplayRecords': response.unconfirmedTransactions.length,\n                                                                                    'unconfirmedTransactions': response.unconfirmedTransactions\n                                                                                });\n                                                                            });\n                                                          })\n                                                          .withDisplayLength(10).withBootstrap();\n\n            $scope.dtUnconfirmedColumns = [\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                       return timestampFilter(data);\n                                   }\n                               ),\n\n                DTColumnBuilder.newColumn('type').withTitle('Type').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return transactionIconSubTypeFilter(data, row.subtype);\n                               }),\n\n                DTColumnBuilder.newColumn('senderRS').withTitle('Sender').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return searchTermFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return ( data || '');\n                               }),\n\n                DTColumnBuilder.newColumn('feeTQT').withTitle('Fee').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return amountTQTFilter(data);\n                               }),\n                DTColumnBuilder.newColumn('amountTQT').withTitle('Amount').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return amountTQTFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('transaction').withTitle('Details').notSortable()\n\n                               .renderWith(function (data, type, row, meta) {\n                                   return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                                       ' ' +\n                                       'ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                                       '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' +\n                                       '</button>';\n                               })\n\n            ];\n\n            $scope.reloadUnconfirmedTransactions = function () {\n                if ($scope.dtInstanceUnconfirmedTransactions) {\n                    $scope.dtInstanceUnconfirmedTransactions._renderer.rerender();\n                }\n            };\n\n            $scope.dtInstanceUnconfirmedTransactionsCallback = function (_dtInstance) {\n                $scope.dtInstanceUnconfirmedTransactions = _dtInstance;\n            };\n\n        }]);\n\nangular.module('account').controller('AccountTransactionsCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', 'timestampFilter', 'amountTQTFilter', '$compile',\n        'transactionIconSubTypeFilter',\n        'transactionConfFilter', 'transactionTypeFilter', 'searchTermFilter', 'baseConfig', 'isEnabledFilter',\n        'isMessageFilter', 'hasMessageFilter', 'txDirectionFilter', '$sanitize', 'CommonsService',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, timestampFilter, amountTQTFilter, $compile,\n                  transactionIconSubTypeFilter,\n                  transactionConfFilter, transactionTypeFilter, searchTermFilter, baseConfig, isEnabledFilter,\n                  isMessageFilter, hasMessageFilter, txDirectionFilter, $sanitize, CommonsService) {\n\n\n            $scope.filter_type = '';\n            $scope.filter_subtype = '';\n            $scope.filter_phasedOnly = '';\n            $scope.filter_nonPhasedOnly = '';\n            $scope.filter_withMessage = false;\n            $scope.filter_includePhasingResult = false;\n            $scope.filter_numberOfConfirmations = '';\n\n            $scope.includeFinished = true;\n\n            $scope.filterAsset = function () {\n\n                $scope.filter_type = 2;\n                $scope.filter_subtype = '';\n                $scope.filter_phasedOnly = '';\n                $scope.filter_nonPhasedOnly = '';\n                $scope.filter_withMessage = false;\n                $scope.filter_includePhasingResult = false;\n                $scope.filter_numberOfConfirmations = '';\n\n                $scope.reloadTransactions();\n            };\n\n            $scope.filterPayment = function () {\n\n                $scope.filter_type = 0;\n                $scope.filter_subtype = '';\n                $scope.filter_phasedOnly = '';\n                $scope.filter_nonPhasedOnly = '';\n                $scope.filter_withMessage = false;\n                $scope.filter_includePhasingResult = false;\n                $scope.filter_numberOfConfirmations = '';\n\n                $scope.reloadTransactions();\n            };\n\n            $scope.filterCurrency = function () {\n\n                $scope.filter_type = 5;\n                $scope.filter_subtype = '';\n                $scope.filter_phasedOnly = '';\n                $scope.filter_nonPhasedOnly = '';\n                $scope.filter_withMessage = false;\n                $scope.filter_includePhasingResult = false;\n                $scope.filter_numberOfConfirmations = '';\n\n                $scope.reloadTransactions();\n            };\n\n            $scope.filterNone = function () {\n\n                $scope.filter_type = '';\n                $scope.filter_subtype = '';\n                $scope.filter_phasedOnly = '';\n                $scope.filter_nonPhasedOnly = '';\n                $scope.filter_withMessage = false;\n                $scope.filter_includePhasingResult = false;\n                $scope.filter_numberOfConfirmations = '';\n\n                $scope.reloadTransactions();\n            };\n\n            $scope.filterAccount = function () {\n\n                $scope.filter_type = 4;\n                $scope.filter_subtype = '';\n                $scope.filter_phasedOnly = '';\n                $scope.filter_nonPhasedOnly = '';\n                $scope.filter_withMessage = false;\n                $scope.filter_includePhasingResult = false;\n                $scope.filter_numberOfConfirmations = '';\n\n                $scope.reloadTransactions();\n            };\n\n            $scope.filterMessages = function () {\n\n                $scope.filter_type = 1;\n                $scope.filter_subtype = 0;\n                $scope.filter_phasedOnly = '';\n                $scope.filter_nonPhasedOnly = '';\n                $scope.filter_withMessage = false;\n                $scope.filter_includePhasingResult = false;\n                $scope.filter_numberOfConfirmations = '';\n\n                $scope.reloadTransactions();\n            };\n\n            $scope.filterAlias = function () {\n\n                $scope.filter_type = 1;\n                $scope.filter_subtype = 1;\n                $scope.filter_phasedOnly = '';\n                $scope.filter_nonPhasedOnly = '';\n                $scope.filter_withMessage = false;\n                $scope.filter_includePhasingResult = false;\n                $scope.filter_numberOfConfirmations = '';\n\n                $scope.reloadTransactions();\n            };\n\n            $scope.filterShuffles = function () {\n\n                $scope.filter_type = 7;\n                $scope.filter_subtype = 0;\n                $scope.filter_phasedOnly = '';\n                $scope.filter_nonPhasedOnly = '';\n                $scope.filter_withMessage = false;\n                $scope.filter_includePhasingResult = false;\n                $scope.filter_numberOfConfirmations = '';\n\n                $scope.reloadTransactions();\n            };\n\n            $scope.filterEscrow = function () {\n\n                $scope.filter_type = 21;\n                $scope.filter_subtype = 0;\n                $scope.filter_phasedOnly = '';\n                $scope.filter_nonPhasedOnly = '';\n                $scope.filter_withMessage = false;\n                $scope.filter_includePhasingResult = false;\n                $scope.filter_numberOfConfirmations = '';\n\n                $scope.reloadTransactions();\n            };\n\n            $scope.filterSubscription = function () {\n\n                $scope.filter_type = 21;\n                $scope.filter_subtype = 3;\n                $scope.filter_phasedOnly = '';\n                $scope.filter_nonPhasedOnly = '';\n                $scope.filter_withMessage = false;\n                $scope.filter_includePhasingResult = false;\n                $scope.filter_numberOfConfirmations = '';\n\n                $scope.reloadTransactions();\n            };\n\n            $scope.filterAT = function () {\n\n                $scope.filter_type = 22;\n                $scope.filter_subtype = 0;\n                $scope.filter_phasedOnly = '';\n                $scope.filter_nonPhasedOnly = '';\n                $scope.filter_withMessage = false;\n                $scope.filter_includePhasingResult = false;\n                $scope.filter_numberOfConfirmations = '';\n\n                $scope.reloadTransactions();\n            };\n\n            $scope.filterVoting = function () {\n\n                $scope.filter_type = 1;\n                $scope.filter_subtype = 3;\n                $scope.filter_phasedOnly = '';\n                $scope.filter_nonPhasedOnly = '';\n                $scope.filter_withMessage = false;\n                $scope.filter_includePhasingResult = false;\n                $scope.filter_numberOfConfirmations = '';\n\n                $scope.reloadTransactions();\n            };\n\n            $scope.filterMultiSig = function () {\n\n                $scope.filter_type = 1;\n                $scope.filter_subtype = 9;\n                $scope.filter_phasedOnly = '';\n                $scope.filter_nonPhasedOnly = '';\n                $scope.filter_withMessage = false;\n                $scope.filter_includePhasingResult = false;\n                $scope.filter_numberOfConfirmations = '';\n\n                $scope.reloadTransactions();\n            };\n\n            $scope.dtOptionsTransactions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                                                           .withDOM('frtip')\n                                                           .withOption('serverSide', true)\n                                                           .withDataProp('data')\n                                                           .withOption('responsive', true)\n                                                           .withOption('processing', true)\n                                                           .withOption('paging', true)\n                                                           .withOption('ordering', false)\n                                                           .withOption('info', false)\n                                                           .withOption('bFilter', false)\n                                                           .withOption('fnRowCallback',\n                                                               function (nRow, aData, iDisplayIndex,\n                                                                         iDisplayIndexFull) {\n                                                                   $compile(nRow)($scope);\n                                                               })\n                                                           .withOption('ajax', function (data, callback, settings) {\n                                                               var endIndex = data.start + data.length - 1;\n                                                               var accountId = AccountService.getAccountDetailsFromSession(\n                                                                   'accountId');\n                                                               AccountService.getAccountTransaction(\n                                                                   accountId,\n                                                                   data.start,\n                                                                   endIndex,\n                                                                   $scope.filter_type,\n                                                                   $scope.filter_subtype\n                                                               )\n                                                                             .then(function (response) {\n                                                                                 response.transactions =\n                                                                                     CommonsService.sanitizeJson(\n                                                                                         response.transactions);\n\n                                                                                 callback({\n                                                                                     'iTotalRecords': 1000,\n                                                                                     'iTotalDisplayRecords': 1000,\n                                                                                     'data': response.transactions\n                                                                                 });\n                                                                             });\n                                                           })\n                                                           .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumnsTransactions = [\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                       return timestampFilter(data);\n                                   }\n                               ),\n\n                DTColumnBuilder.newColumn('type').withTitle('Type').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return transactionIconSubTypeFilter(data, row.subtype);\n                               }),\n\n                DTColumnBuilder.newColumn('amountTQT').withTitle('Amount').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return amountTQTFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('senderRS').withTitle('').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   var accountRS = AccountService.getAccountDetailsFromSession('accountRs');\n                                   return txDirectionFilter(accountRS, row);\n                               }),\n\n                DTColumnBuilder.newColumn('feeTQT').withTitle('Fee').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return amountTQTFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('confirmations').withTitle('Conf.').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                       return transactionConfFilter(data);\n                                   }\n                               ),\n\n                DTColumnBuilder.newColumn('senderRS').withTitle('Sender').notSortable()\n                               .withOption('defaultContent', ' ')\n                               .renderWith(function (data, type, row, meta) {\n\n                                   if (data === 'XIN-2222-2222-2222-22222') {\n                                       return '';\n                                   }\n\n                                   if (data) {\n                                       return searchTermFilter(data);\n                                   }\n                                   return data;\n                               }),\n\n                DTColumnBuilder.newColumn('phased').withTitle('Msg').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                       var accountRS = AccountService.getAccountDetailsFromSession('accountRs');\n                                       return hasMessageFilter(row, accountRS);\n                                   }\n                               ),\n\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                               .withOption('defaultContent', ' ').renderWith(function (data, type, row, meta) {\n                    if (data) {\n                        return searchTermFilter(data);\n                    } else {\n                        return '';\n                    }\n                    return data;\n                }),\n\n                DTColumnBuilder.newColumn('transaction').withTitle('Details').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return '<button class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                                       ' ng-click=\"searchValue(\\'' + row.fullHash + '\\')\">' +\n                                       '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' +\n                                       '</button>';\n\n                               })];\n\n            $scope.reloadTransactions = function () {\n\n                if ($scope.dtInstanceTransactions) {\n                    $scope.dtInstanceTransactions._renderer.rerender();\n                }\n            };\n\n            $scope.dtInstanceTransactionsCallback = function (_dtInstance) {\n                $scope.dtInstanceTransactions = _dtInstance;\n            };\n        }]);\n\nangular.module('account').controller('AccountLessorCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', 'timestampFilter', 'amountTKNFilter', '$compile', 'baseConfig',\n        'searchTermFilter', 'amountTQTFilter', 'CommonsService',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, timestampFilter, amountTKNFilter, $compile, baseConfig,\n                  searchTermFilter, amountTQTFilter, CommonsService) {\n\n            $scope.dtAccountLessorsOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                                                             .withDOM('frtip')\n                                                             .withOption('serverSide', false)\n                                                             .withDataProp('lessors')\n                                                             .withOption('processing', true)\n                                                             .withOption('info', false)\n                                                             .withOption('paging', true)\n                                                             .withOption('ordering', false)\n                                                             .withOption('processing', true)\n                                                             .withOption('bFilter', false)\n                                                             .withOption('fnRowCallback',\n                                                                 function (nRow, aData, iDisplayIndex,\n                                                                           iDisplayIndexFull) {\n                                                                     $compile(nRow)($scope);\n                                                                 })\n                                                             .withOption('ajax', function (data, callback, settings) {\n                                                                 var account = AccountService.getAccountDetailsFromSession(\n                                                                     'accountId');\n                                                                 AccountService.getAccountLessors(account)\n                                                                               .then(function (response) {\n\n                                                                                   if (!response.accountLeases) {\n                                                                                       response.accountLeases = {};\n                                                                                   }\n\n                                                                                   $scope.currentHeight =\n                                                                                       response.height;\n                                                                                   response.accountLeases =\n                                                                                       CommonsService.sanitizeJson(\n                                                                                           response.accountLeases);\n                                                                                   callback({\n                                                                                       'iTotalRecords': 1000,\n                                                                                       'iTotalDisplayRecords': 1000,\n                                                                                       'lessors': response.accountLeases\n                                                                                   });\n                                                                               });\n                                                             })\n                                                             .withDisplayLength(10).withBootstrap();\n\n            $scope.dtAccountLessorsColumns = [\n\n                DTColumnBuilder.newColumn('lessorRS').withTitle('Account').notSortable()\n                               .withOption('defaultContent', ' ').renderWith(function (data, type, row, meta) {\n                    if (data) {\n                        return searchTermFilter(data);\n                    }\n                    return data;\n                }),\n\n                DTColumnBuilder.newColumn('effectiveBalance').withTitle('Balance <small> XIN </small>').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return amountTKNFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('currentHeightFrom').withTitle('Height From').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return (data);\n                               }),\n\n                DTColumnBuilder.newColumn('currentHeightTo').withTitle('Height To').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return (data);\n                               }),\n\n                DTColumnBuilder.newColumn('currentHeightTo').withTitle('Blocks Left').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   if (row.currentHeightFrom) {\n\n                                       var range = ( data - row.currentHeightFrom );\n                                       var diff = ( data - $scope.currentHeight );\n                                       var value = diff * 100 / range;\n                                       var days = diff / 1440;\n\n                                       var col = diff;\n\n                                       return col;\n\n                                   } else {\n                                       return '';\n                                   }\n\n\n                               }),\n\n                DTColumnBuilder.newColumn('currentHeightTo').withTitle('Days Left').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   var range = ( data - row.currentHeightFrom );\n                                   var diff = ( data - $scope.currentHeight );\n                                   var value = diff * 100 / range;\n                                   var days = diff / 1440;\n\n                                   var col = days.toFixed(2);\n\n                                   return days.toFixed(2);\n\n                               }),\n\n                DTColumnBuilder.newColumn('currentHeightTo').withTitle('Percentage').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   var range = ( data - row.currentHeightFrom );\n                                   var diff = ( data - $scope.currentHeight );\n                                   var value = 100 - ( diff * 100 / range);\n                                   var days = diff / 1440;\n\n                                   var col = value.toFixed(2) + '%';\n\n                                   return col;\n\n                               }),\n\n            ];\n\n            $scope.currentHeight = 0;\n\n            $scope.reloadLessors = function () {\n                if ($scope.dtInstanceLessors) {\n                    $scope.dtInstanceLessors._renderer.rerender();\n                }\n            };\n\n            $scope.dtInstanceLessorsCallback = function (_dtInstance) {\n                $scope.dtInstanceLessors = _dtInstance;\n            };\n\n        }]);\n\nangular.module('account').controller('StepFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n        var sendTokenSteps = [\n            {\n                templateUrl: 'account/modals/send-token-details.html',\n                title: 'Send Token Details',\n                controller: 'SendTokenFormController',\n                isolatedScope: true,\n                data: params\n            },\n            {\n                templateUrl: 'account/modals/send-token-confirm.html',\n                title: 'Send Token Confirmation',\n                controller: 'SendTokenFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var setAccountInfoSteps = [\n            {\n                templateUrl: 'account/modals/set-account-details.html',\n                title: 'Set Account Info Details',\n                controller: 'SetAccountFormCtrl',\n                isolatedScope: true,\n            },\n            {\n                templateUrl: 'account/modals/set-account-confirm.html',\n                title: 'Set Account Info Confirmation',\n                controller: 'SetAccountFormCtrl',\n                isolatedScope: true,\n            }\n        ];\n\n        var searchAccountSteps = [\n            {\n                templateUrl: 'account/modals/search-account-details.html',\n                title: 'Search Account Details',\n                controller: 'SearchAccountFormCtrl',\n                isolatedScope: true,\n            },\n            {\n                templateUrl: 'account/modals/search-account-confirm.html',\n                title: 'Search Account Results',\n                controller: 'SearchAccountFormCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var setControlAccountSteps = [\n            {\n                templateUrl: 'account/modals/control-account-details.html',\n                title: 'Set Account Control Details',\n                controller: 'AccountControlSetAccountCtrl',\n                isolatedScope: true,\n            },\n            {\n                templateUrl: 'account/modals/control-account-confirm.html',\n                title: 'Set Account Control Confirmation',\n                controller: 'AccountControlSetAccountCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var welcomeFaucetSteps = [\n            {\n                templateUrl: 'account/modals/welcome-faucet-details.html',\n                title: 'Welcome',\n                controller: 'WelcomeFaucetFormCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'account/modals/welcome-faucet-confirm.html',\n                title: 'Get Free Token',\n                controller: 'WelcomeFaucetFormCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var setAccountPropertiesForm = [\n            {\n                templateUrl: 'account/modals/properties-details.html',\n                title: 'Set Account Property Details',\n                controller: 'SetPropertiesFormCtrl',\n                isolatedScope: true,\n            },\n            {\n                templateUrl: 'account/modals/properties-confirm.html',\n                title: 'Set Account Property Confirmation',\n                controller: 'SetPropertiesFormCtrl',\n                isolatedScope: true,\n            }\n        ];\n\n        var deleteAccountPropertiesForm = [\n            {\n                templateUrl: 'account/modals/properties-delete-confirm.html',\n                title: 'Delete Account Property Confirmation',\n                controller: 'DeletePropertiesFormCtrl',\n                isolatedScope: true,\n                data: params\n\n            }\n        ];\n\n\n        $scope.steps = {};\n\n        $scope.steps.sendTokenForm = sendTokenSteps;\n        $scope.steps.setAccountInfoForm = setAccountInfoSteps;\n        $scope.steps.searchAccountSteps = searchAccountSteps;\n        $scope.steps.setControlAccountSteps = setControlAccountSteps;\n        $scope.steps.welcomeFaucetForm = welcomeFaucetSteps;\n        $scope.steps.setAccountPropertiesForm = setAccountPropertiesForm;\n        $scope.steps.deleteAccountPropertiesForm = deleteAccountPropertiesForm;\n\n\n    }]);\n\nangular.module('account').controller('BalanceLeasingCtrl',\n    ['$scope', 'AccountService', 'SessionStorageService', '$state', '$uibModalInstance', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$uibModal', 'CurrenciesService',\n        function ($scope, AccountService, SessionStorageService, $state, $uibModalInstance, CryptoService,\n                  loginConfig, AlertService, alertConfig, $uibModal, CurrenciesService) {\n\n\n            $scope.blockheight = 1;\n\n            $scope.initStep = function () {\n\n                CurrenciesService.getBlockChainStatus().then(function (success) {\n                    $scope.blockheight = parseInt(success.numberOfBlocks);\n                });\n\n            };\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.period = 1440;\n\n            $scope.increment = function () {\n                if ($scope.period >= 65535) {\n                    $scope.period = 65535;\n                    return;\n                } else {\n                    $scope.period = $scope.period + 1440;\n                }\n\n                $scope.leaseForm.period = $scope.period;\n            };\n\n            $scope.decrement = function () {\n                if ($scope.period <= 1440) {\n                    $scope.period = 1440;\n                    return;\n                } else {\n                    $scope.period = $scope.period - 1440;\n                }\n\n                $scope.leaseForm.period = $scope.period;\n            };\n\n            $scope.max = function () {\n                $scope.period = 65535;\n                $scope.leaseForm.period = 65535;\n            };\n\n            $scope.min = function () {\n                $scope.period = 1440;\n                $scope.leaseForm.period = 1440;\n            };\n\n            $scope.$watchCollection('leaseForm', function (leaseForm) {\n                if (leaseForm.recipientRS && leaseForm.period && (leaseForm.secret ||\n                    SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY))) {\n                    $scope.validForm = true;\n                } else {\n                    $scope.validForm = false;\n                }\n            });\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: false,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.leaseForm.recipientRS = result.accountRS;\n                });\n            };\n\n            $scope.leaseForm = {};\n\n            $scope.validForm = false;\n            $scope.validBytes = false;\n            $scope.hasPublicKeyAdded = false;\n            $scope.hasMessageAdded = false;\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            var createAndSignTransaction = function (transactionOptions, secretPhraseHex) {\n\n                $scope.setBalanceLeasingPromise = AccountService.setBalanceLeasing(\n                    transactionOptions.senderPublicKey,\n                    transactionOptions.recipientRS,\n                    transactionOptions.period,\n                    transactionOptions.fee,\n                    transactionOptions.data,\n                    transactionOptions.nonce,\n                    transactionOptions.recipientPublicKey\n                ).then(function (success) {\n\n                    if (!success.errorCode) {\n                        var unsignedBytes = success.unsignedTransactionBytes;\n                        var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                        var transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                        $scope.transactionBytes = transactionBytes;\n\n                        $scope.validBytes = true;\n\n                        $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                        $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                        $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n\n                        return transactionBytes;\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.leaseBalanceModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.leaseBalanceModalAlert);\n                });\n            };\n\n            $scope.getAndVerifyAccount = function (leaseForm) {\n\n                if ($scope.blockheight < 3000) {\n\n                    AlertService.addAlert(\n                        {\n                            type: 'info',\n                            msg: 'The balance leasing feature is available starting from block : 3\\'000. This is about 2 days from genesis block creation date. Please try again as soon this block height is reached.'\n                        }, alertConfig.leaseBalanceModalAlert\n                    );\n\n                    return;\n\n                }\n\n                var recipientRS = leaseForm.recipientRS;\n                var period = leaseForm.period;\n                var fee = leaseForm.fee;\n                var secret = leaseForm.secretPhrase;\n\n                var message = leaseForm.message;\n                var pubkey = leaseForm.pubkey;\n\n                var hasPublicKeyAdded = false;\n                var hasMessageAdded = false;\n                var hasSecretAdded = false;\n\n                if (pubkey && pubkey.length > 0) {\n                    hasPublicKeyAdded = true;\n                }\n                if (message && message.length > 0) {\n                    hasMessageAdded = true;\n                }\n                if (secret && secret.length > 0) {\n                    hasSecretAdded = true;\n                }\n\n                if (!fee) {\n                    fee = 1;\n                }\n\n                $scope.hasPublicKeyAdded = hasPublicKeyAdded;\n                $scope.hasMessageAdded = hasMessageAdded;\n\n                var senderPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n                var secretPhraseHex;\n                if (hasSecretAdded) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                AccountService.getAccountDetails(recipientRS).then(function (success) {\n\n                    var recipientPublicKey = success.publicKey;\n\n                    if (!recipientPublicKey && hasPublicKeyAdded) {\n                        recipientPublicKey = pubkey;\n                    }\n\n                    if (!success.errorCode || success.errorCode === 5) {\n\n                        $scope.accountDetails = success;\n\n                        if (!recipientPublicKey && !hasPublicKeyAdded) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: This account has no visible public key because it never had any outbound transaction. Encrypted messages or balance leasing is not available without a public key. Ask the account holder for his public key and add the key on the former page to this transaction'\n                                }, alertConfig.leaseBalanceModalAlert\n                            );\n                            return;\n                        }\n\n                        var encrypted = {data: '', nonce: ''};\n                        if (hasMessageAdded) {\n                            if (!recipientPublicKey) {\n                                recipientPublicKey = pubkey;\n                            }\n                            encrypted = CryptoService.encryptMessage(message, secretPhraseHex, recipientPublicKey);\n                            $scope.encrypted = JSON.stringify(encrypted);\n                        } else {\n                            $scope.encrypted = encrypted;\n                        }\n\n                        var transactionOptions = {\n                            'senderPublicKey': senderPublicKey,\n                            'recipientRS': recipientRS,\n                            'period': period,\n                            'fee': fee,\n                            'data': encrypted.data,\n                            'nonce': encrypted.nonce,\n                            'recipientPublicKey': recipientPublicKey,\n                        };\n\n                        createAndSignTransaction(transactionOptions, secretPhraseHex);\n\n                        if ($scope.encrypted.data === '') {\n                            $scope.encrypted = '';\n                        }\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.leaseBalanceModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.leaseBalanceModalAlert);\n                });\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                AccountService.broadcastTransaction(transactionBytes).then(function (success) {\n                    $uibModalInstance.dismiss('cancel');\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n                        // $state.go('client.signedin.account.pending');\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.leaseBalanceModalAlert);\n                });\n            };\n\n            $scope.steps = [\n                {\n                    templateUrl: 'account/modals/balance-leasing-details.html',\n                    title: 'Balance Leasing Details'\n                },\n                {\n                    templateUrl: 'account/modals/balance-leasing-confirm.html',\n                    title: 'Balance Leasing Confirm'\n                },\n            ];\n\n        }]);\n\nangular.module('account').controller('BlockGenerationCtrl',\n    ['$scope', 'AccountService', 'SessionStorageService', '$state', '$uibModalInstance', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$uibModal', 'NodeService', '$timeout', 'OptionsService',\n        function ($scope, AccountService, SessionStorageService, $state, $uibModalInstance, CryptoService,\n                  loginConfig, AlertService, alertConfig, $uibModal, NodeService, $timeout, OptionsService) {\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.status = 'Unknown';\n\n            $scope.hasLocal = OptionsService.getOption('CONNECTION_MODE') === 'LOCAL_HOST';\n            $scope.connectionMode = OptionsService.getOption('CONNECTION_MODE');\n\n            $scope.displayNotificationAlert = function () {\n\n                if (\n                    $scope.connectionMode !== 'LOCAL_HOST' &&\n                    $scope.connectionMode !== 'TESTNET' &&\n                    $scope.connectionMode !== 'DEVTESTNET'\n                ) {\n                    $timeout(function () {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Localhost (127.0.0.1) is not available. For security reasons localhost is mandatory for block generation.'\n                            }, alertConfig.blockGenerationModalAlert);\n                    }, 500);\n                } else {\n                    $scope.hasLocal = true;\n                }\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.generationStatus = '<span class=\"label label-warning\">Unkown Account</span>';\n\n            $scope.runBlockGeneration = function (mode) {\n                AccountService.blockGeneration(mode, $scope.blockGenerationForm.secretPhrase, $scope.connectionMode)\n                              .then(function (success) {\n\n                                  if (success.errorDescription) {\n                                      $scope.generationStatus = success.errorDescription;\n                                  }\n                                  if (typeof success.deadline !== 'undefined') {\n                                      $scope.generationStatus = '<span class=\"label label-success\">Running</span>';\n                                  }\n                                  if (success.errorCode === 4) {\n                                      $scope.generationStatus =\n                                          '<span class=\"label label-warning\">Unkown Account</span>';\n                                  }\n                                  if (success.foundAndStopped === true) {\n                                      $scope.generationStatus = '<span class=\"label label-danger\">Stopped</span>';\n                                  }\n                                  if (success.foundAndStopped === false) {\n                                      $scope.generationStatus = '<span class=\"label label-danger\">Stopped</span>';\n                                  }\n\n                              });\n\n            };\n\n\n        }]);\n\nangular.module('account').controller('WelcomeFaucetCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', '$compile', '$uibModal',\n        '$q', 'AlertService', 'alertConfig', 'CryptoService', '$state', '$rootScope', 'params',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, $compile, $uibModal,\n                  $q, AlertService, alertConfig, CryptoService, $state, $rootScope, params) {\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.$on('close-modal', function () {\n                $uibModalInstance.dismiss('cancel');\n            });\n\n            var welcomeFaucetSteps = [\n                {\n                    templateUrl: 'account/modals/welcome-faucet-details.html',\n                    title: 'Welcome To XIN',\n                    controller: 'WelcomeFaucetFormCtrl',\n                    isolatedScope: true,\n                    data: params,\n                },\n                {\n                    templateUrl: 'account/modals/welcome-faucet-confirm.html',\n                    title: 'Confirm Email',\n                    controller: 'WelcomeFaucetFormCtrl',\n                    isolatedScope: true,\n                },\n            ];\n\n\n            $scope.steps = {};\n            $scope.steps.welcomeFaucetForm = welcomeFaucetSteps;\n\n        }]);\n\nangular.module('account').controller('AccountPropertiesCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', 'timestampFilter', 'amountTQTFilter', '$compile',\n        'transactionConfFilter', 'transactionTypeFilter', 'searchTermFilter', 'baseConfig',\n        'transactionIconSubTypeFilter', 'CommonsService',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, timestampFilter, amountTQTFilter, $compile,\n                  transactionConfFilter, transactionTypeFilter, searchTermFilter, baseConfig,\n                  transactionIconSubTypeFilter, CommonsService) {\n\n            $scope.dtMyPropertiesOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                                                           .withDOM('frtip')\n                                                           .withOption('serverSide', false)\n                                                           .withDataProp('data')\n                                                           .withOption('processing', true)\n                                                           .withOption('info', false)\n                                                           .withOption('paging', true)\n                                                           .withOption('ordering', false)\n                                                           .withOption('processing', true)\n                                                           .withOption('bFilter', false)\n                                                           .withOption('fnRowCallback',\n                                                               function (nRow, aData, iDisplayIndex,\n                                                                         iDisplayIndexFull) {\n                                                                   $compile(nRow)($scope);\n                                                               })\n                                                           .withOption('ajax', function (data, callback, settings) {\n                                                               var account = AccountService.getAccountDetailsFromSession(\n                                                                   'accountId');\n                                                               var endIndex = data.start + data.length - 1;\n                                                               AccountService.getAccountProperties(\n                                                                   account,\n                                                                   '',\n                                                                   '',\n                                                                   data.start,\n                                                                   endIndex\n                                                               ).then(function (response) {\n                                                                   response.properties =\n                                                                       CommonsService.sanitizeJson(\n                                                                           response.properties);\n                                                                   callback({\n                                                                       'iTotalRecords': response.properties.length,\n                                                                       'iTotalDisplayRecords': response.properties.length,\n                                                                       'data': response.properties\n                                                                   });\n                                                               });\n                                                           })\n                                                           .withDisplayLength(5).withBootstrap();\n\n            $scope.dtMyPropertiesColumns = [\n\n                DTColumnBuilder.newColumn('setterRS').withTitle('Setter').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return searchTermFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('property').withTitle('Key').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return ( data || '');\n                               }),\n\n                DTColumnBuilder.newColumn('value').withTitle('Value').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return ( data || '');\n                               }),\n\n\n                DTColumnBuilder.newColumn('setterRS').withTitle('Action').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   var tt_delete = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                       ' \"Delete property\"';\n\n                                   var mo_delete = '<button class=\"btn btn-default btn-xs\" ' + tt_delete +\n                                       ' ng-click=\"openDeleteAccountPropertyModal(\\'' + data + '\\',\\'' +\n                                       row.property + '\\',\\'' + 1 +\n                                       '\\')\" ng-controller=\"AccountMainCtrl\" ng-disabled=\"false\">' +\n                                       ' <i class=\"fa fa-times\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                                   return mo_delete;\n\n                               })\n\n            ];\n\n            $scope.reloadMyProperties = function () {\n                if ($scope.dtInstanceMyProperties) {\n                    $scope.dtInstanceMyProperties._renderer.rerender();\n                }\n            };\n\n            $scope.dtInstanceMyPropertiesCallback = function (_dtInstance) {\n                $scope.dtInstanceMyProperties = _dtInstance;\n            };\n\n            $scope.dtForeignPropertiesOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                                                                .withDOM('frtip')\n                                                                .withOption('serverSide', false)\n                                                                .withDataProp('data')\n                                                                .withOption('processing', true)\n                                                                .withOption('info', false)\n                                                                .withOption('paging', true)\n                                                                .withOption('ordering', false)\n                                                                .withOption('processing', true)\n                                                                .withOption('bFilter', false)\n                                                                .withOption('fnRowCallback',\n                                                                    function (nRow, aData, iDisplayIndex,\n                                                                              iDisplayIndexFull) {\n                                                                        $compile(nRow)($scope);\n                                                                    })\n                                                                .withOption('ajax',\n                                                                    function (data, callback, settings) {\n                                                                        var account = AccountService.getAccountDetailsFromSession(\n                                                                            'accountId');\n                                                                        var endIndex = data.start + data.length - 1;\n                                                                        AccountService.getAccountProperties(\n                                                                            '',\n                                                                            account,\n                                                                            '',\n                                                                            data.start,\n                                                                            endIndex\n                                                                        ).then(function (response) {\n                                                                            response.properties =\n                                                                                CommonsService.sanitizeJson(\n                                                                                    response.properties);\n                                                                            callback({\n                                                                                'iTotalRecords': response.properties.length,\n                                                                                'iTotalDisplayRecords': response.properties.length,\n                                                                                'data': response.properties\n                                                                            });\n                                                                        });\n                                                                    })\n                                                                .withDisplayLength(5).withBootstrap();\n\n            $scope.dtForeignPropertiesColumns = [\n\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return searchTermFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('property').withTitle('Key').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return ( data || '');\n                               }),\n\n                DTColumnBuilder.newColumn('value').withTitle('Value').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return ( data || '');\n                               }),\n\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Action').notSortable()\n\n                               .renderWith(function (data, type, row, meta) {\n                                   var tt_delete = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                       ' \"Delete property\"';\n\n                                   var mo_delete = '<button class=\"btn btn-default btn-xs\" ' + tt_delete +\n                                       ' ng-click=\"openDeleteAccountPropertyModal(\\'' + data + '\\',\\'' +\n                                       row.property + '\\',\\'' + 2 +\n                                       '\\')\" ng-controller=\"AccountMainCtrl\" ng-disabled=\"false\">' +\n                                       ' <i class=\"fa fa-times\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                                   return mo_delete;\n                               })\n\n            ];\n\n            $scope.reloadForeignProperties = function () {\n                if ($scope.dtInstanceForeignProperties) {\n                    $scope.dtInstanceForeignProperties._renderer.rerender();\n                }\n            };\n\n            $scope.dtInstanceForeignPropertiesCallback = function (_dtInstance) {\n                $scope.dtInstanceForeignProperties = _dtInstance;\n            };\n\n        }]);\n\nangular.module('account').controller('SetPropertiesFormCtrl',\n    ['$scope', 'AccountService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', 'FeeService', 'multiStepFormScope', '$rootScope', '$uibModal',\n        function ($scope, AccountService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, FeeService, multiStepFormScope, $rootScope, $uibModal) {\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.sendTokenForm.recipientRS = result.accountRS;\n                });\n            };\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.setAccountPropertyForm = angular.copy(multiStepFormScope.setAccountPropertyForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.setAccountPropertyForm = angular.copy($scope.setAccountPropertyForm);\n            });\n\n            $scope.setAccount = function () {\n                $scope.setAccountPropertyForm.recipientRS = AccountService.getAccountDetailsFromSession('accountRs');\n\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.createSetAccountPropertyTransaction = function () {\n\n                var form = multiStepFormScope.setAccountPropertyForm;\n                var account = form.recipientRS;\n                var key = form.key;\n                var value = form.value;\n\n                var fee = 1;\n                var secret = form.secretPhrase;\n\n                var accountPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                $scope.setAccountPropertyPromise =\n                    AccountService.setAccountProperty(account, key, value, accountPublicKey, fee)\n                                  .then(function (success) {\n                                      if (!success.errorCode) {\n                                          var unsignedBytes = success.unsignedTransactionBytes;\n                                          var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                                          $scope.transactionBytes =\n                                              CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                                          $scope.validBytes = true;\n\n                                          $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                                          $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                                          $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                                      } else {\n                                          AlertService.addAlert(\n                                              {\n                                                  type: 'danger',\n                                                  msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                              }, alertConfig.setInfoModalAlert\n                                          );\n                                      }\n                                  }, function (error) {\n                                      AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                          alertConfig.setInfoModalAlert);\n                                  });\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.setAccountPromise = AccountService.broadcastTransaction(transactionBytes)\n                                                         .then(function (success) {\n                                                             $scope.$emit('close-modal');\n                                                             if (!success.errorCode) {\n                                                                 AlertService.addAlert(\n                                                                     {\n                                                                         type: 'success',\n                                                                         msg: 'Transaction succesfull broadcasted with id ' +\n                                                                         success.transaction\n                                                                     });\n                                                                 // $state.go('client.signedin.account.pending');\n                                                                 $rootScope.$broadcast('reload-dashboard');\n                                                             } else {\n                                                                 AlertService.addAlert(\n                                                                     {\n                                                                         type: 'danger',\n                                                                         msg: 'Unable to broadcast transaction. Reason: ' +\n                                                                         success.errorDescription\n                                                                     });\n                                                             }\n\n                                                         }, function (error) {\n                                                             AlertService.addAlert(\n                                                                 AlertService.getNoConnectionMessage(error),\n                                                                 alertConfig.setInfoModalAlert);\n                                                         });\n            };\n\n        }]);\n\nangular.module('account').controller('DeletePropertiesFormCtrl',\n    ['$scope', 'AccountService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', 'FeeService', 'multiStepFormScope', '$rootScope', '$uibModal',\n        function ($scope, AccountService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, FeeService, multiStepFormScope, $rootScope, $uibModal) {\n\n            $scope.form = $scope.$getActiveStep().data;\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.setAccountPropertyForm = angular.copy($scope.setAccountPropertyForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.createDeleteAccountPropertyTransaction = function () {\n\n                var form = $scope.$getActiveStep().data;\n\n                var local = AccountService.getAccountDetailsFromSession('accountRs');\n                var account = form.account;\n                var property = form.property;\n                var mode = parseInt(form.mode);\n                var setter = '';\n\n                if (mode === 1) {\n\n                    if (account === local) {\n                        setter = local;\n                        account = local;\n                    } else {\n                        setter = account;\n                        account = local;\n                    }\n\n                } else if (mode === 2) {\n                    setter = local;\n                    account = account;\n                }\n\n                var fee = 1;\n                var secret = form.secretPhrase;\n\n                var accountPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                $scope.deletePropertyPromise =\n                    AccountService.deleteAccountProperty(account, property, setter, accountPublicKey, fee)\n                                  .then(function (success) {\n\n                                      if (!success.errorCode) {\n                                          var unsignedBytes = success.unsignedTransactionBytes;\n                                          var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                                          $scope.transactionBytes =\n                                              CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                                          $scope.validBytes = true;\n\n                                          $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                                          $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                                          $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                                      } else {\n                                          AlertService.addAlert(\n                                              {\n                                                  type: 'danger',\n                                                  msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                              }, alertConfig.deletePropertyAlert\n                                          );\n                                      }\n                                  }, function (error) {\n                                      AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                          alertConfig.deletePropertyAlert);\n                                  });\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.setAccountPromise = AccountService.broadcastTransaction(transactionBytes)\n                                                         .then(function (success) {\n                                                             $scope.$emit('close-modal');\n                                                             if (!success.errorCode) {\n                                                                 AlertService.addAlert(\n                                                                     {\n                                                                         type: 'success',\n                                                                         msg: 'Transaction succesfull broadcasted with id ' +\n                                                                         success.transaction\n                                                                     });\n                                                                 // $state.go('client.signedin.account.pending');\n                                                                 $rootScope.$broadcast('reload-dashboard');\n                                                             } else {\n                                                                 AlertService.addAlert(\n                                                                     {\n                                                                         type: 'danger',\n                                                                         msg: 'Unable to broadcast transaction. Reason: ' +\n                                                                         success.errorDescription\n                                                                     });\n                                                             }\n\n                                                         }, function (error) {\n                                                             AlertService.addAlert(\n                                                                 AlertService.getNoConnectionMessage(error),\n                                                                 alertConfig.setInfoModalAlert);\n                                                         });\n            };\n\n        }]);\n\nangular.module('account').controller('AccountLedgerCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', 'timestampFilter', 'amountTQTFilter', '$compile',\n        'transactionConfFilter', 'transactionTypeFilter', 'searchTermFilter', 'baseConfig',\n        'transactionIconSubTypeFilter', 'CommonsService', 'holdingTypeFilter', 'isEnabledFilter', 'ledgerHoldingFilter',\n        'ledgerTXTypesFilter',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, timestampFilter, amountTQTFilter, $compile,\n                  transactionConfFilter, transactionTypeFilter, searchTermFilter, baseConfig,\n                  transactionIconSubTypeFilter, CommonsService, holdingTypeFilter, isEnabledFilter, ledgerHoldingFilter,\n                  ledgerTXTypesFilter) {\n\n            $scope.dtLedgerOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                                                     .withDOM('frtip')\n                                                     .withOption('serverSide', true)\n                                                     .withDataProp('entries')\n                                                     .withOption('responsive', true)\n                                                     .withOption('processing', true)\n                                                     .withOption('paging', true)\n                                                     .withOption('ordering', false)\n                                                     .withOption('info', false)\n                                                     .withOption('bFilter', false)\n                                                     .withOption('fnRowCallback',\n                                                         function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                                                             $compile(nRow)($scope);\n                                                         })\n                                                     .withOption('ajax', function (data, callback, settings) {\n                                                         var endIndex = data.start + data.length - 1;\n                                                         var account = AccountService.getAccountDetailsFromSession(\n                                                             'accountId');\n                                                         AccountService.getAccountLedger(account, data.start, endIndex)\n                                                                       .then(function (response) {\n\n                                                                           response.entries =\n                                                                               CommonsService.sanitizeJson(\n                                                                                   response.entries);\n                                                                           callback({\n                                                                               'iTotalRecords': 1000,\n                                                                               'iTotalDisplayRecords': 1000,\n                                                                               'entries': response.entries\n                                                                           });\n                                                                       });\n                                                     })\n                                                     .withDisplayLength(10).withBootstrap();\n\n            $scope.dtLedgerColumns = [\n\n                DTColumnBuilder.newColumn('ledgerId').withTitle('ID').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return (data);\n\n                               }),\n\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                       return timestampFilter(data);\n                                   }\n                               ),\n\n                DTColumnBuilder.newColumn('event').withTitle('Details').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                                       ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                                       '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' +\n                                       '</button>';\n\n                               }),\n\n                DTColumnBuilder.newColumn('event').withTitle('Transaction').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return searchTermFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('isTransactionEvent').withTitle('Event').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return isEnabledFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('holdingType').withTitle('Holding Type').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return ledgerHoldingFilter(data); // holdingTypeFilter(data, row.subtype);\n                               }),\n\n                DTColumnBuilder.newColumn('eventType').withTitle('Transaction Type').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return ledgerTXTypesFilter(data); // searchTermFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('change').withTitle('Change').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return amountTQTFilter(data);\n\n                               }),\n                DTColumnBuilder.newColumn('balance').withTitle('Balance').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return amountTQTFilter(data);\n                               }),\n\n            ];\n\n            $scope.reloadLedgerEntries = function () {\n                if ($scope.dtInstanceLedgerEntries) {\n                    $scope.dtInstanceLedgerEntries._renderer.rerender();\n                }\n            };\n\n            $scope.dtInstanceLedgerCallback = function (_dtInstance) {\n                $scope.dtInstanceLedgerEntries = _dtInstance;\n            };\n\n        }]);\n\nangular.module('account').controller('FundingMonitorCtrl',\n['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n    'DTColumnBuilder', 'AccountService', 'timestampFilter', 'amountTQTFilter', '$compile',\n    'transactionConfFilter', 'transactionTypeFilter', 'searchTermFilter', 'baseConfig',\n    'transactionIconSubTypeFilter', 'CommonsService', 'holdingTypeFilter', 'isEnabledFilter', 'ledgerHoldingFilter',\n    'ledgerTXTypesFilter', 'CryptoService', 'amountTKNFilter',\n    function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n              DTColumnBuilder, AccountService, timestampFilter, amountTQTFilter, $compile,\n              transactionConfFilter, transactionTypeFilter, searchTermFilter, baseConfig,\n              transactionIconSubTypeFilter, CommonsService, holdingTypeFilter, isEnabledFilter, ledgerHoldingFilter,\n              ledgerTXTypesFilter, CryptoService, amountTKNFilter) {\n\n\n                $scope.dFundingOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                                                         .withDOM('frtip')\n                                                         .withOption('serverSide', true)\n                                                         .withDataProp('entries')\n                                                         .withOption('responsive', true)\n                                                         .withOption('processing', true)\n                                                         .withOption('paging', true)\n                                                         .withOption('ordering', false)\n                                                         .withOption('info', false)\n                                                         .withOption('bFilter', false)\n                                                         .withOption('fnRowCallback',\n                                                             function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                                                                 $compile(nRow)($scope);\n                                                             })\n                                                         .withOption('ajax', function (data, callback, settings) {\n                                                             var endIndex = data.start + data.length - 1;\n                                                             var account = AccountService.getAccountDetailsFromSession(\n                                                                 'accountId');\n                                                             var privateKey = SessionStorageService.getFromSession(\n                                                                 loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                                                             var secretPhrase = CryptoService.secretPhraseFromPrivateKey(\n                                                                 privateKey);\n\n                                                             AccountService.getFundingMonitors(undefined, undefined,\n                                                                 undefined, undefined, secretPhrase, undefined)\n                                                                           .then(function (response) {\n\n                                                                               //console.log ( response);\n\n                                                                               response.monitors =\n                                                                                   CommonsService.sanitizeJson(\n                                                                                       response.monitors);\n                                                                               callback({\n                                                                                   'iTotalRecords': 100,\n                                                                                   'iTotalDisplayRecords': 100,\n                                                                                   'entries': response.monitors\n                                                                               });\n                                                                           });\n                                                         })\n\n                                                     .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumnsFunding = [\n\n                DTColumnBuilder.newColumn('amount').withTitle('Amount').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return amountTQTFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('holdingType').withTitle('Type').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return holdingTypeFilter(data);\n                               }),\n\n                  DTColumnBuilder.newColumn('threshold').withTitle('Threshold').notSortable()\n                                  .renderWith(function (data, type, row, meta) {\n                                      return amountTQTFilter(data);\n                                  }),\n\n                DTColumnBuilder.newColumn('threshold').withTitle('Threshold').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return amountTQTFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('property').withTitle('Property').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return (data);\n                               }),\n\n                DTColumnBuilder.newColumn('monitoredAccounts').withTitle('Recipient').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   var accountRS = _.get(row, 'monitoredAccounts[0].accountRS') || '';\n                                   return searchTermFilter(accountRS);\n                               }),\n\n                DTColumnBuilder.newColumn('monitoredAccounts').withTitle('Action').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   var holdingType = row.holdingType;\n                                   var holding = row.holding;\n                                   var property = row.property;\n\n                                   var privateKey = SessionStorageService.getFromSession(\n                                       loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                                   var secretPhrase = CryptoService.secretPhraseFromPrivateKey(\n                                       privateKey);\n\n                                   var cancel_tag = false;\n                                   var tt_cancel = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                       ' \"Stop Monitor\"';\n\n                                   var stop_monitor = '<div ng-controller=\"AccountMainCtrl\"><button type=\"button\" class=\"btn btn-default btn-xs\"  ' +\n                                       tt_cancel +\n                                       'ng-disabled=\"' + cancel_tag + '\"' + ' ng-click=\"stopFundingMonitor(\\'' +\n                                       property + '\\',\\'' + secretPhrase + '\\',\\'' + holdingType + '\\',\\'' + holding +\n                                       '\\')\" confirm=\"Are you sure, want to stop this monitor?\"> ' +\n                                       ' <i class=\"fa fa-times\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' +\n                                       '</button></div> ';\n\n                                   return stop_monitor;\n\n                               }),\n\n            ];\n\n            $scope.reloadFunding = function () {\n                if ($scope.dtInstanceFunding) {\n                    $scope.dtInstanceFunding._renderer.rerender();\n                }\n            };\n\n            function reloadFunding() {\n                if ($scope.dtInstanceFunding) {\n                    $scope.dtInstanceFunding._renderer.rerender();\n                }\n            }\n\n            $scope.dtInstanceFundingCallback = function (_dtInstance) {\n                $scope.dtInstanceFunding = _dtInstance;\n            };\n\n        }]);\n\nangular.module('account').controller('StartFundingMonitorCtrl',\n    ['$scope', 'AccountService', 'SessionStorageService', '$state', '$uibModalInstance', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$uibModal', 'NodeService', '$timeout', 'OptionsService', 'AssetsService',\n        'CurrenciesService', 'amountToQuantFilter', 'shareToQuantiyFilter', 'holdingTypeFilter', 'amountTQTFilter',\n        'numberStringFilter', '$sanitize', 'quantityToShareFilter', 'searchTermFilter', 'DTOptionsBuilder',\n        'DTColumnBuilder', '$compile',\n        function ($scope, AccountService, SessionStorageService, $state, $uibModalInstance, CryptoService,\n                  loginConfig, AlertService, alertConfig, $uibModal, NodeService, $timeout, OptionsService,\n                  AssetsService, CurrenciesService, amountToQuantFilter, shareToQuantiyFilter, holdingTypeFilter,\n                  amountTQTFilter, numberStringFilter, $sanitize, quantityToShareFilter, searchTermFilter,\n                  DTOptionsBuilder, DTColumnBuilder, $compile) {\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.status = 'Unknown';\n\n            $scope.hasLocal = OptionsService.getOption('CONNECTION_MODE') === 'LOCAL_HOST';\n            $scope.connectionMode = OptionsService.getOption('CONNECTION_MODE');\n\n            $scope.displayNotificationAlert = function () {\n\n                if (\n                    $scope.connectionMode !== 'LOCAL_HOST' &&\n                    $scope.connectionMode !== 'TESTNET' &&\n                    $scope.connectionMode !== 'DEVTESTNET' &&\n                    $scope.connectionMode !== 'MANUAL'\n\n                ) {\n                    $timeout(function () {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Localhost (127.0.0.1) is not available. For security reasons localhost is mandatory to start a funding monitor.'\n                            }, alertConfig.startFundingMonitorAlert);\n                    }, 1000);\n                } else {\n                    $scope.hasLocal = true;\n                }\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.getAsset = function (assetId) {\n                AssetsService.getAsset(assetId).then(function (success) {\n                    $scope.startFundingMonitorForm.asset = success;\n                });\n            };\n\n            $scope.getCurrency = function (currencyCode) {\n                CurrenciesService.getCurrency(currencyCode).then(function (success) {\n                    $scope.startFundingMonitorForm.currency = success;\n                });\n            };\n\n            $scope.holdingOptions = [\n                {label: 'XIN', value: '0'},\n                {label: 'Asset', value: '1'},\n                {label: 'Currency', value: '2'}\n            ];\n\n            $scope.fundingMonitorActions = function (startFundingMonitorForm) {\n                var fundingMonitorForm = startFundingMonitorForm || $scope.startFundingMonitorForm;\n                var property = fundingMonitorForm.property;\n                var amount = fundingMonitorForm.amount;\n                var threshold = amountToQuantFilter(fundingMonitorForm.threshold); // fundingMonitorForm.threshold;\n                var interval = fundingMonitorForm.interval;\n                var holding = fundingMonitorForm.holding;\n                var holdingType = fundingMonitorForm.holdingType;\n                var secretPhrase = fundingMonitorForm.secretPhrase;\n                var adminPassword = fundingMonitorForm.adminPassword;\n                switch (holdingType) {\n                    case '0':\n                        amount = amountToQuantFilter(amount);\n                        break;\n                    case '1':\n                        amount = shareToQuantiyFilter(amount, $scope.startFundingMonitorForm.asset.decimals);\n                        break;\n                    case '2':\n                        amount = shareToQuantiyFilter(amount, $scope.startFundingMonitorForm.currency.decimals);\n                        break;\n                }\n                AccountService.startFundingMonitor(property, amount, threshold, interval, holding, holdingType,\n                    secretPhrase, adminPassword).then(function (success) {\n                    if (!success.errorCode) {\n\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Monitor for account property : ' + property + ' successful started'\n                            }, alertConfig.startFundingMonitorModalAlert);\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable start the monitor for account property : ' + property + '. Reason: ' + success.errorDescription\n                            }, alertConfig.startFundingMonitorModalAlert);\n                    }\n\n\n                });\n\n            };\n\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('account').controller('SendTokenFormController',\n    ['$scope', 'AccountService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'amountToQuantFilter',\n        function ($scope, AccountService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, amountToQuantFilter) {\n\n            $scope.sendTokenForm = angular.copy(multiStepFormScope.sendTokenForm);\n            $scope.validForm = false;\n            $scope.validBytes = false;\n            $scope.hasPublicKeyAdded = false;\n            $scope.hasMessageAdded = false;\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.sendTokenForm = angular.copy($scope.sendTokenForm);\n            });\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data || {};\n                if (data.recipient) {\n                    $scope.sendTokenForm.recipientRS = data.recipient;\n                }\n            };\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.sendTokenForm.recipientRS = result.accountRS;\n                });\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            var createAndSignTransaction = function (transactionOptions, secretPhraseHex) {\n                $scope.sendTokenPromise = AccountService.createTransaction(\n                    transactionOptions.senderPublicKey,\n                    transactionOptions.recipientRS,\n                    transactionOptions.amount,\n                    1,\n                    transactionOptions.data,\n                    transactionOptions.nonce,\n                    transactionOptions.recipientPublicKey\n                ).then(function (success) {\n\n\n\n                    if (!success.errorCode) {\n                        var unsignedBytes = success.unsignedTransactionBytes;\n                        var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                        var transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                        $scope.transactionBytes = transactionBytes;\n                        $scope.validBytes = true;\n\n                        $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                        $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                        $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                        return transactionBytes;\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.sendTokenModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendTokenModalAlert);\n                });\n            };\n\n            $scope.getAndVerifyAccount = function (sendTokenForm) {\n\n                var sendForm = multiStepFormScope.sendTokenForm;\n\n                var recipientRS = sendForm.recipientRS;\n                var amount = amountToQuantFilter(sendForm.amount);\n\n                var fee = sendForm.fee;\n                var secret = sendForm.secretPhrase;\n\n                var message = sendForm.message;\n                var pubkey = sendForm.pubkey;\n\n                var hasPublicKeyAdded = false;\n                var hasMessageAdded = false;\n                var hasSecretAdded = false;\n\n                if (pubkey && pubkey.length > 0) {\n                    hasPublicKeyAdded = true;\n                }\n                if (message && message.length > 0) {\n                    hasMessageAdded = true;\n                }\n                if (secret && secret.length > 0) {\n                    hasSecretAdded = true;\n                }\n\n                if (!fee) {\n                    fee = 1;\n                }\n\n                $scope.hasPublicKeyAdded = hasPublicKeyAdded;\n                $scope.hasMessageAdded = hasMessageAdded;\n\n                var senderPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n                var secretPhraseHex;\n\n                if (hasSecretAdded) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                $scope.sendTokenPromise = AccountService.getAccountDetails(recipientRS).then(function (success) {\n\n                    var recipientPublicKey = success.publicKey;\n\n                    if (!recipientPublicKey && hasPublicKeyAdded) {\n                        recipientPublicKey = pubkey;\n                    }\n\n                    if (!success.errorCode || success.errorCode === 5) {\n\n                        $scope.accountDetails = success;\n\n                        if (!recipientPublicKey && !hasPublicKeyAdded && hasMessageAdded) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: This account has no visible public key because it never had any outbound transaction. Encrypted messages are not available without a public key. Ask the account holder for his public key and add the key on the former page to this transaction'\n                                }, alertConfig.sendTokenModalAlert\n                            );\n                            return;\n                        }\n\n                        if (!recipientPublicKey && !hasPublicKeyAdded) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'info',\n                                    msg: 'Note: This account never had an outbound transaction. Make sure this account is the right one. In doubt, ask the account holder for his public key and add it on the former page to this transaction.'\n                                }, alertConfig.sendTokenModalAlert\n                            );\n                        }\n\n                        var encrypted = {data: '', nonce: ''};\n                        if (hasMessageAdded) {\n                            if (!recipientPublicKey) {\n                                recipientPublicKey = pubkey;\n                            }\n                            encrypted = CryptoService.encryptMessage(message, secretPhraseHex, recipientPublicKey);\n                            $scope.encrypted = JSON.stringify(encrypted);\n                        } else {\n                            $scope.encrypted = encrypted;\n                        }\n\n                        var transactionOptions = {\n                            'senderPublicKey': senderPublicKey,\n                            'recipientRS': recipientRS,\n                            'amount': amount,\n                            'fee': fee,\n                            'data': encrypted.data,\n                            'nonce': encrypted.nonce,\n                            'recipientPublicKey': recipientPublicKey,\n                        };\n\n                        createAndSignTransaction(transactionOptions, secretPhraseHex);\n\n                        if ($scope.encrypted.data === '') {\n                            $scope.encrypted = '';\n                        }\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.sendTokenModalAlert\n                        );\n                    }\n                },function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendTokenModalAlert);\n                });\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.sendTokenPromise =AccountService.broadcastTransaction(transactionBytes).then(function (success) {\n\n\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n\n                        $scope.$emit('close-modal');\n                        // $state.go('client.signedin.account.pending');\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendTokenModalAlert);\n                });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('account').controller('SetAccountFormCtrl',\n    ['$scope', 'AccountService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', 'FeeService', 'multiStepFormScope', '$rootScope',\n        function ($scope, AccountService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, FeeService, multiStepFormScope, $rootScope) {\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.setAccountInfoForm = angular.copy(multiStepFormScope.setAccountInfoForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.setAccountInfoForm = angular.copy($scope.setAccountInfoForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.$watchCollection('setAccountInfoForm', function (setAccountInfoForm) {\n                var totalFee = FeeService.getSetAccountFee(setAccountInfoForm.accountName,\n                    setAccountInfoForm.accountDescription);\n\n                if (!$scope.setAccountInfoForm.fee || $scope.setAccountInfoForm.fee < totalFee) {\n                    $scope.setAccountInfoForm.fee = totalFee;\n                }\n            });\n\n            $scope.createSetAccountInfoTransaction = function () {\n\n                var setAccountInfoForm = multiStepFormScope.setAccountInfoForm;\n                var name = setAccountInfoForm.accountName;\n                var description = setAccountInfoForm.accountDescription;\n\n                var fee = 1;\n                var secret = setAccountInfoForm.secretPhrase;\n\n                var accountPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                $scope.setAccountPromise = AccountService.setAccountInfo(accountPublicKey, name, description, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                            //$scope.transactionJSON = success.transactionJSON;\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.setInfoModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.setInfoModalAlert);\n                    });\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.setAccountPromise = AccountService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with id ' + success.transaction\n                                });\n                            // $state.go('client.signedin.account.pending');\n                            $rootScope.$broadcast('reload-dashboard');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.setInfoModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('account').controller('SearchAccountFormCtrl',\n    ['$scope', 'AccountService', 'SessionStorageService', '$state', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'searchTermFilter', '$compile', 'multiStepFormScope', '$validation',\n        function ($scope, AccountService, SessionStorageService, $state, DTOptionsBuilder,\n                  DTColumnBuilder, searchTermFilter, $compile, multiStepFormScope, $validation) {\n\n            $scope.searchAccountForm = {};\n\n            $scope.onSubmit = function () {\n                $validation.validate($scope.searchAccountForm);\n                if ($scope.searchAccountForm.$valid) {\n                    $scope.$nextStep();\n                }\n            };\n\n            $scope.searchAccountForm = angular.copy(multiStepFormScope.searchAccountForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.searchAccountForm = angular.copy($scope.searchAccountForm);\n            });\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('serverSide', false)\n                .withDataProp('accounts')\n                .withOption('processing', true)\n                .withOption('info', false)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n\n                    var query = multiStepFormScope.searchAccountForm.query;\n                    AccountService.searchAccounts(query)\n                        .then(function (response) {\n                            callback({\n                                'iTotalRecords': response.accounts.length,\n                                'iTotalDisplayRecords': response.accounts.length,\n                                'accounts': response.accounts\n                            });\n                        });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('accountRS').withTitle('Account').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('accountRS').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a href ng-click=\"openAddressBookModal(\\'' + data + '\\',\\'' + row.name +\n                            '\\')\" ng-controller=\"BaseCtrl\">  <button ng-disabled=\"\" class=\"btn btn-success btn-xs\"> <i class=\"fa fa-plus\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>   </a>';\n                    }),\n\n            ];\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('account').controller('ControlMainCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', 'timestampFilter', 'amountTQTFilter', '$compile', 'controlConfig',\n        'transactionConfFilter', 'transactionTypeFilter', 'searchTermFilter', '$uibModal', 'isMessageFilter',\n        'transactionIconSubTypeFilter',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, timestampFilter, amountTQTFilter, $compile, controlConfig,\n                  transactionConfFilter, transactionTypeFilter, searchTermFilter, $uibModal, isMessageFilter,\n                  transactionIconSubTypeFilter) {\n\n\n            $scope.openClaimSecretModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/claim-secret-form.html',\n                    size: 'lg',\n                    controller: 'ControlStepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openSendReferencedModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/send-reference-form.html',\n                    size: 'lg',\n                    controller: 'ControlStepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openSendDeferredModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/send-deferred-form.html',\n                    size: 'lg',\n                    controller: 'ControlStepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openSendSecretModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'account/modals/send-secret-form.html',\n                    size: 'lg',\n                    controller: 'ControlStepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openApproveControlModal = function (row) {\n                var modalInstance = $uibModal.open({\n                    animation: false,\n                    templateUrl: 'account/modals/control-approve-form.html',\n                    controller: 'ControlStepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                approve: $scope.data[row],\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openRemoveControlModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: false,\n                    templateUrl: 'account/modals/control-remove-form.html',\n                    controller: 'ControlStepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return '';\n                        }\n                    }\n                });\n            };\n\n            $scope.openSetAccountControlModal = function (row) {\n                var modalInstance = $uibModal.open({\n                    animation: false,\n                    templateUrl: 'account/modals/set-account-control-form.html',\n                    controller: 'ControlStepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openSetAssetControlModal = function (row) {\n                var modalInstance = $uibModal.open({\n                    animation: false,\n                    templateUrl: 'account/modals/control-asset-form.html',\n                    controller: 'ControlStepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return $scope.data[row];\n                        }\n                    }\n                });\n            };\n\n            $scope.openSetCurrencyControlModal = function (row) {\n                var modalInstance = $uibModal.open({\n                    animation: false,\n                    templateUrl: 'account/modals/control-currency-form.html',\n                    controller: 'ControlStepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return $scope.data[row];\n                        }\n                    }\n                });\n            };\n\n            $scope.dtOptionsControl = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('serverSide', true)\n                .withDataProp('data')\n                .withOption('responsive', true)\n                .withOption('processing', true)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    var accountId = AccountService.getAccountDetailsFromSession('accountId');\n                    AccountService.getVoterPhasedTransactions(accountId, data.start, endIndex)\n                        .then(function (response) {\n\n                            $scope.data = response.transactions;\n\n                            callback({\n                                'iTotalRecords': 1000,\n                                'iTotalDisplayRecords': 1000,\n                                'data': response.transactions\n                            });\n\n                        });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumnsControl = [\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return timestampFilter(data);\n                        }\n                    ),\n\n                DTColumnBuilder.newColumn('type').withTitle('Type').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return transactionIconSubTypeFilter(data, row.subtype);\n                    }),\n\n                DTColumnBuilder.newColumn('amountTQT').withTitle('Amount').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('confirmations').withTitle('Conf.').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return transactionConfFilter(data);\n                        }\n                    ),\n\n                DTColumnBuilder.newColumn('confirmations').withTitle('Message').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return isMessageFilter(row.type, row.subtype);\n                        }\n                    ),\n\n                DTColumnBuilder.newColumn('attachment.phasingFinishHeight').withTitle('Height').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return data;\n                        }\n                    ),\n\n                DTColumnBuilder.newColumn('senderRS').withTitle('Sender').notSortable()\n                    .withOption('defaultContent', ' ')\n                    .renderWith(function (data, type, row, meta) {\n                        if (data) {\n                            return searchTermFilter(data);\n                        }\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                    .withOption('defaultContent', ' ').renderWith(function (data, type, row, meta) {\n                    if (data) {\n                        return searchTermFilter(data);\n                    } else {\n                        return '';\n                    }\n                    return data;\n                }),\n\n                DTColumnBuilder.newColumn('transaction').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + row.fullHash + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i>' + '</button>';\n\n                    }),\n\n                DTColumnBuilder.newColumn('transaction').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        return '<button type=\"button\" class=\"btn btn-danger btn-xs\" ng-controller=\"ControlMainCtrl\"' +\n                            ' ng-click=\"openApproveControlModal(\\'' + meta.row + '\\')\">' +\n                            '<i class=\"fa fa-unlock\" aria-hidden=\"true\"></i>' + '</button>';\n                    }),\n\n            ];\n\n            $scope.reloadControl = function () {\n                if ($scope.dtInstanceControl) {\n                    $scope.dtInstanceControl._renderer.rerender();\n                }\n\n            };\n\n            $scope.dtInstanceCallbackControl = function (_dtInstance) {\n                $scope.dtInstanceControl = _dtInstance;\n            };\n\n            $scope.hasControl =\n                SessionStorageService.getFromSession(controlConfig.SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY);\n\n        }]);\n\nangular.module('account').controller('ControlStepFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n        var controlApproveSteps = [\n            {\n                templateUrl: 'account/modals/control-approve-details.html',\n                title: 'Approve Controlled Transaction Details',\n                controller: 'ControlApproveCtrl',\n                isolatedScope: true,\n                data: params\n            },\n            {\n                templateUrl: 'account/modals/control-approve-confirm.html',\n                title: 'Approve Controlled Transaction Confirm',\n                controller: 'ControlApproveCtrl',\n                isolatedScope: true,\n                data: params\n            },\n        ];\n\n        var removeAccountControlSteps = [\n            {\n                templateUrl: 'account/modals/control-remove-details.html',\n                title: 'Remove Account Control Details',\n                controller: 'RemoveAccountControlCtrl',\n                isolatedScope: true,\n                data: params\n            },\n            {\n                templateUrl: 'account/modals/control-remove-confirm.html',\n                title: 'Remove Account Control Confirmation',\n                controller: 'RemoveAccountControlCtrl',\n                isolatedScope: true,\n                data: params\n            },\n        ];\n\n        var setAccountControlSteps = [\n            {\n                templateUrl: 'account/modals/set-account-control-details.html',\n                title: 'Set Account Control Details',\n                controller: 'SetAccountControlCtrl',\n                isolatedScope: true,\n                data: params\n            },\n            {\n                templateUrl: 'account/modals/set-account-control-confirm.html',\n                title: 'Set Account Control Confirmation',\n                controller: 'SetAccountControlCtrl',\n                isolatedScope: true,\n                data: params\n            },\n        ];\n\n        var controlAssetSteps = [\n            {\n                templateUrl: 'account/modals/control-asset-details.html',\n                title: 'Set Asset Control Details',\n                controller: 'ControlAssetCtrl',\n                isolatedScope: true,\n                data: params\n            },\n            {\n                templateUrl: 'account/modals/control-asset-confirm.html',\n                title: 'Set Asset Control Confirmation',\n                controller: 'ControlAssetCtrl',\n                isolatedScope: true,\n                data: params\n            },\n        ];\n\n        var controlCurrencySteps = [\n            {\n                templateUrl: 'account/modals/control-currency-details.html',\n                title: 'Set Currency Control Details',\n                controller: 'ControlCurrencyCtrl',\n                isolatedScope: true,\n                data: params\n            },\n            {\n                templateUrl: 'account/modals/control-currency-confirm.html',\n                title: 'Set Currency Control Confirmation',\n                controller: 'ControlCurrencyCtrl',\n                isolatedScope: true,\n                data: params\n            },\n        ];\n\n        var sendDeferredSteps = [\n            {\n                templateUrl: 'account/modals/send-deferred-details.html',\n                title: 'Send Deferred Token Details',\n                controller: 'SendDeferredController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'account/modals/send-deferred-confirm.html',\n                title: 'Send Deferred Token Confirmation',\n                controller: 'SendDeferredController',\n                isolatedScope: true,\n            },\n        ];\n\n        var sendReferencedSteps = [\n            {\n                templateUrl: 'account/modals/send-reference-details.html',\n                title: 'Send Reference Token Details',\n                controller: 'SendReferencedController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'account/modals/send-reference-confirm.html',\n                title: 'Send Reference Token Confirmation',\n                controller: 'SendReferencedController',\n                isolatedScope: true,\n            },\n        ];\n\n        var sendSecretSteps = [\n            {\n                templateUrl: 'account/modals/send-secret-details.html',\n                title: 'Send Secret Token Details',\n                controller: 'SendSecretController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'account/modals/send-secret-confirm.html',\n                title: 'Send Secret Token Confirmation',\n                controller: 'SendSecretController',\n                isolatedScope: true,\n            },\n        ];\n\n        var claimSecretSteps = [\n            {\n                templateUrl: 'account/modals/claim-secret-details.html',\n                title: 'Claim Secret Token Details',\n                controller: 'ClaimSecretController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'account/modals/claim-secret-confirm.html',\n                title: 'Claim Secret Token Confirmation',\n                controller: 'ClaimSecretController',\n                isolatedScope: true,\n            },\n        ];\n\n\n        $scope.steps = {};\n\n        $scope.steps.controlApproveSteps = controlApproveSteps;\n        $scope.steps.removeAccountControlForm = removeAccountControlSteps;\n        $scope.steps.setAccountControlForm = setAccountControlSteps;\n        $scope.steps.controlAssetSteps = controlAssetSteps;\n        $scope.steps.controlCurrencySteps = controlCurrencySteps;\n\n        $scope.steps.sendReferencedSteps = sendReferencedSteps;\n        $scope.steps.sendDeferredSteps = sendDeferredSteps;\n        $scope.steps.sendSecretSteps = sendSecretSteps;\n        $scope.steps.claimSecretSteps = claimSecretSteps;\n\n\n    }]);\n\nangular.module('account').controller('ControlApproveCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', '$compile', '$uibModal',\n        '$q', 'AlertService', 'alertConfig', 'CryptoService', '$state', '$rootScope', 'multiStepFormScope',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, $compile, $uibModal,\n                  $q, AlertService, alertConfig, CryptoService, $state, $rootScope, multiStepFormScope) {\n\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                $scope.transaction = data.approve.transaction;\n                $scope.fullhash = data.approve.fullHash;\n                $scope.sender = data.approve.senderRS;\n                $scope.recipient = data.approve.recipientRS;\n                $scope.amount = data.approve.amountTQT;\n                $scope.timestamp = data.approve.timestamp;\n                $scope.type = data.approve.type;\n                $scope.subtype = data.approve.subtype;\n                $scope.transaction = data.approve.transaction;\n                $scope.setApproveTransaction = {};\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.confirmControlledTransaction = function () {\n\n                var secret = $scope.setApproveTransaction.secretPhrase;\n                var fullhash = $scope.fullhash;\n                var fee = 1;\n\n                var accountPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n                var secretPhraseHex;\n\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                $scope.controlApprovePromise=AccountService.approveTransactions(accountPublicKey, fullhash, fee).then(function (success) {\n\n                    if (!success.errorCode) {\n                        var unsignedBytes = success.unsignedTransactionBytes;\n                        var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                        $scope.transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                        $scope.transactionJSON = success.transactionJSON;\n                        $scope.validBytes = true;\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.controlApproveModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.controlApproveModalAlert);\n                });\n\n                $scope.broadcastTransaction = function (transactionBytes) {\n                    $scope.controlApprovePromise=AccountService.broadcastTransaction(transactionBytes).then(function (success) {\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with id : ' + success.transaction\n                                });\n\n                            $scope.$emit('close-modal');\n                            // $state.go('client.signedin.account.pending');\n                            $rootScope.$broadcast('reload-dashboard');\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason : ' + success.errorDescription\n                                });\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.controlApproveModalAlert);\n                    });\n                };\n            };\n        }]);\n\nangular.module('account').controller('ControlAccountCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', '$compile', '$uibModal',\n        '$q', 'AlertService', 'alertConfig', 'CryptoService', '$state', '$rootScope',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, $compile, $uibModal,\n                  $q, AlertService, alertConfig, CryptoService, $state, $rootScope) {\n\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.sendTokenForm.recipientRS = result.accountRS;\n                });\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n\n        }]);\n\nangular.module('account').controller('ControlAssetCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', '$compile', '$uibModal',\n        '$q', 'AlertService', 'alertConfig', 'CryptoService', '$state', '$rootScope',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, $compile, $uibModal,\n                  $q, AlertService, alertConfig, CryptoService, $state, $rootScope) {\n\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n\n        }]);\n\nangular.module('account').controller('ControlCurrencyCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', '$compile', '$uibModal',\n        '$q', 'AlertService', 'alertConfig', 'CryptoService', '$state', '$rootScope',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, $compile, $uibModal,\n                  $q, AlertService, alertConfig, CryptoService, $state, $rootScope) {\n\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n\n        }]);\n\nangular.module('account').controller('SendDeferredController',\n    ['$scope', 'AccountService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'amountToQuantFilter', 'CurrenciesService', 'OptionsService',\n        function ($scope, AccountService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, amountToQuantFilter, CurrenciesService, OptionsService) {\n\n            $scope.sendDeferredForm = angular.copy(multiStepFormScope.sendDeferredForm);\n            $scope.validForm = false;\n            $scope.validBytes = false;\n            $scope.hasPublicKeyAdded = false;\n            $scope.hasMessageAdded = false;\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.sendDeferredForm = angular.copy($scope.sendDeferredForm);\n            });\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data || {};\n                if (data.recipient) {\n                    $scope.sendDeferredForm.recipientRS = data.recipient;\n                }\n            };\n\n            $scope.getBlockChainStatus = function () {\n                CurrenciesService.getBlockChainStatus().then(function (success) {\n                    $scope.sendDeferredForm.currentHeight = success.numberOfBlocks;\n                });\n            };\n\n            $scope.deferredHeight = 1440;\n            $scope.days = 1;\n\n            $scope.increment = function () {\n                if ($scope.deferredHeight >= 14400) {\n                    $scope.deferredHeight = 14400;\n                    return;\n                } else {\n                    $scope.deferredHeight = $scope.deferredHeight + 1440;\n                }\n\n                $scope.sendDeferredForm.deferredHeight = $scope.deferredHeight;\n                $scope.days = parseInt($scope.deferredHeight / 1440);\n            };\n\n            $scope.decrement = function () {\n                if ($scope.deferredHeight <= 1440) {\n                    $scope.deferredHeight = 1440;\n                    return;\n                } else {\n                    $scope.deferredHeight = $scope.deferredHeight - 1440;\n                }\n\n                $scope.sendDeferredForm.deferredHeight = $scope.deferredHeight;\n                $scope.days = parseInt($scope.deferredHeight / 1440);\n            };\n\n            $scope.max = function () {\n                $scope.deferredHeight = 14400;\n                $scope.sendDeferredForm.deferredHeight = 14400;\n\n                $scope.days = parseInt($scope.deferredHeight / 1440);\n\n            };\n\n            $scope.min = function () {\n                $scope.deferredHeight = 1440;\n                $scope.sendDeferredForm.deferredHeight = 1440;\n                $scope.days = parseInt($scope.deferredHeight / 1440);\n            };\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.sendDeferredForm.recipientRS = result.accountRS;\n                });\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            var createAndSignTransaction = function (transactionOptions, secretPhraseHex) {\n                $scope.sendDeferedPromise=AccountService.createPhasedTransaction(\n                    transactionOptions\n                ).then(function (success) {\n                    if (!success.errorCode) {\n\n                        var unsignedBytes = success.unsignedTransactionBytes;\n                        var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                        var transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                        $scope.transactionBytes = transactionBytes;\n                        $scope.validBytes = true;\n\n                        $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                        $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                        $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                        return transactionBytes;\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.sendTokenModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendTokenModalAlert);\n                });\n            };\n\n            $scope.getAndVerifyAccount = function (sendTokenForm) {\n\n                var sendForm = multiStepFormScope.sendDeferredForm;\n\n                var recipientRS = sendForm.recipientRS;\n                var amount = amountToQuantFilter(sendForm.amount);\n                var fee = 1; //sendForm.fee;\n                var secret = sendForm.secretPhrase;\n\n                var message = sendForm.message;\n                var pubkey = sendForm.pubkey;\n\n                var cuurHeight = parseInt(sendForm.currentHeight);\n                var defOffset = parseInt(sendForm.deferredHeight);\n                var deferredBlocks = cuurHeight + defOffset;\n\n                var hasPublicKeyAdded = false;\n                var hasMessageAdded = false;\n                var hasSecretAdded = false;\n\n                if (pubkey && pubkey.length > 0) {\n                    hasPublicKeyAdded = true;\n                }\n                if (message && message.length > 0) {\n                    hasMessageAdded = true;\n                }\n                if (secret && secret.length > 0) {\n                    hasSecretAdded = true;\n                }\n\n                if (!fee) {\n                    fee = 1;\n                }\n\n                $scope.hasPublicKeyAdded = hasPublicKeyAdded;\n                $scope.hasMessageAdded = hasMessageAdded;\n\n                var senderPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n                var secretPhraseHex;\n                if (hasSecretAdded) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                $scope.sendDeferedPromise=AccountService.getAccountDetails(recipientRS).then(function (success) {\n\n                    var recipientPublicKey = success.publicKey;\n\n                    if (!recipientPublicKey && hasPublicKeyAdded) {\n                        recipientPublicKey = pubkey;\n                    }\n\n                    if (!success.errorCode || success.errorCode === 5) {\n\n                        $scope.accountDetails = success;\n\n                        if (!recipientPublicKey && !hasPublicKeyAdded && hasMessageAdded) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: This account has no visible public key because it never had any outbound transaction. Encrypted messages are not available without a public key. Ask the account holder for his public key and add the key on the former page to this transaction.'\n                                }, alertConfig.sendTokenModalAlert\n                            );\n                            return;\n                        }\n\n                        if (!recipientPublicKey && !hasPublicKeyAdded) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'info',\n                                    msg: 'Note: This account never had an outbound transaction. Make sure this account is the right one. In doubt, ask the account holder for his public key and add it on the former page to this transaction.'\n                                }, alertConfig.sendTokenModalAlert\n                            );\n                        }\n\n                        var encrypted = {data: '', nonce: ''};\n                        if (hasMessageAdded) {\n                            if (!recipientPublicKey) {\n                                recipientPublicKey = pubkey;\n                            }\n                            encrypted = CryptoService.encryptMessage(message, secretPhraseHex, recipientPublicKey);\n                            $scope.encrypted = JSON.stringify(encrypted);\n                        } else {\n                            $scope.encrypted = encrypted;\n                        }\n\n                        var transactionOptions = {\n                            'requestType': 'sendToken',\n                            'publicKey': senderPublicKey,\n                            'recipient': recipientRS,\n                            'amountTQT': amount,\n                            'feeTQT': fee,\n                            'deadline': OptionsService.getOption('DEADLINE'), // $rootScope.options.DEADLINE,\n                            'broadcast': false,\n                            'recipientPublicKey': recipientPublicKey,\n\n                            'messageToEncryptIsText': 'true',\n                            'compressMessageToEncrypt': 'true',\n                            'encryptedMessageIsPrunable': false,\n                            'encryptedMessageData': encrypted.data,\n                            'encryptedMessageNonce': encrypted.nonce,\n\n                            'phased': true,\n                            'phasingFinishHeight': deferredBlocks,\n                            'phasingVotingModel': -1,\n                            'phasingQuorum': 0,\n\n                            'phasingMinBalance': 0,\n                            'phasingMinBalanceModel': 0,\n                            'phasingHolding': null,\n                            'phasingLinkedFullHash': null,\n                            'phasingHashedSecret': null,\n                            'phasingHashedSecretAlgorithm': null\n\n\n                        };\n\n                        createAndSignTransaction(transactionOptions, secretPhraseHex);\n\n                        if ($scope.encrypted.data === '') {\n                            $scope.encrypted = '';\n                        }\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.sendTokenModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendTokenModalAlert);\n                });\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.sendDeferedPromise=AccountService.broadcastTransaction(transactionBytes).then(function (success) {\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n                        $scope.$emit('close-modal');\n                        // $state.go('client.signedin.account.pending');\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendTokenModalAlert);\n                });\n            };\n\n        }]);\n\nangular.module('account').controller('SendReferencedController',\n    ['$scope', 'AccountService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'amountToQuantFilter', 'CurrenciesService', 'OptionsService',\n        function ($scope, AccountService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, amountToQuantFilter, CurrenciesService, OptionsService) {\n\n            $scope.sendReferencedForm = angular.copy(multiStepFormScope.sendReferencedForm);\n            $scope.validForm = false;\n            $scope.validBytes = false;\n            $scope.hasPublicKeyAdded = false;\n            $scope.hasMessageAdded = false;\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.sendReferencedForm = angular.copy($scope.sendReferencedForm);\n            });\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data || {};\n                if (data.recipient) {\n                    $scope.sendReferencedForm.recipientRS = data.recipient;\n                }\n            };\n\n            $scope.getBlockChainStatus = function () {\n                CurrenciesService.getBlockChainStatus().then(function (success) {\n                    $scope.sendReferencedForm.currentHeight = success.numberOfBlocks;\n                });\n            };\n\n            $scope.deferredHeight = 1440;\n            $scope.days = 1;\n\n            $scope.increment = function () {\n                if ($scope.deferredHeight >= 14400) {\n                    $scope.deferredHeight = 14400;\n                    return;\n                } else {\n                    $scope.deferredHeight = $scope.deferredHeight + 1440;\n                }\n\n                $scope.sendReferencedForm.deferredHeight = $scope.deferredHeight;\n                $scope.days = parseInt($scope.deferredHeight / 1440);\n            };\n\n            $scope.decrement = function () {\n                if ($scope.deferredHeight <= 1440) {\n                    $scope.deferredHeight = 1440;\n                    return;\n                } else {\n                    $scope.deferredHeight = $scope.deferredHeight - 1440;\n                }\n\n                $scope.sendReferencedForm.deferredHeight = $scope.deferredHeight;\n                $scope.days = parseInt($scope.deferredHeight / 1440);\n            };\n\n            $scope.max = function () {\n                $scope.deferredHeight = 14400;\n                $scope.sendReferencedForm.deferredHeight = 14400;\n\n                $scope.days = parseInt($scope.deferredHeight / 1440);\n\n            };\n\n            $scope.min = function () {\n                $scope.deferredHeight = 1440;\n                $scope.sendReferencedForm.deferredHeight = 1440;\n                $scope.days = parseInt($scope.deferredHeight / 1440);\n            };\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.sendReferencedForm.recipientRS = result.accountRS;\n                });\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            var createAndSignTransaction = function (transactionOptions, secretPhraseHex) {\n                $scope.sendReferencePromise=AccountService.createPhasedTransaction(\n                    transactionOptions\n                ).then(function (success) {\n                    if (!success.errorCode) {\n\n                        var unsignedBytes = success.unsignedTransactionBytes;\n                        var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                        var transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                        $scope.transactionBytes = transactionBytes;\n                        $scope.validBytes = true;\n\n                        $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                        $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                        $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                        return transactionBytes;\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.sendTokenModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendTokenModalAlert);\n                });\n            };\n\n            $scope.getAndVerifyAccount = function (sendTokenForm) {\n\n                var sendForm = multiStepFormScope.sendReferencedForm;\n\n                var recipientRS = sendForm.recipientRS;\n                var amount = amountToQuantFilter(sendForm.amount);\n                var fee = 1;\n                var secret = sendForm.secretPhrase;\n\n                var fullHash = sendForm.fullHash;\n\n                var message = sendForm.message;\n                var pubkey = sendForm.pubkey;\n\n                var cuurHeight = parseInt(sendForm.currentHeight);\n                var defOffset = parseInt(sendForm.deferredHeight);\n                var deferredBlocks = cuurHeight + defOffset;\n\n                var hasPublicKeyAdded = false;\n                var hasMessageAdded = false;\n                var hasSecretAdded = false;\n\n                if (pubkey && pubkey.length > 0) {\n                    hasPublicKeyAdded = true;\n                }\n                if (message && message.length > 0) {\n                    hasMessageAdded = true;\n                }\n                if (secret && secret.length > 0) {\n                    hasSecretAdded = true;\n                }\n\n                if (!fee) {\n                    fee = 1;\n                }\n\n                $scope.hasPublicKeyAdded = hasPublicKeyAdded;\n                $scope.hasMessageAdded = hasMessageAdded;\n\n                var senderPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n                var secretPhraseHex;\n                if (hasSecretAdded) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                $scope.sendReferencePromise=AccountService.getAccountDetails(recipientRS).then(function (success) {\n\n                    var recipientPublicKey = success.publicKey;\n\n                    if (!recipientPublicKey && hasPublicKeyAdded) {\n                        recipientPublicKey = pubkey;\n                    }\n\n                    if (!success.errorCode || success.errorCode === 5) {\n\n                        $scope.accountDetails = success;\n\n                        if (!recipientPublicKey && !hasPublicKeyAdded && hasMessageAdded) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: This account has no visible public key because it never had any outbound transaction. Encrypted messages are not available without a public key. Ask the account holder for his public key and add the key on the former page to this transaction'\n                                }, alertConfig.sendTokenModalAlert\n                            );\n                            return;\n                        }\n\n                        if (!recipientPublicKey && !hasPublicKeyAdded) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'info',\n                                    msg: 'Note: This account never had an outbound transaction. Make sure this account is the right one. In doubt, ask the account holder for his public key and add it on the former page to this transaction.'\n                                }, alertConfig.sendTokenModalAlert\n                            );\n                        }\n\n                        var encrypted = {data: '', nonce: ''};\n                        if (hasMessageAdded) {\n                            if (!recipientPublicKey) {\n                                recipientPublicKey = pubkey;\n                            }\n                            encrypted = CryptoService.encryptMessage(message, secretPhraseHex, recipientPublicKey);\n                            $scope.encrypted = JSON.stringify(encrypted);\n                        } else {\n                            $scope.encrypted = encrypted;\n                        }\n\n                        var transactionOptions = {\n                            'requestType': 'sendToken',\n                            'publicKey': senderPublicKey,\n                            'recipient': recipientRS,\n                            'amountTQT': amount,\n                            'feeTQT': fee,\n                            'deadline': OptionsService.getOption('DEADLINE'),\n                            'broadcast': false,\n                            'recipientPublicKey': recipientPublicKey,\n\n                            'messageToEncryptIsText': 'true',\n                            'compressMessageToEncrypt': 'true',\n                            'encryptedMessageIsPrunable': false,\n                            'encryptedMessageData': encrypted.data,\n                            'encryptedMessageNonce': encrypted.nonce,\n\n                            'phased': true,\n                            'phasingFinishHeight': deferredBlocks,\n                            'phasingVotingModel': 4,\n                            'phasingQuorum': 1,\n\n                            'phasingMinBalance': 0,\n                            'phasingMinBalanceModel': 0,\n                            'phasingHolding': null,\n                            'phasingLinkedFullHash': fullHash,\n                            'phasingHashedSecret': null,\n                            'phasingHashedSecretAlgorithm': null\n\n                        };\n\n                        createAndSignTransaction(transactionOptions, secretPhraseHex);\n\n                        if ($scope.encrypted.data === '') {\n                            $scope.encrypted = '';\n                        }\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.sendTokenModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendTokenModalAlert);\n                });\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.sendReferencePromise=AccountService.broadcastTransaction(transactionBytes).then(function (success) {\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n                        $scope.$emit('close-modal');\n                        // $state.go('client.signedin.account.pending');\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendTokenModalAlert);\n                });\n            };\n\n        }]);\n\nangular.module('account').controller('SendSecretController',\n    ['$scope', 'AccountService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'amountToQuantFilter', 'CurrenciesService', 'OptionsService',\n        function ($scope, AccountService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, amountToQuantFilter, CurrenciesService, OptionsService) {\n\n            $scope.sendSecretForm = angular.copy(multiStepFormScope.sendSecretForm);\n            $scope.validForm = false;\n            $scope.validBytes = false;\n            $scope.hasPublicKeyAdded = false;\n            $scope.hasMessageAdded = false;\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.sendSecretForm = angular.copy($scope.sendSecretForm);\n            });\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data || {};\n                if (data.recipient) {\n                    $scope.sendSecretForm.recipientRS = data.recipient;\n                }\n            };\n\n            $scope.getBlockChainStatus = function () {\n                CurrenciesService.getBlockChainStatus().then(function (success) {\n                    $scope.sendSecretForm.currentHeight = success.numberOfBlocks;\n                });\n            };\n\n            $scope.deferredHeight = 1440;\n            $scope.days = 1;\n\n            $scope.increment = function () {\n                if ($scope.deferredHeight >= 14400) {\n                    $scope.deferredHeight = 14400;\n                    return;\n                } else {\n                    $scope.deferredHeight = $scope.deferredHeight + 1440;\n                }\n\n                $scope.sendSecretForm.deferredHeight = $scope.deferredHeight;\n                $scope.days = parseInt($scope.deferredHeight / 1440);\n            };\n\n            $scope.decrement = function () {\n                if ($scope.deferredHeight <= 1440) {\n                    $scope.deferredHeight = 1440;\n                    return;\n                } else {\n                    $scope.deferredHeight = $scope.deferredHeight - 1440;\n                }\n\n                $scope.sendSecretForm.deferredHeight = $scope.deferredHeight;\n                $scope.days = parseInt($scope.deferredHeight / 1440);\n            };\n\n            $scope.max = function () {\n                $scope.deferredHeight = 14400;\n                $scope.sendSecretForm.deferredHeight = 14400;\n\n                $scope.days = parseInt($scope.deferredHeight / 1440);\n\n            };\n\n            $scope.min = function () {\n                $scope.deferredHeight = 1440;\n                $scope.sendSecretForm.deferredHeight = 1440;\n                $scope.days = parseInt($scope.deferredHeight / 1440);\n            };\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.sendSecretForm.recipientRS = result.accountRS;\n                });\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            var createAndSignTransaction = function (transactionOptions, secretPhraseHex) {\n                $scope.sendSecretPromise=AccountService.createPhasedTransaction(\n                    transactionOptions\n                ).then(function (success) {\n                    if (!success.errorCode) {\n\n                        var unsignedBytes = success.unsignedTransactionBytes;\n                        var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                        var transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                        $scope.transactionBytes = transactionBytes;\n                        $scope.validBytes = true;\n\n                        $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                        $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                        $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                        return transactionBytes;\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.sendTokenModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendTokenModalAlert);\n                });\n            };\n\n            $scope.getAndVerifyAccount = function (sendTokenForm) {\n\n                var sendForm = multiStepFormScope.sendSecretForm;\n\n                var recipientRS = sendForm.recipientRS;\n                var amount = amountToQuantFilter(sendForm.amount);\n                var fee = 1;\n                var secret = sendForm.secretPhrase;\n\n                var secretHash = sendForm.secretHash;\n\n                var message = sendForm.message;\n                var pubkey = sendForm.pubkey;\n\n                var cuurHeight = parseInt(sendForm.currentHeight);\n                var defOffset = parseInt(sendForm.deferredHeight);\n                var deferredBlocks = cuurHeight + defOffset;\n\n                var hasPublicKeyAdded = false;\n                var hasMessageAdded = false;\n                var hasSecretAdded = false;\n\n                if (pubkey && pubkey.length > 0) {\n                    hasPublicKeyAdded = true;\n                }\n                if (message && message.length > 0) {\n                    hasMessageAdded = true;\n                }\n                if (secret && secret.length > 0) {\n                    hasSecretAdded = true;\n                }\n\n                if (!fee) {\n                    fee = 1;\n                }\n\n                $scope.hasPublicKeyAdded = hasPublicKeyAdded;\n                $scope.hasMessageAdded = hasMessageAdded;\n\n                var senderPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n                var secretPhraseHex;\n                if (hasSecretAdded) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                $scope.sendSecretPromise=AccountService.getAccountDetails(recipientRS).then(function (success) {\n\n                    var recipientPublicKey = success.publicKey;\n\n                    if (!recipientPublicKey && hasPublicKeyAdded) {\n                        recipientPublicKey = pubkey;\n                    }\n\n                    if (!success.errorCode || success.errorCode === 5) {\n\n                        $scope.accountDetails = success;\n\n                        if (!recipientPublicKey && !hasPublicKeyAdded && hasMessageAdded) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: This account has no visible public key because it never had any outbound transaction. Encrypted messages are not available without a public key. Ask the account holder for his public key and add the key on the former page to this transaction'\n                                }, alertConfig.sendTokenModalAlert\n                            );\n                            return;\n                        }\n\n                        if (!recipientPublicKey && !hasPublicKeyAdded) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'info',\n                                    msg: 'Note: This account never had an outbound transaction. Make sure this account is the right one. In doubt, ask the account holder for his public key and add it on the former page to this transaction.'\n                                }, alertConfig.sendTokenModalAlert\n                            );\n                        }\n\n                        var encrypted = {data: '', nonce: ''};\n                        if (hasMessageAdded) {\n                            if (!recipientPublicKey) {\n                                recipientPublicKey = pubkey;\n                            }\n                            encrypted = CryptoService.encryptMessage(message, secretPhraseHex, recipientPublicKey);\n                            $scope.encrypted = JSON.stringify(encrypted);\n                        } else {\n                            $scope.encrypted = encrypted;\n                        }\n\n                        var transactionOptions = {\n                            'requestType': 'sendToken',\n                            'publicKey': senderPublicKey,\n                            'recipient': recipientRS,\n                            'amountTQT': amount,\n                            'feeTQT': fee,\n                            'deadline': OptionsService.getOption('DEADLINE'), \n                            'broadcast': false,\n                            'recipientPublicKey': recipientPublicKey,\n\n                            'messageToEncryptIsText': 'true',\n                            'compressMessageToEncrypt': 'true',\n                            'encryptedMessageIsPrunable': false,\n                            'encryptedMessageData': encrypted.data,\n                            'encryptedMessageNonce': encrypted.nonce,\n\n                            'phased': true,\n                            'phasingFinishHeight': deferredBlocks,\n                            'phasingVotingModel': 5,\n                            'phasingQuorum': 1,\n\n                            'phasingMinBalance': 0,\n                            'phasingMinBalanceModel': 0,\n                            'phasingHolding': null,\n                            'phasingLinkedFullHash': null,\n                            'phasingHashedSecret': secretHash,\n                            'phasingHashedSecretAlgorithm': 2\n\n                        };\n\n                        createAndSignTransaction(transactionOptions, secretPhraseHex);\n\n                        if ($scope.encrypted.data === '') {\n                            $scope.encrypted = '';\n                        }\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.sendTokenModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendTokenModalAlert);\n                });\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.sendSecretPromise=AccountService.broadcastTransaction(transactionBytes).then(function (success) {\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n                        $scope.$emit('close-modal');\n                        //  $state.go('client.signedin.account.pending');\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.deleteCurrencyModalAlert);\n                });\n            };\n\n        }]);\n\nangular.module('account').controller('ClaimSecretController',\n    ['$scope', 'AccountService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'amountToQuantFilter', 'CurrenciesService',\n        function ($scope, AccountService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, amountToQuantFilter, CurrenciesService) {\n\n            $scope.validBytes = false;\n\n            $scope.claimSeceretForm = {};\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.confirmControlledTransaction = function (fullHash, secretText) {\n\n                var fee = 1;\n\n                var accountPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n                var secretPhraseHex = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n\n                $scope.claimSecretPromise=AccountService.approveTransactions(accountPublicKey, fullHash, fee, secretText)\n                    .then(function (success) {\n\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                            $scope.transactionJSON = success.transactionJSON;\n                            $scope.validBytes = true;\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.claimSecretTransaction\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.claimSecretTransaction);\n                    });\n\n                $scope.broadcastTransaction = function (transactionBytes) {\n                    $scope.claimSecretPromise= AccountService.broadcastTransaction(transactionBytes).then(function (success) {\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with id : ' + success.transaction\n                                });\n\n                            $scope.$emit('close-modal');\n                            //$state.go('client.signedin.account.pending');\n                            $rootScope.$broadcast('reload-dashboard');\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason : ' + success.errorDescription\n                                });\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.claimSecretTransaction);\n                    });\n                };\n            };\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('account').controller('SetAccountControlCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', '$compile', '$uibModal',\n        '$q', 'AlertService', 'alertConfig', 'CryptoService', '$state', '$rootScope', 'multiStepFormScope',\n        'CommonsService', '$validation',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, $compile, $uibModal,\n                  $q, AlertService, alertConfig, CryptoService, $state, $rootScope, multiStepFormScope,\n                  CommonsService, $validation) {\n\n            $scope.setAccountControlForm = angular.copy(multiStepFormScope.setAccountControlForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.setAccountControlForm = angular.copy($scope.setAccountControlForm);\n            });\n\n            $scope.addNewAccount = function () {\n                $scope.setAccountControlForm.approveAccounts = $scope.setAccountControlForm.approveAccounts || [];\n                var form = $scope.setAccountControlForm;\n                if (form.approveAccounts.length >= 10) {\n                    AlertService.addAlert(\n                        {\n                            type: 'danger',\n                            msg: 'You can add only maximum 10 accounts.'\n                        }, alertConfig.setAccountControlModalAlert\n                    );\n                } else {\n                    form.approveAccounts.push({});\n                }\n\n            };\n\n            $scope.nextStep = function () {\n                if (validateForm()) {\n\n                    $scope.foo = $scope.setAccountControlForm.approveAccounts[0];\n\n                    $scope.$nextStep();\n                } else {\n                    AlertService.addAlert(\n                        {\n                            type: 'danger',\n                            msg: 'This control setup is not valid, please check quorum and number of approval accounts.'\n                        }, alertConfig.setAccountControlModalAlert);\n                }\n            };\n\n            function validateForm() {\n                var form = $scope.setAccountControlForm;\n                var quorum = form.quorum || 2;\n                var totalAccounts = form.approveAccounts || [];\n                if (totalAccounts.length > quorum) {\n                    var totalLength = totalAccounts.length;\n                    var totalValid = 0;\n                    for (var i = 0; i < totalLength; i++) {\n                        if (totalAccounts[i].value) {\n                            totalValid++;\n                        }\n                    }\n\n                    return totalValid > quorum;\n                }\n                return false;\n            }\n\n            $scope.openAddressBookModal = function (account) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    account.value = result.accountRS;\n                });\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.setAccountControl = function () {\n                var setAccountControlForm = multiStepFormScope.setAccountControlForm;\n                var quorum = setAccountControlForm.quorum;\n                var accounts = setAccountControlForm.approveAccounts;\n                for (var i = 0; i < accounts.length; i++) {\n                    accounts[i] = accounts[i].value;\n                }\n\n                var fee = 1;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = setAccountControlForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                $scope.setAccountControlPromise = AccountService.setAccountControl(publicKey, quorum, accounts, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.setAccountControlModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.setAccountControlModalAlert);\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.setAccountControlPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with id : ' + success.transaction\n                                });\n\n                            $scope.$emit('close-modal');\n                            // $state.go('client.signedin.account.pending');\n                            $rootScope.$broadcast('reload-dashboard');\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason : ' + success.errorDescription\n                                });\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.setAccountControlModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('account').controller('RemoveAccountControlCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', '$compile', '$uibModal', 'controlConfig',\n        '$q', 'AlertService', 'alertConfig', 'CryptoService', '$state', '$rootScope', 'multiStepFormScope',\n        'CommonsService',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, $compile, $uibModal, controlConfig,\n                  $q, AlertService, alertConfig, CryptoService, $state, $rootScope, multiStepFormScope,\n                  CommonsService) {\n\n            $scope.removeAccountControlForm = angular.copy(multiStepFormScope.removeAccountControlForm);\n\n            $scope.$on('$destroy', function () {\n                try { $scope.removeAccountControlForm.jsonControl = $scope.jsonControl; } catch (e) {}\n                multiStepFormScope.removeAccountControlForm = angular.copy($scope.removeAccountControlForm);\n            });\n\n            $scope.initStep1 = function () {\n\n              $scope.removeAccountControlForm = {};\n\n                $scope.jsonControl =\n                    SessionStorageService.getFromSession(controlConfig.SESSION_ACCOUNT_CONTROL_JSONCONTROL_KEY);\n\n                $scope.removeAccountControlForm.jsonControl = $scope.jsonControl;\n\n            };\n\n            $scope.removeAccountControl = function () {\n                var removeAccountControlForm = multiStepFormScope.removeAccountControlForm;\n                var fee = 1;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = removeAccountControlForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                $scope.removeAccountControlPromise=AccountService.removeAccountControl(publicKey, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                                $scope.validBytes = true;\n                                $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.controlRemoveModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.controlRemoveModalAlert);\n                    });\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.removeAccountControlPromise=CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with id : ' + success.transaction\n                            });\n\n                        $scope.$emit('close-modal');\n                        // $state.go('client.signedin.account.pending');\n                        $rootScope.$broadcast('reload-dashboard');\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason : ' + success.errorDescription\n                            });\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.controlRemoveModalAlert);\n                });\n            };\n\n\n        }]);\n\nangular.module('account')\n       .directive('activationDirective', ['AccountService', 'TransactionService', '$q', '$compile',\n           function (AccountService, TransactionService, $q, $compile) {\n\n               function link(scope, element, attrs) {\n\n                   getActivationAndCurrentHeights(attrs.name, element);\n\n                   function getActivationAndCurrentHeights(name, element) {\n                       var heightPromise = TransactionService.getBlockChainStatus();\n                       var activationHeightPromise = AccountService.getActivationHeights(name);\n                       $q.all([heightPromise, activationHeightPromise]).then(function (response) {\n                           var currentHeight = response[0].numberOfBlocks;\n                           var activationHeight = response[1][name] || Number.MAX_VALUE;\n                           scope.activationHeight = activationHeight;\n                           scope.currentHeight = currentHeight;\n                           // scope.activationHeight = 0;\n                           // scope.currentHeight = Number.MAX_VALUE;\n                       }, function (error) {\n                           scope.activationHeight = 0;\n                           scope.currentHeight = Number.MAX_VALUE;\n                       }).finally(function () {\n                           disableElement(element);\n                       });\n                   }\n\n                   function disableElement(element) {\n                       var isElementDisabled = (attrs.height || scope.activationHeight) > scope.currentHeight;\n                       element.attr('disabled', isElementDisabled);\n                       if (isElementDisabled) {\n                           element.addClass('disabled');\n                       }\n                       $compile(element.contents())(scope);\n                   }\n               }\n\n\n               return {\n                   link: link\n               };\n\n           }]);\n\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('account').controller('WelcomeFaucetFormCtrl',\n    ['$scope', 'FaucetService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', 'FeeService', 'multiStepFormScope', '$rootScope', 'CommonsService',\n        function ($scope, FaucetService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, FeeService, multiStepFormScope, $rootScope, CommonsService) {\n\n            $scope.publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n            $scope.accountRs = CommonsService.getAccountDetailsFromSession('accountRs');\n\n            $scope.makeWelcomFaucetCall = function (form) {\n                var email = form.email;\n                FaucetService.welcomeFaucetCall(email, $scope.publicKey, $scope.accountRs).then(function (success) {\n                    $scope.$emit('close-modal');\n                }, function (error) {\n                    AlertService.addAlert(\n                        {\n                            type: 'danger',\n                            msg: 'Unable to add new user'\n                        }, alertConfig.welcomeFaucetModalAlert\n                    );\n                });\n            };\n\n            $scope.closeForm=function(){\n                $scope.$emit('close-modal');\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('poll',\n    ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node', 'assets', 'currencies','options']);\n\nangular.module('poll').constant('pollConfig', {\n    'pollEndPoint': 'api'\n});\n\nangular.module('poll').config(['RestangularProvider', 'pollConfig', '$stateProvider', '$urlRouterProvider',\n    function (RestangularProvider, pollConfig, $stateProvider, $urlRouterProvider) {\n\n        RestangularProvider.setRestangularFields({\n            options: '_options'\n        });\n\n        $stateProvider.state('client.signedin.polls', {\n            url: '^/polls',\n            templateUrl: './polls/views/main.html',\n            abstract: true,\n        }).state('client.signedin.polls.polls', {\n            url: '^/polls/polls',\n            templateUrl: './polls/views/polls.html',\n            controller: 'PollsCtrl',\n        }).state('client.signedin.polls.mypolls', {\n            url: '^/polls/polls',\n            templateUrl: './polls/views/mypolls.html',\n            controller: 'MyPollsCtrl',\n        });\n\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('poll').service('PollService',\n    ['nodeConfig', 'SessionStorageService', 'NodeService', 'baseConfig', 'pollConfig', 'Restangular',\n        'TransactionService', '$rootScope', 'OptionsService', 'controlConfig',\n        function (nodeConfig, SessionStorageService, NodeService, baseConfig, pollConfig, Restangular,\n                  TransactionService, $rootScope, OptionsService, controlConfig) {\n\n            this.getPolls = function (firstIndex, lastIndex, includeFinished) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAllPolls',\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeFinished': includeFinished\n                };\n                return Restangular.all(pollConfig.pollEndPoint).customGET('', params);\n\n            };\n\n            this.getAccountPolls = function (account, firstIndex, lastIndex, includeFinished) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getPolls',\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeFinished': includeFinished\n                };\n                return Restangular.all(pollConfig.pollEndPoint).customGET('', params);\n            };\n\n            this.getPoll = function (poll) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getPoll',\n                    'poll': poll\n                };\n                return Restangular.all(pollConfig.pollEndPoint).customGET('', params);\n            };\n\n            this.getPollData = function (pollId) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getPollResult',\n                    'poll': pollId\n                };\n                return Restangular.all(pollConfig.pollEndPoint).customGET('', params);\n            };\n\n            this.searchPolls = function (query, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'searchPolls',\n                    'query': query,\n                    'includeFinished': true,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n\n                };\n                return TransactionService.createTransaction(params);\n\n                // txservice needed here?\n\n            };\n\n            this.castVote = function (publicKey, pollId, optionNames, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'publicKey': publicKey,\n                    'requestType': 'castVote',\n                    'poll': pollId,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'broadcast': 'false',\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                };\n                for (var i = 0; i < optionNames.length; i++) {\n                    params[optionNames[i]] = '1';\n                }\n                return TransactionService.createTransaction(params);\n            };\n\n            this.getOptionName = getOptionName;\n\n            this.createPoll = function (pollJson) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'createPoll',\n                    'publicKey': pollJson.publicKey,\n                    'name': pollJson.name,\n                    'description': pollJson.description,\n                    'feeTQT': parseInt(pollJson.fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                    'minNumberOfOptions': pollJson.minNumberOfOptions,\n                    'maxNumberOfOptions': pollJson.maxNumberOfOptions,\n                    'minRangeValue': pollJson.minRangeValue,\n                    'maxRangeValue': pollJson.maxRangeValue,\n                    'minBalanceModel': pollJson.minBalanceModel,\n                    'holding': pollJson.holding,\n                    'minBalance': pollJson.minBalance,\n                    'finishHeight': pollJson.finishHeight,\n                    'votingModel': pollJson.votingModel\n                };\n                params = fillOptionsToJson(params, pollJson.options);\n                var hasPhasing = SessionStorageService.getFromSession(\n                    controlConfig.SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY);\n                if (hasPhasing) {\n                    var currentPhasingFinishHeight = $rootScope.options.TX_HEIGHT + pollJson.currentHeight;\n                    if (currentPhasingFinishHeight > parseInt(pollJson.finishHeight)) {\n                        params['phasingFinishHeight'] = parseInt(pollJson.finishHeight) - 1000;\n                    }\n                }\n                return TransactionService.createTransaction(params);\n            };\n\n            this.getPollVotes = function (poll, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getPollVotes',\n                    'poll': poll,\n                    'includeWeights': 'true',\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeFinished': true\n                };\n                return Restangular.all(pollConfig.pollEndPoint).customGET('', params);\n\n            };\n\n            function fillOptionsToJson(pollJson, pollOptions) {\n                var optionString = 'option';\n                if (pollOptions) {\n                    var length = pollOptions.length;\n                    for (var i = 0; i < length; i++) {\n                        pollJson[getOptionName(i)] = pollOptions[i];\n                    }\n                }\n                return pollJson;\n            }\n\n            function getOptionName(number) {\n\n                return number > 9 ? 'option' + number : 'option0' + number;\n\n            }\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('poll').controller('PollsMainCtrl',\n    ['$scope', 'PollService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter',\n        function ($scope, PollService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter) {\n\n            $scope.openCreatePollModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'polls/modals/create-poll-form.html',\n                    size: 'lg',\n                    controller: 'PollsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openPollDetailsModal = function (poll) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'polls/modals/poll.html',\n                    size: 'lg',\n                    controller: 'PollCtrl',\n                    windowClass: 'poll-modal-window',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'pollId': poll,\n                            };\n                        }\n                    }\n\n                });\n            };\n\n            $scope.openPollVotesModal = function (poll) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'polls/modals/poll-votes.html',\n                    size: 'lg',\n                    controller: 'PollVotesCtrl',\n                    windowClass: 'poll-modal-window',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'pollId': poll,\n                            };\n                        }\n                    }\n\n                });\n            };\n\n            $scope.openPollData = function (pollId) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'polls/modals/poll-chart.html',\n                    size: 'sm',\n                    controller: 'PollChartCtrl',\n                    windowClass: 'poll-result-modal-window',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'pollId': pollId,\n                            };\n                        }\n                    }\n\n                });\n            };\n\n            $scope.openCastVoteModal = function (pollId) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'polls/modals/cast-vote-form.html',\n                    size: 'lg',\n                    controller: 'PollsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'pollId': pollId,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openSearchPollModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'polls/modals/search-poll-form.html',\n                    size: 'lg',\n                    controller: 'PollsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n        }]);\n\nangular.module('poll').controller('PollsCtrl',\n    ['$scope', 'PollService', 'DTOptionsBuilder', 'DTColumnBuilder', '$interval', '$uibModal', '$compile',\n        'votingModelFilter', 'amountTQTFilter', 'isEnabledFilter', 'baseConfig', 'searchTermFilter', 'replaceQuotesFilter',\n        'votingModelLabelFilter', 'SessionStorageService', 'pollDaysFilter',\n        function ($scope, PollService, DTOptionsBuilder, DTColumnBuilder, $interval, $uibModal, $compile,\n                  votingModelFilter, amountTQTFilter, isEnabledFilter, baseConfig, searchTermFilter, replaceQuotesFilter,\n                  votingModelLabelFilter, SessionStorageService, pollDaysFilter) {\n\n\n            $scope.includeFinished = true;\n\n            $scope.activePolls = function () {\n                $scope.includeFinished = false;\n                $scope.reloadPolls();\n            };\n\n            $scope.allPolls = function () {\n                $scope.includeFinished = true;\n                $scope.reloadPolls();\n            };\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('polls')\n                .withOption('processing', true)\n                .withOption('ordering', false)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                        PollService.getPolls(data.start, endIndex, $scope.includeFinished).then(function (response) {\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'polls': response.polls\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('poll').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"PollsMainCtrl\"' +\n                            ' ng-click=\"openPollDetailsModal(\\'' + data +\n                            '\\')\"> <i class=\"fa fa-reorder\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                    }),\n\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n                DTColumnBuilder.newColumn('votingModel').withTitle('Model').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return votingModelLabelFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('options').withTitle('Options').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data.length;\n                    }),\n                DTColumnBuilder.newColumn('finished').withTitle('Finished').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return isEnabledFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('finishHeight').withTitle('Height').notSortable(),\n\n                DTColumnBuilder.newColumn('finishHeight').withTitle('Days').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                      var currentHeight = SessionStorageService.getFromSession(baseConfig.SESSION_CURRENT_BLOCK);\n                      var days = 0;\n\n                      if ( currentHeight && currentHeight <  data ) {\n                        days =(parseInt(data) - currentHeight) / 1440;\n                      } else {\n                        days = 0;\n                      }\n\n                      if(days < 0){\n                        days = 0;\n                      }\n\n                      return pollDaysFilter( days.toLocaleString('en-US', {maximumFractionDigits: 2, minimumFractionDigits: 2}));\n                    }),\n\n                DTColumnBuilder.newColumn('poll').withTitle('Actions').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var finished = false;\n\n                        if (row.finished) {\n                            finished = true;\n\n                        }\n\n                        var tt_vote = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Vote\"';\n\n                        var tt_result = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Result\"';\n\n                        var tt_voter = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Voters\"';\n\n                        var cast = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_vote + ' ng-controller=\"PollsMainCtrl\"' +\n                            ' ng-click=\"openCastVoteModal(\\'' + data +\n                            '\\')\" ng-disabled=\"' + finished + '\"> <i class=\"fa fa-signal\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        var chart = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_result + '  ng-controller=\"PollsMainCtrl\"' +\n                            ' ng-click=\"openPollData(\\'' + data +\n                            '\\')\"> <i class=\"fa fa-area-chart\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        var votes = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_voter + ' ng-controller=\"PollsMainCtrl\"' +\n                            ' ng-click=\"openPollVotesModal(\\'' + data +\n                            '\\')\" ng-disabled=\"' + finished + '\"> <i class=\"fa fa-user\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        return chart + '&nbsp;' + cast + '&nbsp;' + votes;\n\n                    }),\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadPolls = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n        }]);\n\nangular.module('poll').controller('MyPollsCtrl',\n    ['$scope', 'PollService', 'DTOptionsBuilder', 'DTColumnBuilder', '$interval', '$uibModal', '$compile',\n        'votingModelFilter', 'amountTQTFilter', 'isEnabledFilter', 'baseConfig', 'CommonsService', 'searchTermFilter',\n        'votingModelLabelFilter', 'pollDaysFilter', 'SessionStorageService',\n        function ($scope, PollService, DTOptionsBuilder, DTColumnBuilder, $interval, $uibModal, $compile,\n                  votingModelFilter, amountTQTFilter, isEnabledFilter, baseConfig, CommonsService, searchTermFilter,\n                  votingModelLabelFilter, pollDaysFilter, SessionStorageService) {\n\n            $scope.includeFinished = true;\n\n            $scope.activePolls = function () {\n                $scope.includeFinished = false;\n                $scope.reloadPolls();\n            };\n\n            $scope.allPolls = function () {\n                $scope.includeFinished = true;\n                $scope.reloadPolls();\n            };\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('serverSide', true)\n                .withDataProp('polls')\n                .withOption('processing', true)\n                .withOption('ordering', false)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    var account = CommonsService.getAccountDetailsFromSession('accountId');\n\n\n\n                    PollService.getAccountPolls(account, data.start, endIndex, $scope.includeFinished).then(\n                        function (response) {\n                            callback({\n                                'iTotalRecords': 1000,\n                                'iTotalDisplayRecords': 1000,\n                                'polls': response.polls\n                            });\n                        });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('poll').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"PollsMainCtrl\"' +\n                            ' ng-click=\"openPollDetailsModal(\\'' + data +\n                            '\\')\"> <i class=\"fa fa-reorder\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n                    }),\n\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('votingModel').withTitle('Model').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return votingModelLabelFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('options').withTitle('Options').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data.length;\n                    }),\n\n                DTColumnBuilder.newColumn('finished').withTitle('Finished').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return isEnabledFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('finishHeight').withTitle('Height').notSortable(),\n\n                DTColumnBuilder.newColumn('finishHeight').withTitle('Days').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                      var currentHeight = SessionStorageService.getFromSession(baseConfig.SESSION_CURRENT_BLOCK);\n                      var days = 0;\n\n                      if ( currentHeight && currentHeight <  data ) {\n                        days =(parseInt(data) - currentHeight) / 1440;\n                      } else {\n                        days = 0;\n                      }\n\n                      if(days < 0){\n                        days = 0;\n                      }\n\n                      return pollDaysFilter( days.toLocaleString('en-US', {maximumFractionDigits: 2, minimumFractionDigits: 2}));\n                    }),\n\n\n\n\n                DTColumnBuilder.newColumn('poll').withTitle('Actions').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var finished = false;\n\n                        if (row.finished) {\n                            finished = true;\n\n                        }\n\n                        var tt_vote = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Vote\"';\n\n                        var tt_result = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Result\"';\n\n                        var tt_voter = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Voters\"';\n\n                        var cast = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_vote + ' ng-controller=\"PollsMainCtrl\"' +\n                            ' ng-click=\"openCastVoteModal(\\'' + data +\n                            '\\')\" ng-disabled=\"' + finished + '\"> <i class=\"fa fa-signal\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        var chart = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_result + ' ng-controller=\"PollsMainCtrl\"' +\n                            ' ng-click=\"openPollData(\\'' + data +\n                            '\\')\"> <i class=\"fa fa-area-chart\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        var votes = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_voter + ' ng-controller=\"PollsMainCtrl\"' +\n                            ' ng-click=\"openPollVotesModal(\\'' + data +\n                            '\\')\" ng-disabled=\"' + finished + '\"> <i class=\"fa fa-user\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        return chart + '&nbsp;' + cast + '&nbsp;' + votes;\n\n                    }),\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadPolls = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n        }]);\n\nangular.module('poll').controller('PollsFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n        var createPollSteps = [\n            {\n                templateUrl: 'polls/modals/create-poll-details.html',\n                title: 'Create Poll Step 1',\n                controller: 'CreatePollFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'polls/modals/create-poll-details-2.html',\n                title: 'Create Poll Step 2',\n                controller: 'CreatePollFormController',\n                isolatedScope: true,\n                data: params,\n            },\n\n            {\n                templateUrl: 'polls/modals/create-poll-confirm.html',\n                title: 'Create Poll Confirmation',\n                controller: 'CreatePollFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var castVoteSteps = [\n            {\n                templateUrl: 'polls/modals/cast-vote-details.html',\n                title: 'Cast Vote Details',\n                controller: 'CastVoteFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'polls/modals/cast-vote-confirm.html',\n                title: 'Cast Vote Confirmation',\n                controller: 'CastVoteFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var searchPollSteps = [\n            {\n                templateUrl: 'polls/modals/search-poll-details.html',\n                title: 'Search Poll Details',\n                controller: 'SearchPollFormCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'polls/modals/search-poll-confirm.html',\n                title: 'Search Poll Results',\n                controller: 'SearchPollFormCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        $scope.steps = {};\n\n        $scope.steps.createPollForm = createPollSteps;\n        $scope.steps.castVoteForm = castVoteSteps;\n        $scope.steps.searchPollForm = searchPollSteps;\n\n    }]);\n\nangular.module('poll').controller('PollCtrl',\n    ['$scope', 'PollService', '$uibModalInstance', 'params',\n        function ($scope, PollService, $uibModalInstance, params) {\n\n            $scope.pollId = params.pollId;\n\n            $scope.loadDetails = function () {\n                PollService.getPoll($scope.pollId).then(function (response) {\n                    $scope.poll = response;\n                });\n            };\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n        }]\n);\n\nangular.module('poll').controller('PollVotesCtrl',\n    ['$scope', 'PollService', 'DTOptionsBuilder', 'DTColumnBuilder', '$interval', '$uibModal', '$compile',\n        'searchTermFilter', '$uibModalInstance', 'params',\n        function ($scope, PollService, DTOptionsBuilder, DTColumnBuilder, $interval, $uibModal, $compile,\n                  searchTermFilter,\n                  $uibModalInstance, params) {\n\n            $scope.pollId = params.pollId;\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('serverSide', true)\n                .withDataProp('votes')\n                .withOption('processing', true)\n                .withOption('ordering', false)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    PollService.getPollVotes($scope.pollId, data.start, endIndex).then(function (response) {\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'votes': response.votes\n                        });\n                    });\n                })\n                .withDisplayLength(5).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('voterRS').withTitle('Voter').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n\n                    }),\n                DTColumnBuilder.newColumn('transaction').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i>' + '</button>';\n                    }),\n            ];\n\n        }]);\n\nangular.module('poll').controller('PollChartCtrl',\n    ['$scope', 'PollService', 'DTOptionsBuilder', 'DTColumnBuilder', '$compile', '$uibModalInstance', 'params',\n        'baseConfig', 'numberStringFilter', '$q',\n        function ($scope, PollService, DTOptionsBuilder, DTColumnBuilder, $compile, $uibModalInstance, params,\n                  baseConfig, numberStringFilter, $q) {\n\n            $scope.pollId = params.pollId;\n\n            $scope.loadPollResults = function () {\n                var pollDetailsPromise = PollService.getPoll($scope.pollId);\n                var pollDataPromise = PollService.getPollData($scope.pollId);\n                $q.all([pollDetailsPromise, pollDataPromise]).then(function (success) {\n                    var pollDetailsResponse = success[0];\n                    var pollDataResponse = success[1];\n\n                    $scope.pollName = pollDetailsResponse.name;\n                    $scope.pollDescription = pollDetailsResponse.description;\n                    $scope.pollResults = pollDataResponse;\n                    $scope.pollLabels = pollDataResponse.options;\n                    var divisor = 1;\n                    if (pollDataResponse.votingModel !== 0) {\n                        divisor = baseConfig.TOKEN_QUANTS;\n                    }\n                    $scope.pollData = getPollData(pollDataResponse.options, pollDataResponse.results,divisor);\n                    $scope.total = sumResults(pollDataResponse.results, divisor);\n                    $scope.pollResultTableDate =\n                        buildPollDataArray(pollDataResponse.options, pollDataResponse.results,\n                            pollDataResponse.votingModel);\n                });\n            };\n\n            function sumResults(results, divisor) {\n                var sum = 0;\n                for (var i = 0; i < results.length; i++) {\n                    sum = sum + (results[i].result / divisor );\n                }\n                return sum;\n            }\n\n            function buildPollDataArray(labels, results, votingModel) {\n\n                var divisor = 1;\n                if (votingModel !== 0) {\n                    divisor = baseConfig.TOKEN_QUANTS;\n                }\n                var finalResults = [];\n                var total = sumResults(results, divisor);\n                for (var i = 0; i < labels.length; i++) {\n                    var result = {};\n                    var pollResult = results[i];\n                    result.optionName = labels[i];\n                    result.result = pollResult.result / divisor || 0;\n                    result.weight = pollResult.weight / divisor;\n\n                    if (total !== 0) {\n                        result.percentage = (result.result * 100) / total;\n                    } else {\n                        result.percentage = 0;\n                    }\n                    finalResults.push(result);\n                }\n                return finalResults;\n            }\n\n\n            function getPollData(labels, results,divisor) {\n                var optionSize = results.length;\n                var resultArray = [];\n                for (var i = 0; i < optionSize; i++) {\n                    var resultObject = {};\n                    resultObject.key = labels[i];\n                    resultObject.value = results[i].result / divisor;\n                    if (!resultObject.value) {\n                        resultObject.value = 0;\n                    }\n                    resultArray[i] = resultObject;\n                }\n                return resultArray;\n            }\n\n            $scope.options = {\n                'chart': {\n                    'type': 'pieChart',\n                    'height': 350,\n                    'showLegend': true,\n                    'noData': 'No Votes',\n                    'margin': {\n                        'top': 30,\n                        'right': 75,\n                        'bottom': 50,\n                        'left': 75\n                    },\n                    'bars': {\n                        'forceY': [\n                            0\n                        ]\n                    },\n                    'bars2': {\n                        'forceY': [\n                            0\n                        ]\n                    },\n  \n                    'xAxis': {\n                        'axisLabel': 'X Axis'\n                    },\n                    'x2Axis': {\n                        'showMaxMin': false\n                    },\n                    'y1Axis': {\n                        'axisLabel': 'Y1 Axis',\n                        'axisLabelDistance': 12\n                    },\n                    'y2Axis': {\n                        'axisLabel': 'Y2 Axis'\n                    },\n                    x: function (d) {\n                        return d.key;\n                    },\n                    y: function (d) {\n                        return d.value;\n                    },\n                    tooltip: {\n                        valueFormatter: function (d) {\n                            return numberStringFilter((d * 100 / $scope.total)) + ' %';\n                        }\n                    }\n\n                }\n            };\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('poll').controller('SearchPollFormCtrl',\n    ['$scope', 'PollService', 'SessionStorageService', '$state', 'DTOptionsBuilder', 'isEnabledFilter',\n        'DTColumnBuilder', 'searchTermFilter', '$compile', 'multiStepFormScope', '$validation', 'supplyFilter',\n        'votingModelFilter', 'amountTQTFilter', '$q',\n        function ($scope, PollService, SessionStorageService, $state, DTOptionsBuilder, isEnabledFilter,\n                  DTColumnBuilder, searchTermFilter, $compile, multiStepFormScope, $validation, supplyFilter,\n                  votingModelFilter, amountTQTFilter, $q) {\n\n            $scope.searchPollForm = {};\n\n            $scope.onSubmit = function () {\n                $validation.validate($scope.searchPollForm);\n                if ($scope.searchPollForm.$valid) {\n                    $scope.$nextStep();\n                }\n            };\n\n            $scope.searchPollForm = angular.copy(multiStepFormScope.searchPollForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.searchPollForm = angular.copy($scope.searchPollForm);\n            });\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('polls')\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var query = $scope.searchPollForm.query;\n                    var nameSearch = PollService.searchPolls(query);\n                    var idSearch = PollService.getPoll(query);\n                    $q.all([nameSearch, idSearch]).then(function (response) {\n                        if (response[1].poll) {\n                            response[0].polls = response[0].polls || [];\n                            response[0].polls.push(response[1]);\n                        }\n                        callback({\n                            'iTotalRecords': response[0].polls.length,\n                            'iTotalDisplayRecords': response[0].polls.length,\n                            'polls': response[0].polls\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('poll').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-sm\" ng-controller=\"PollsMainCtrl\"' +\n                            ' ng-click=\"openPollDetailsModal(\\'' + data +\n                            '\\')\"> <i class=\"fa fa-reorder\" aria-hidden=\"true\"></i> </button>';\n\n                    }),\n\n\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('votingModel').withTitle('Model').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return votingModelFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('finished').withTitle('Finished').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return isEnabledFilter(data);\n                    }),\n\n\n                DTColumnBuilder.newColumn('poll').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var finished = false;\n\n                        if (row.finished) {\n                            finished = true;\n\n                        }\n\n                        var cast = '<button type=\"button\" class=\"btn btn-default btn-sm\" ng-controller=\"PollsMainCtrl\"' +\n                            ' ng-click=\"openCastVoteModal(\\'' + data +\n                            '\\')\" ng-disabled=\"' + finished + '\"> <i class=\"fa fa-signal\" aria-hidden=\"true\"></i> </button>';\n\n                        var result = '<button type=\"button\" class=\"btn btn-default btn-sm\" ng-controller=\"PollsMainCtrl\"' +\n                            ' ng-click=\"openPollData(\\'' + data +\n                            '\\')\"> <i class=\"fa fa-area-chart\" aria-hidden=\"true\"></i> </button>';\n\n                        var votes = '<button type=\"button\" class=\"btn btn-default btn-sm\" ng-controller=\"PollsMainCtrl\"' +\n                            ' ng-click=\"openPollVotesModal(\\'' + data +\n                            '\\')\"  ng-disabled=\"' + finished + '\"> <i class=\"fa fa-server\" aria-hidden=\"true\"></i> </button>';\n\n                        return result + '&nbsp;' + cast + '&nbsp;' + votes;\n\n                    }),\n\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n        }\n    ])\n;\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('poll').controller('CreatePollFormController',\n    ['$scope', 'PollService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'AssetsService', 'CurrenciesService',\n        function ($scope, PollService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, AssetsService, CurrenciesService) {\n\n\n            $scope.createPollForm = angular.copy(multiStepFormScope.createPollForm);\n            $scope.createPollForm2 = angular.copy(multiStepFormScope.createPollForm2);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.createPollForm = angular.copy($scope.createPollForm);\n                multiStepFormScope.createPollForm2 = angular.copy($scope.createPollForm2);\n            });\n\n            $scope.finishHeight = 1440;\n\n            $scope.increment = function () {\n                if ($scope.finishHeight >= 20000) {\n                    $scope.finishHeight = 20000;\n                    return;\n                } else {\n                    $scope.finishHeight = $scope.finishHeight + 1440;\n                }\n\n                $scope.createPollForm2.finishHeight = $scope.finishHeight;\n            };\n\n            $scope.decrement = function () {\n                if ($scope.finishHeight <= 1440) {\n                    $scope.finishHeight = 1440;\n                    return;\n                } else {\n                    $scope.finishHeight = $scope.finishHeight - 1440;\n                }\n\n                $scope.createPollForm2.finishHeight = $scope.finishHeight;\n            };\n\n            $scope.max = function () {\n                $scope.finishHeight = 20000;\n                $scope.createPollForm2.finishHeight = 20000;\n            };\n\n            $scope.min = function () {\n                $scope.finishHeight = 1440;\n                $scope.createPollForm2.finishHeight = 1440;\n            };\n\n            $scope.addNewOption = function () {\n                $scope.createPollForm2.pollOptions = $scope.createPollForm2.pollOptions || [];\n                if ($scope.createPollForm2.pollOptions.length >= 10) {\n                    AlertService.addAlert(\n                        {\n                            type: 'danger',\n                            msg: 'You can add maximum 10 options'\n                        }, alertConfig.createPollModalAlert\n                    );\n                } else {\n                    $scope.createPollForm2.pollOptions.push({});\n                }\n            };\n\n            $scope.getAsset = function (assetId) {\n                AssetsService.getAsset(assetId).then(function (success) {\n                    $scope.createPollForm.asset = success;\n                });\n            };\n\n            $scope.getCurrency = function (currencyCode) {\n                CurrenciesService.getCurrency(currencyCode).then(function (success) {\n                    $scope.createPollForm.currency = success;\n                });\n            };\n\n            $scope.getBlockChainStatus = function () {\n                CurrenciesService.getBlockChainStatus().then(function (success) {\n                    $scope.createPollForm2.currentHeight = success.numberOfBlocks;\n                });\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.votingOptions = [\n               { label: 'Account', value: '0' },\n               { label: 'Balance', value: '1' },\n               { label: 'Asset', value: '2' },\n               { label: 'Currency', value: '3' }\n             ];\n\n\n            $scope.createPoll = function () {\n                var createPollForm = multiStepFormScope.createPollForm;\n                var createPollForm2 = multiStepFormScope.createPollForm2;\n                var pollJson = {};\n                pollJson.name = createPollForm.name;\n                pollJson.description = createPollForm.description;\n                pollJson.votingModel = createPollForm.votingModel;\n                pollJson.holding = createPollForm.holding;\n                if (pollJson.votingModel === '3') {\n                    pollJson.holding = createPollForm.currency.currency;\n                }\n\n                pollJson.minBalanceModel = createPollForm.votingModel;\n                pollJson.minBalance = parseInt(createPollForm.minbalance * 100000000);\n\n\n\n                pollJson.minNumberOfOptions = createPollForm2.minNumberOfOptions;\n                pollJson.maxNumberOfOptions = createPollForm2.maxNumberOfOptions;\n                pollJson.minRangeValue = 0;\n                pollJson.maxRangeValue = createPollForm2.maxNumberOfOptions;\n                pollJson.fee = 1;\n\n\n                pollJson.options = [];\n                for (var i = 0; i < createPollForm2.pollOptions.length; i++) {\n                    pollJson.options[i] = createPollForm2.pollOptions[i].value;\n                }\n                pollJson.publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n\n                pollJson.finishHeight = $scope.createPollForm2.currentHeight + createPollForm2.finishHeight;\n                pollJson.currentHeight=$scope.createPollForm2.currentHeight;\n\n                var secret = createPollForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                $scope.createPollPromise = PollService.createPoll(pollJson)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n\n                            $scope.transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                            $scope.tx_fee    = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total  = $scope.tx_fee + $scope.tx_amount;\n\n                            $scope.validBytes = true;\n\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.createPollModalAlert\n                            );\n                        }\n                    },   function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.createPollModalAlert);\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.createPollPromise =CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                    $scope.$emit('close-modal');\n                    $rootScope.$broadcast('reload-dashboard');\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n                        // $state.go('client.signedin.account.pending');\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                },   function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.createPollModalAlert);\n                });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('poll').controller('CastVoteFormController',\n    ['$scope', 'PollService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService',\n        function ($scope, PollService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService) {\n\n            $scope.castVoteForm = angular.copy(multiStepFormScope.castVoteForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.castVoteForm = angular.copy($scope.castVoteForm);\n            });\n\n            $scope.nextStep = function () {\n                var poll = $scope.castVoteForm.poll;\n                var votedOptions = $scope.castVoteForm.options;\n                var votedOptionsLength = votedOptions.length;\n                if (poll.minNumberOfOptions <= votedOptionsLength && poll.maxNumberOfOptions >= votedOptionsLength) {\n                    $scope.$nextStep();\n                } else {\n                    AlertService.addAlert(\n                        {\n                            type: 'danger',\n                            msg: 'You have to select at least min. ' + poll.minNumberOfOptions + ' and max. ' + poll.maxNumberOfOptions + ' options.'\n                        }, alertConfig.castVoteModalAlert\n                    );\n                }\n            };\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n                    $scope.castVoteForm.pollId = data.pollId;\n                    PollService.getPoll(data.pollId).then(function (success) {\n                        $scope.options = success.options;\n                        $scope.castVoteForm.poll = success;\n                    });\n                }\n\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            function getOptionNames(votedOptions) {\n                var options = $scope.castVoteForm.poll.options;\n\n                var totalVoted = votedOptions.length || 0;\n                var optionNames = [];\n                for (var i = 0; i < totalVoted; i++) {\n                    var index = options.indexOf(votedOptions[i]);\n                    optionNames.push(getOptionNameFormat(index));\n                }\n                return optionNames;\n            }\n\n            function getOptionNameFormat(i) {\n                if (i !== -1) {\n                    return i > 9 ? 'vote' + i : 'vote0' + i;\n                }\n            }\n\n            $scope.castVote = function () {\n                var castVoteForm = multiStepFormScope.castVoteForm;\n\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var pollId = castVoteForm.pollId;\n                var options = castVoteForm.options;\n                var secret = castVoteForm.secretPhrase;\n                var optionNames = getOptionNames(options);\n                var fee = 1;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                $scope.castVotePromise = PollService.castVote(publicKey, pollId, optionNames, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n\n                            $scope.transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                            $scope.transactionJSON = success.transactionJSON;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                            $scope.validBytes = true;\n\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.castVoteModalAlert\n                            );\n                        }\n                    },  function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.castVoteModalAlert);\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.castVotePromise=CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                    $scope.$emit('close-modal');\n                    $rootScope.$broadcast('reload-dashboard');\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n                        // $state.go('client.signedin.account.pending');\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                },  function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.castVoteModalAlert);\n                });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('messages',\n    ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node','options']);\n\nangular.module('messages').constant('messagesConfig', {\n    'messagesEndPoint': 'api'\n});\nangular.module('messages').config(['RestangularProvider', 'messagesConfig', '$stateProvider', '$urlRouterProvider',\n    function (RestangularProvider, messagesConfig, $stateProvider, $urlRouterProvider) {\n\n        RestangularProvider.setRestangularFields({\n            options: '_options'\n        });\n\n        $stateProvider.state('client.signedin.messages', {\n            url: '^/messages',\n            templateUrl: './messages/views/main.html',\n            abstract:true\n        }).state('client.signedin.messages.mymessages', {\n            url: '^/messages/mymessages',\n            templateUrl: './messages/views/mymessages.html',\n            controller: 'MessagesCtrl'\n        });\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('messages').service('MessageService',\n    ['nodeConfig', 'SessionStorageService', 'NodeService', 'baseConfig', 'messagesConfig', 'Restangular', 'loginConfig',\n        'TransactionService', '$rootScope', 'OptionsService',\n        function (nodeConfig, SessionStorageService, NodeService, baseConfig, messagesConfig, Restangular, loginConfig,\n                  TransactionService, $rootScope, OptionsService) {\n\n            this.getAccountDetailsFromSession = function (keyName) {\n                var accountDetails = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_DETAILS_KEY);\n                if (keyName) {\n                    return accountDetails[keyName];\n                }\n                return accountDetails;\n            };\n\n            this.getMessages = function (account, firstIndex, lastIndex, type, subtype) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getBlockchainTransactions',\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'type': type,\n                    'subtype': subtype,\n                    'withMessage': true\n                };\n                return Restangular.all(messagesConfig.messagesEndPoint).customGET('', params);\n            };\n\n            this.getAccountDetails = function (accountRS) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAccount',\n                    'account': accountRS\n                };\n                return Restangular.all(messagesConfig.messagesEndPoint).customGET('', params);\n            };\n\n            this.sendMessage = function (senderPublicKey, recipientRS, fee, data, nonce, recipientPublicKey, prunable) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n\n                var params = {\n                    'requestType': 'sendMessage',\n                    'publicKey': senderPublicKey,\n                    'recipient': recipientRS,\n                    'encryptedMessageData': data,\n                    'encryptedMessageNonce': nonce,\n                    'messageToEncryptIsText': 'true',\n                    'compressMessageToEncrypt': 'true',\n                    'encryptedMessageIsPrunable': prunable,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'recipientPublicKey': recipientPublicKey,\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n\n                return TransactionService.createTransaction(params);\n            };\n\n            this.broadcastMessage = function (transactionBytes, prunableAttachmentJSON) {\n\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n\n                var params = {\n                    'requestType': 'broadcastTransaction',\n                    'transactionBytes': transactionBytes,\n                };\n                if(prunableAttachmentJSON){\n                    params.prunableAttachmentJSON=JSON.stringify(prunableAttachmentJSON);\n                }\n                return Restangular.all(messagesConfig.messagesEndPoint).customPOST('', '', params, '');\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('messages').controller('MessagesCtrl',\n    ['$scope', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'MessageService', 'timestampFilter', 'amountTQTFilter', '$compile',\n        'transactionIconSubTypeFilter',\n        'transactionConfFilter', 'transactionTypeFilter', 'searchTermFilter', 'baseConfig', 'isEnabledFilter',\n        'isMessageFilter', 'hasMessageFilter', 'CommonsService', 'hasMessageDirectionFilter', '$uibModal', 'isEnabledFilter',\n        function ($scope, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, MessageService, timestampFilter, amountTQTFilter, $compile,\n                  transactionIconSubTypeFilter,\n                  transactionConfFilter, transactionTypeFilter, searchTermFilter, baseConfig, isEnabledFilter,\n                  isMessageFilter, hasMessageFilter, CommonsService, hasMessageDirectionFilter, $uibModal, isEnabledFilter) {\n\n\n            $scope.filter_type = '';\n            $scope.filter_subtype = '';\n\n            $scope.filterMessage = function () {\n                $scope.filter_type = '1';\n                $scope.filter_subtype = '0';\n                $scope.reloadMessages();\n            };\n\n            $scope.filterPayment = function () {\n                $scope.filter_type = '0';\n                $scope.filter_subtype = '';\n                $scope.reloadMessages();\n            };\n\n            $scope.filterNone = function () {\n                $scope.filter_type = '';\n                $scope.filter_subtype = '';\n                $scope.reloadMessages();\n            };\n\n            $scope.dtOptionsMessages = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('serverSide', true)\n                .withDataProp('data')\n                .withOption('responsive', true)\n                .withOption('processing', true)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('info', false)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    var account = CommonsService.getAccountDetailsFromSession('accountId');\n                    MessageService.getMessages(\n                        account,\n                        data.start,\n                        endIndex,\n                        $scope.filter_type,\n                        $scope.filter_subtype\n                    )\n                        .then(function (response) {\n\n                            $scope.data = response.transactions;\n                            callback({\n                                'iTotalRecords': 1000,\n                                'iTotalDisplayRecords': 1000,\n                                'data': response.transactions\n                            });\n                        });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumnsMessages = [\n\n                DTColumnBuilder.newColumn('transaction').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + row.fullHash + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                    }),\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return timestampFilter(data);\n                        }\n                    ),\n\n                DTColumnBuilder.newColumn('type').withTitle('Type').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return transactionIconSubTypeFilter(data, row.subtype);\n                    }),\n\n                DTColumnBuilder.newColumn('confirmations').withTitle('Conf.').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return transactionConfFilter(data);\n                        }\n                    ),\n\n                DTColumnBuilder.newColumn('senderRS').withTitle('Sender').notSortable()\n                    .withOption('defaultContent', ' ')\n                    .renderWith(function (data, type, row, meta) {\n                        if (data) {\n                            return searchTermFilter(data);\n                        }\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('phased').withTitle('Send').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var accountRS = CommonsService.getAccountDetailsFromSession('accountRs');\n                        return hasMessageDirectionFilter(row, accountRS);\n                    }),\n\n                DTColumnBuilder.newColumn('phased').withTitle('Phased').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        return isEnabledFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('phased').withTitle('Prunable').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                      var bolPrunable = false\n\n                      if ( _.has(row.attachment, 'version.PrunableEncryptedMessage') ) {  bolPrunable = true  }\n\n                        return isEnabledFilter(bolPrunable);\n                    }),\n\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                    .withOption('defaultContent', ' ').renderWith(function (data, type, row, meta) {\n                    if (data) {\n                        return searchTermFilter(data);\n                    } else {\n                        return '';\n                    }\n                    return data;\n                }),\n\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var accountRS = CommonsService.getAccountDetailsFromSession('accountRs');\n\n                        var reply_tag = false;\n                        var replyAddress = data;\n\n                        if (accountRS === row.senderRS) {\n                            reply_tag = true;\n                        } else {\n                            replyAddress = row.senderRS;\n                        }\n\n                        var tt_read = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Open Message\"';\n\n                        var tt_reply = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Reply\"';\n\n                        var action1 = '<button class=\"btn btn-success btn-xs\" ' + tt_read + ' ng-controller=\"MessagesCtrl\"' +\n                            ' ng-click=\"openReadMessageModal(\\'' + meta.row + '\\')\">' +\n                            ' <i class=\"fa fa-envelope-open-o\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>' + '&nbsp;';\n\n                        var action2 = '&nbsp;' +\n                            '<button  class=\"btn btn-default btn-xs\" ' + tt_reply + ' ng-controller=\"MessagesCtrl\" ng-disabled=\"' + reply_tag + '\"' +\n                            ' ng-click=\"openSendMessageModal(\\'' + replyAddress + '\\')\">' +\n                            ' <i class=\"fa fa-reply\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                        return action1 + action2;\n\n                    }),\n            ];\n\n            $scope.openSendMessageModal = function (data) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'messages/modals/send-message-form.html',\n                    size: 'lg',\n                    controller: 'StepMessageFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'recipientRS': data\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openReadMessageModal = function (row) {\n\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'messages/modals/read-message-form.html',\n                    size: 'lg',\n                    controller: 'StepMessageFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return $scope.data[row];\n                        }\n                    }\n                });\n            };\n\n            $scope.reloadMessages = function () {\n                if ($scope.dtInstanceMessages) {\n                    $scope.dtInstanceMessages._renderer.rerender();\n                }\n            };\n\n            $scope.dtInstanceMessagesCallback = function (_dtInstance) {\n                $scope.dtInstanceMessages = _dtInstance;\n            };\n\n\n        }]);\n\nangular.module('messages').controller('StepMessageFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n        var sendMessageSteps = [\n            {\n                templateUrl: 'messages/modals/send-message-details.html',\n                title: 'Send Message Details',\n                controller: 'SendMessageFormCtrl',\n                isolatedScope: true,\n                data: params\n            },\n            {\n                templateUrl: 'messages/modals/send-message-confirm.html',\n                title: 'Send Message Confirmation',\n                controller: 'SendMessageFormCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var readMessageSteps = [\n            {\n                templateUrl: 'messages/modals/read-message-details.html',\n                title: 'Read Message Details',\n                controller: 'ReadMessageFormCtrl',\n                isolatedScope: true,\n                data: params\n            },\n            {\n                templateUrl: 'messages/modals/read-message-confirm.html',\n                title: 'Reply Message Confirmation',\n                controller: 'ReadMessageFormCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        $scope.steps = {};\n\n        $scope.steps.sendMessageForm = sendMessageSteps;\n        $scope.steps.readMessageForm = readMessageSteps;\n\n    }]);\n\nangular.module('messages').controller('SendMessageFormCtrl',\n    ['$scope', 'MessageService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        function ($scope, MessageService, SessionStorageService, $state, CryptoService, loginConfig,\n                  AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService, $rootScope) {\n\n            $scope.sendMessageForm = angular.copy(multiStepFormScope.sendMessageForm);\n            $scope.validForm = false;\n            $scope.validBytes = false;\n            $scope.hasPublicKeyAdded = false;\n            $scope.hasMessageAdded = false;\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data.recipientRS) {\n                    $scope.sendMessageForm.recipientRS = data.recipientRS;\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.sendMessageForm = angular.copy($scope.sendMessageForm);\n            });\n\n            $scope.$watchCollection('sendMessageForm', function (sendMessageForm) {\n                var totalFee = FeeService.getSetAccountFee(sendMessageForm.message);\n                if (!$scope.sendMessageForm.fee || $scope.sendMessageForm.fee < totalFee) {\n                    $scope.sendMessageForm.fee = totalFee;\n                }\n            });\n\n            $scope.isPrunable = [\n              { label: 'On Chain (160 chars.)', value: 'false' },\n              { label: 'Off Chain (24k chars.)', value: 'true' }\n\n             ];\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.sendMessageForm.recipientRS = result.accountRS;\n                });\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            var createAndSignTransaction = function (transactionOptions, secretPhraseHex) {\n                $scope.sendMessagePromise = MessageService.sendMessage(\n                    transactionOptions.senderPublicKey,\n                    transactionOptions.recipientRS,\n                    1,\n                    transactionOptions.data,\n                    transactionOptions.nonce,\n                    transactionOptions.recipientPublicKey,\n                    transactionOptions.prunable\n                ).then(function (success) {\n\n                    if (!success.errorCode) {\n                        var unsignedBytes = success.unsignedTransactionBytes;\n                        var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                        var transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                        $scope.transactionBytes = transactionBytes;\n\n                        $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                        $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                        $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                        $scope.prunableAttachmentJSON = success.transactionJSON.attachment;\n\n\n                        $scope.validBytes = true;\n\n                        return transactionBytes;\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.sendMessageModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendMessageModalAlert);\n                });\n            };\n\n            $scope.getAndVerifyAccount = function (sendTokenForm) {\n\n                var sendForm = multiStepFormScope.sendMessageForm;\n                var recipientRS = sendForm.recipientRS;\n                var fee = 1; // sendForm.fee;\n                var secret = sendForm.secretPhrase;\n\n                var message = sendForm.message;\n                var pubkey = sendForm.pubkey;\n                var prunable = sendForm.prunable;\n\n                var hasPublicKeyAdded = false;\n                var hasMessageAdded = false;\n                var hasSecretAdded = false;\n\n                if (pubkey && pubkey.length > 0) {\n                    hasPublicKeyAdded = true;\n                }\n                if (message && message.length > 0) {\n                    hasMessageAdded = true;\n                }\n                if (secret && secret.length > 0) {\n                    hasSecretAdded = true;\n                }\n\n                if (!fee) {\n                    fee = 1;\n                }\n\n                $scope.hasPublicKeyAdded = hasPublicKeyAdded;\n                $scope.hasMessageAdded = hasMessageAdded;\n\n                var senderPublicKey = MessageService.getAccountDetailsFromSession('publicKey');\n                var secretPhraseHex;\n                if (hasSecretAdded) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                $scope.sendMessagePromise = MessageService.getAccountDetails(recipientRS).then(function (success) {\n\n                    var recipientPublicKey = success.publicKey;\n\n                    if (!recipientPublicKey && hasPublicKeyAdded) {\n                        recipientPublicKey = pubkey;\n                    }\n\n                    if (!success.errorCode || success.errorCode === 5) {\n\n                        $scope.accountDetails = success;\n\n                        if (!recipientPublicKey && !hasPublicKeyAdded && hasMessageAdded) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: This account has no visible public key because it never had any outbound transaction. Encrypted messages are not available without a public key. Ask the account holder for his public key and add the key on the former page to this transaction'\n                                }, alertConfig.sendMessageModalAlert\n                            );\n                            return;\n                        }\n\n                        var encrypted = {data: '', nonce: ''};\n                        if (hasMessageAdded) {\n                            if (!recipientPublicKey) {\n                                recipientPublicKey = pubkey;\n                            }\n                            encrypted = CryptoService.encryptMessage(message, secretPhraseHex, recipientPublicKey);\n                            $scope.encrypted = JSON.stringify(encrypted);\n                        } else {\n                            $scope.encrypted = encrypted;\n                        }\n\n                        var transactionOptions = {\n                            'senderPublicKey': senderPublicKey,\n                            'recipientRS': recipientRS,\n                            'fee': fee,\n                            'data': encrypted.data,\n                            'nonce': encrypted.nonce,\n                            'recipientPublicKey': recipientPublicKey,\n                            'prunable': prunable,\n                        };\n\n                        createAndSignTransaction(transactionOptions, secretPhraseHex);\n\n                        if ($scope.encrypted.data === '') {\n                            $scope.encrypted = '';\n                        }\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                            }, alertConfig.sendMessageModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendMessageModalAlert);\n                });\n            };\n\n            $scope.broadcastMessage = function (transactionBytes, prunableAttachmentJSON) {\n                $scope.sendMessagePromise = MessageService.broadcastMessage(transactionBytes, prunableAttachmentJSON).then(function (success) {\n                    $scope.$emit('close-modal');\n                    $rootScope.$broadcast('reload-dashboard');\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n                        // $state.go('client.signedin.account.pending');\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.sendMessageModalAlert);\n                });\n            };\n\n        }]);\n\nangular.module('messages').controller('ReadMessageFormCtrl',\n    ['$scope', '$state', '$rootScope', 'CommonsService', 'SessionStorageService',\n        'loginConfig', 'MessageService', 'alertConfig', 'AlertService', 'CryptoService', 'multiStepFormScope',\n        function ($scope, $state, $rootScope, CommonsService, SessionStorageService,\n                  loginConfig, MessageService, alertConfig, AlertService, CryptoService, multiStepFormScope) {\n\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.sendMessageForm = angular.copy($scope.sendMessageForm);\n            });\n\n            $scope.message = '';\n\n            $scope.readMessage = function () {\n\n                var params = $scope.$getActiveStep().data;\n\n                $scope.params = params;\n\n                try {\n\n                    var encrpytedMessageData = params.attachment.encryptedMessage.data;\n                    var encrpytedMessageNonce = params.attachment.encryptedMessage.nonce;\n\n                    var accountRS = CommonsService.getAccountDetailsFromSession('accountRs');\n                    var secretHex = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n\n                    var senderRS = params.senderRS;\n                    var recipientRS = params.recipientRS;\n\n                    var senderPublicKey = params.senderPublicKey;\n                    var recipientPublicKey = '';\n\n                } catch (e) {\n                    $scope.message = 'Sorry, an error has occurred: ' + e.message;\n                    return;\n                } finally {\n                }\n\n                $scope.readMessagePromise = MessageService.getAccountDetails(params.recipientRS)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n\n                            recipientPublicKey = success.publicKey;\n\n                            var encrypted;\n\n                            if (accountRS === senderRS) {\n\n                                encrypted =\n                                    CryptoService.decryptMessage(encrpytedMessageData, encrpytedMessageNonce, secretHex,\n                                        recipientPublicKey);\n\n                            } else {\n\n                                encrypted =\n                                    CryptoService.decryptMessage(encrpytedMessageData, encrpytedMessageNonce, secretHex,\n                                        senderPublicKey);\n                            }\n\n                            if (typeof(encrypted) === 'string') {\n                                $scope.message = encrypted;\n                            } else {\n                                $scope.message = 'Non readable message string.';\n                            }\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.readMessageModalAlert\n                            );\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.readMessageModalAlert);\n                    });\n\n\n            };\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('aliases', ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node','options']);\n\nangular.module('aliases').constant('aliasesConfig', {\n    'aliasesEndPoint':'api'\n});\n\nangular.module('aliases').config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n\n    $stateProvider.state('client.signedin.aliases', {\n        url: '^/aliases',\n        templateUrl: './aliases/views/main.html',\n        abstract:true\n    }).state('client.signedin.aliases.myaliases', {\n        url: '^/aliases/myaliases',\n        templateUrl: './aliases/views/myaliases.html',\n        controller: 'MyAliasesCtrl'\n    }).state('client.signedin.aliases.openoffers', {\n        url: '^/aliases/openoffers',\n        templateUrl: './aliases/views/openoffers.html',\n        controller: 'AliasesOpenOffersCtrl'\n    }).state('client.signedin.aliases.privateoffers', {\n        url: '^/aliases/privateoffers',\n        templateUrl: './aliases/views/privateoffers.html',\n        controller: 'AliasesPrivateOffersCtrl'\n    }).state('client.signedin.aliases.publicoffers', {\n        url: '^/aliases/publicoffers',\n        templateUrl: './aliases/views/publicoffers.html',\n        controller: 'AliasesPublicOffersCtrl'\n    });\n\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('aliases').service('AliasService',\n    ['nodeConfig', 'SessionStorageService', 'NodeService', 'baseConfig', 'aliasesConfig', 'Restangular', 'loginConfig',\n        'CryptoService', 'TransactionService', '$rootScope', 'OptionsService',\n        function (nodeConfig, SessionStorageService, NodeService, baseConfig, aliasesConfig, Restangular, loginConfig,\n                  CryptoService, TransactionService, $rootScope, OptionsService) {\n\n            this.getAccountAliases = function (account, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n\n                var params = {\n                    'requestType': 'getAliases',\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(aliasesConfig.aliasesEndPoint).customGET('', params);\n            };\n\n            this.setAlias = function (publicKey, aliasName, alias, fee) {\n\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n\n                var aliasURI = alias;\n                var params = {\n                    'publicKey': publicKey,\n                    'requestType': 'setAlias',\n                    'aliasName': aliasName,\n                    'aliasURI': aliasURI,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'broadcast': 'false',\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.deleteAlias = function (publicKey, aliasName, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'publicKey': publicKey,\n                    'requestType': 'deleteAlias',\n                    'aliasName': aliasName,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'broadcast': 'false',\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.searchAlias = function (query, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAliasesLike',\n                    'aliasPrefix': query,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(aliasesConfig.aliasesEndPoint).customGET('', params);\n            };\n\n            this.sellAlias = function (publicKey, aliasName, recipientRS, price, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'publicKey': publicKey,\n                    'requestType': 'sellAlias',\n                    'aliasName': aliasName,\n                    'priceTQT': price,\n                    'recipient': recipientRS,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'broadcast': 'false',\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.cancelAlias = function (publicKey, aliasName, recipientRS, fee) {\n\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n\n                var params = {\n                    'publicKey': publicKey,\n                    'requestType': 'sellAlias',\n                    'aliasName': aliasName,\n                    'priceTQT': '0',\n                    'recipient': recipientRS,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'broadcast': 'false',\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.buyAlias = function (publicKey, aliasName, price, fee) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n\n                var params = {\n                    'publicKey': publicKey,\n                    'requestType': 'buyAlias',\n                    'aliasName': aliasName,\n                    'amountTQT': parseInt(price),\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'broadcast': 'false',\n                    'deadline': OptionsService.getOption('DEADLINE'), \n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.getAliasesOpenOffers = function (account, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAliasesOpenOffers',\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(aliasesConfig.aliasesEndPoint).customGET('', params);\n            };\n\n            this.getAliasesPrivateOffers = function (account, firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n\n                var params = {\n                    'requestType': 'getAliasesPrivateOffers',\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(aliasesConfig.aliasesEndPoint).customGET('', params);\n            };\n\n            this.getAliasesPublicOffers = function (account, firstIndex, lastIndex, order, orderColumn) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAliasesPublicOffers',\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'order' : order,\n                    'orderColumn': orderColumn\n                };\n                return Restangular.all(aliasesConfig.aliasesEndPoint).customGET('', params);\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('aliases').controller('AliasesMainCtrl',\n    ['$scope', 'AliasService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter',\n        function ($scope, AliasService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter) {\n\n            $scope.openSetAliasModal = function (name) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'aliases/modals/set-alias-form.html',\n                    size: 'lg',\n                    controller: 'AliasesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                name: name,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openSellAliasModal = function (name, aliasURI) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'aliases/modals/sell-alias-form.html',\n                    size: 'lg',\n                    controller: 'AliasesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                name: name,\n                                uri: aliasURI\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openBuyAliasModal = function (name, price) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'aliases/modals/buy-alias-form.html',\n                    size: 'lg',\n                    controller: 'AliasesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                name: name,\n                                amount: price,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openSearchAliasModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'aliases/modals/search-alias-form.html',\n                    size: 'lg',\n                    controller: 'AliasesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openDeleteAliasModal = function (aliasName, aliasURI) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'aliases/modals/delete-alias-form.html',\n                    size: 'lg',\n                    controller: 'AliasesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                name: aliasName,\n                                uri: aliasURI\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openTransferAliasModal = function (aliasName, aliasURI) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'aliases/modals/transfer-alias-form.html',\n                    size: 'lg',\n                    controller: 'AliasesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                name: aliasName,\n                                uri: aliasURI\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openCancelAliasModal = function (aliasName, price, aliasURI) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'aliases/modals/cancel-alias-form.html',\n                    size: 'lg',\n                    controller: 'AliasesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                name: aliasName,\n                                price: price,\n                                uri: aliasURI\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openEditAliasModal = function (aliasName, aliasURI) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'aliases/modals/edit-alias-form.html',\n                    size: 'lg',\n                    controller: 'AliasesFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                name: aliasName,\n                                uri: aliasURI\n                            };\n                        }\n                    }\n                });\n            };\n\n\n        }]);\n\nangular.module('aliases').controller('MyAliasesCtrl',\n    ['$scope', 'AliasService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService',\n        function ($scope, AliasService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService) {\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('serverSide', false)\n                .withDataProp('aliases')\n                .withOption('responsive', true)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', false)\n                .withOption('bFilter', false).withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var accountId = CommonsService.getAccountDetailsFromSession('accountId');\n                    var endIndex = data.start + data.length - 1;\n                    AliasService.getAccountAliases(accountId, data.start, endIndex).then(function (response) {\n                        callback({\n                            'iTotalRecords': response.aliases.length,\n                            'iTotalDisplayRecords': response.aliases.length,\n                            'aliases': response.aliases\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('alias').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ' +\n                            'ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n                    }),\n\n                DTColumnBuilder.newColumn('aliasName').withTitle('Name').notSortable(),\n                DTColumnBuilder.newColumn('aliasURI').withTitle('URI').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var aliasType = data.split(':')[0];\n                        if (aliasType === 'acct') {\n                            var accountId = data.substring(data.lastIndexOf(':') + 1, data.lastIndexOf('@'));\n                            return '<a  ng-controller=\"AccountMainCtrl\"' +\n                                ' ' +\n                                'ng-click=\"openSendTokenModal(\\'' + accountId + '\\')\">' + data + '</a>';\n                        } else if (aliasType === 'url') {\n                            var url = data.substring(data.lastIndexOf(':') + 1, data.lastIndexOf('@'));\n                            if (!/^https?:\\/\\//i.test(url)) {\n                                url = 'http://' + url;\n                            }\n                            return '<a href=\"' + url + '\" target=\"_blank\">' + data + '</a>';\n                        } else if (aliasType === 'btc') {\n                            var address = data.substring(data.lastIndexOf(':') + 1, data.lastIndexOf('@'));\n                            return '<a  ng-controller=\"BlockrMainController\"' +\n                                ' ' +\n                                'ng-click=\"openBtcDetailsModal(\\'' + address + '\\')\">' + data + '</a>';\n                        }\n                        if (data === '') {\n                          return 'Not Set';\n                        } else {\n                        return data;\n                        }\n\n\n                    }),\n                DTColumnBuilder.newColumn('aliasName').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var tt_edit = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Edit\"';\n\n                        var tt_transfer = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Transfer\"';\n\n                        var tt_sell = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Sell\"';\n\n                        var tt_delete = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Delete\"';\n\n                        var edit = '<button class=\"btn btn-default btn-xs\"  ' + tt_edit + ' ng-click=\"openEditAliasModal(\\'' + data +\n                            '\\',\\'' + row.aliasURI +\n                            '\\')\" ng-controller=\"AliasesMainCtrl\"> <i class=\"fa fa-pencil\" aria-hidden=\"true\" style=\"width:15px;height:15px;\"></i> </button>';\n\n                        var sell = '<button class=\"btn btn-default btn-xs\"  ' + tt_sell + ' ng-click=\"openSellAliasModal(\\'' + data +\n                            '\\',\\'' + row.aliasURI +\n                            '\\')\" ng-controller=\"AliasesMainCtrl\"> <i class=\"fa fa-dollar\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        var transfer = '<button class=\"btn btn-default btn-xs\"  ' + tt_transfer + ' ng-click=\"openTransferAliasModal(\\'' +\n                            data +\n                            '\\',\\'' + row.aliasURI +\n                            '\\')\" ng-controller=\"AliasesMainCtrl\"> <i class=\"fa fa-user\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        var del = '<button class=\"btn btn-default btn-xs\"  ' + tt_delete + ' ng-click=\"openDeleteAliasModal(\\'' + data +\n                            '\\',\\'' + row.aliasURI +\n                            '\\')\" ng-controller=\"AliasesMainCtrl\"> <i class=\"fa fa-times\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        var action = edit + ' ' + transfer + ' ' + sell + ' ' + del;\n\n                        return action;\n\n                    }),\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadAliases = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n        }]);\n\nangular.module('aliases').controller('AliasesOpenOffersCtrl',\n    ['$scope', 'AliasService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService',\n        function ($scope, AliasService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService) {\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('serverSide', true)\n                .withDataProp('aliases')\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false).withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var accountId = CommonsService.getAccountDetailsFromSession('accountRs');\n                    var endIndex = data.start + data.length - 1;\n                    AliasService.getAliasesOpenOffers(accountId, data.start, endIndex).then(function (response) {\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'aliases': response.aliases\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('aliasId').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ' +\n                            'ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n                    }),\n\n                DTColumnBuilder.newColumn('aliasName').withTitle('Name').notSortable(),\n\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        if (row.recipientId === '0') {\n                            return 'Public Offer';\n                        } else {\n                            return searchTermFilter(data);\n                        }\n\n\n                    }),\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Price').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('aliasName').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var accountId = CommonsService.getAccountDetailsFromSession('accountRs');\n\n\n                        var tt_cancel = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Cancel\"';\n\n                        return '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_cancel + '  ng-controller=\"AliasesMainCtrl\"' +\n                            ' ' +\n                            'ng-click=\"openCancelAliasModal(\\'' + data +\n                            '\\',\\'' + amountTQTFilter(row.priceTQT) +\n                            '\\',\\'' + row.aliasURI + '\\')\">' +\n                            '<i class=\"fa fa-times\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n                    }),\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadAliases = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n        }]);\n\nangular.module('aliases').controller('AliasesPrivateOffersCtrl',\n    ['$scope', 'AliasService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService',\n        function ($scope, AliasService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService) {\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('serverSide', true)\n                .withDataProp('aliases')\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false).withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var accountId = CommonsService.getAccountDetailsFromSession('accountRs');\n                    var endIndex = data.start + data.length - 1;\n                    AliasService.getAliasesPrivateOffers(accountId, data.start, endIndex).then(function (response) {\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'aliases': response.aliases\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('aliasId').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ' +\n                            'ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n                    }),\n\n                DTColumnBuilder.newColumn('aliasName').withTitle('Name').notSortable(),\n                DTColumnBuilder.newColumn('aliasId').withTitle('ID').notSortable(),\n                DTColumnBuilder.newColumn('senderRS').withTitle('Sender').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Amount').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('aliasName').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var tt_buy = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Buy\"';\n\n                        var buy = '<button class=\"btn btn-default btn-xs\" ' + tt_buy + ' ng-click=\"openBuyAliasModal(\\'' + data +\n                            '\\',\\'' + row.priceTQT +\n                            '\\')\" ng-controller=\"AliasesMainCtrl\"> <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        return buy;\n\n                    }),\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadAliases = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n        }]);\n\nangular.module('aliases').controller('AliasesPublicOffersCtrl',\n    ['$scope', 'AliasService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService',\n        function ($scope, AliasService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService) {\n\n\n            $scope.sort_order = 'desc';\n            $scope.sort_orderColumn = 'height';\n\n            $scope.sort_price = function () {\n                $scope.sort_orderColumn = 'price';\n                $scope.reloadAliases();\n            };\n            $scope.sort_height = function () {\n                $scope.sort_orderColumn = 'height';\n                $scope.reloadAliases();\n            };\n\n            $scope.sort_name = function () {\n                $scope.sort_orderColumn = 'name';\n                $scope.reloadAliases();\n            };\n\n            $scope.sort_toggle = function () {\n                if ($scope.sort_order === 'desc') {\n                    $scope.sort_order = 'asc';\n                } else if ($scope.sort_order === 'asc') {\n                    $scope.sort_order = 'desc';\n                }\n                $scope.reloadAliases();\n            };\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('serverSide', true)\n                .withDataProp('aliases')\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false).withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var accountId = CommonsService.getAccountDetailsFromSession('accountRs');\n                    var endIndex = data.start + data.length - 1;\n                    AliasService.getAliasesPublicOffers(\n                        accountId,\n                        data.start,\n                        endIndex,\n                        $scope.sort_order,\n                        $scope.sort_orderColumn\n                      ).then(function (response) {\n\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'aliases': response.aliases\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('aliasId').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ' +\n                            'ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n                    }),\n\n                DTColumnBuilder.newColumn('aliasName').withTitle('Name').notSortable(),\n                DTColumnBuilder.newColumn('aliasId').withTitle('ID').notSortable(),\n                DTColumnBuilder.newColumn('senderRS').withTitle('Sender').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n\n                DTColumnBuilder.newColumn('priceTQT').withTitle('Price').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('aliasName').withTitle('Action').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n\n                        var tt_buy = ' popover-placement=\"top\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                            ' \"Buy\"';\n\n                        var buy = '<button class=\"btn btn-default btn-xs\" ' + tt_buy + ' ng-click=\"openBuyAliasModal(\\'' + data +\n                            '\\',\\'' + row.priceTQT +\n                            '\\')\" ng-controller=\"AliasesMainCtrl\"> <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                        return buy;\n\n                    }),\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadAliases = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n        }]);\n\nangular.module('aliases').controller('AliasesFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n        var setAliasSteps = [\n            {\n                templateUrl: 'aliases/modals/set-alias-details.html',\n                title: 'Register Alias Details',\n                controller: 'SetAliasFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'aliases/modals/set-alias-confirm.html',\n                title: 'Register Alias Confirmation',\n                controller: 'SetAliasFormController',\n                isolatedScope: true,\n\n            },\n        ];\n\n        var sellAliasSteps = [\n            {\n                templateUrl: 'aliases/modals/sell-alias-details.html',\n                title: 'Sell Alias Details',\n                controller: 'SellAliasFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'aliases/modals/sell-alias-confirm.html',\n                title: 'Sell Alias Confirmation',\n                controller: 'SellAliasFormController',\n                isolatedScope: true,\n\n            },\n        ];\n\n        var buyAliasSteps = [\n            {\n                templateUrl: 'aliases/modals/buy-alias-details.html',\n                title: 'Buy Alias Details',\n                controller: 'BuyAliasFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'aliases/modals/buy-alias-confirm.html',\n                title: 'Buy Alias Confirmation',\n                controller: 'BuyAliasFormController',\n                isolatedScope: true,\n\n            },\n        ];\n\n        var deleteAliasSteps = [\n            {\n                templateUrl: 'aliases/modals/delete-alias-details.html',\n                title: 'Delete Alias Details',\n                controller: 'DeleteAliasFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'aliases/modals/delete-alias-confirm.html',\n                title: 'Delete Alias Confirmation',\n                controller: 'DeleteAliasFormController',\n                isolatedScope: true,\n\n            },\n        ];\n\n        var searchAliasesSteps = [\n            {\n                templateUrl: 'aliases/modals/search-alias-details.html',\n                title: 'Search Alias Details',\n                controller: 'SearchAliasFormCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'aliases/modals/search-alias-confirm.html',\n                title: 'Search Alias Results',\n                controller: 'SearchAliasFormCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var transferAliasSteps = [\n            {\n                templateUrl: 'aliases/modals/transfer-alias-details.html',\n                title: 'Transfer Alias Details',\n                controller: 'TransferAliasFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'aliases/modals/transfer-alias-confirm.html',\n                title: 'Transfer Alias Confirmation',\n                controller: 'TransferAliasFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var editAliasSteps = [\n            {\n                templateUrl: 'aliases/modals/edit-alias-details.html',\n                title: 'Edit Alias Details',\n                controller: 'EditAliasFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'aliases/modals/edit-alias-confirm.html',\n                title: 'Edit Alias Confirmation',\n                controller: 'EditAliasFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var cancelAliasSteps = [\n            {\n                templateUrl: 'aliases/modals/cancel-alias-details.html',\n                title: 'Cancel Alias Sell Details',\n                controller: 'CancelAliasFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'aliases/modals/cancel-alias-confirm.html',\n                title: 'Cancel Alias Sell Confirmation',\n                controller: 'CancelAliasFormController',\n                isolatedScope: true,\n\n            },\n        ];\n\n        $scope.steps = {};\n\n        $scope.steps.setAliasForm = setAliasSteps;\n        $scope.steps.sellAliasSteps = sellAliasSteps;\n        $scope.steps.buyAliasForm = buyAliasSteps;\n        $scope.steps.deleteAliasForm = deleteAliasSteps;\n        $scope.steps.searchAliasForm = searchAliasesSteps;\n        $scope.steps.transferAliasSteps = transferAliasSteps;\n        $scope.steps.editAliasSteps = editAliasSteps;\n        $scope.steps.cancelAliasSteps = cancelAliasSteps;\n\n    }]);\n\nangular.module('aliases').controller('EditAliasFormController',\n    ['$scope', 'AliasService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'amountToQuantFilter',\n        function ($scope, AliasService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, amountToQuantFilter) {\n\n\n            $scope.editAliasForm = angular.copy(multiStepFormScope.editAliasForm);\n\n            $scope.disableFields = {};\n\n\n            $scope.formFinalAlias = function () {\n                var editAliasForm = multiStepFormScope.editAliasForm;\n\n                var aliasUri = editAliasForm.uri || '';\n                var aliasPrefix = editAliasForm.prefix.value;\n                var aliasSuffix = '@xin';\n                var aliasFinal = aliasPrefix + aliasUri;\n                if (aliasPrefix !== '') {\n                    aliasFinal = aliasFinal + aliasSuffix;\n                }\n\n                if (!aliasUri) {\n                    aliasFinal = '';\n                }\n\n                return aliasFinal;\n            };\n\n            $scope.validBytes = false;\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                $scope.editAliasForm.name = data.name;\n                $scope.editAliasForm.uriold = data.uri;\n\n                $scope.prefixes = [\n                    {name: 'Account', value: 'acct:'},\n                    {name: 'URL', value: 'url:'},\n                    {name: 'BTC', value: 'btc:'},\n                    // {name:\"Torrent\", value:\"trnt:\"},\n                    // {name:\"Magnet\", value:\"magnet:\"},\n                    // {name:\"Mail\", value:\"mailto::\"},\n                    // {name:'Zeronet', value:'zero:'},\n                    // {name:'IPFS', value:'ipfs:'},\n                    {name: 'Other', value: ''}\n\n                ];\n\n                $scope.editAliasForm.prefix = $scope.prefixes[0];\n\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.editAliasForm = angular.copy($scope.editAliasForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.editAlias = function () {\n                var editAliasForm = multiStepFormScope.editAliasForm;\n                var name = editAliasForm.name;\n                var alias = $scope.formFinalAlias();\n                var fee = editAliasForm.fee;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = editAliasForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.editAliasPromise=AliasService.setAlias(publicKey, name, alias, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.editAliasModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.editAliasModalAlert);\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.editAliasPromise=CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                    $scope.$emit('close-modal');\n                    $rootScope.$broadcast('reload-dashboard');\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n                        // $state.go('client.signedin.account.pending');\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.editAliasModalAlert);\n                });\n            };\n\n        }]);\n\nangular.module('aliases').controller('CancelAliasFormController',\n    ['$scope', 'AliasService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'amountToQuantFilter',\n        function ($scope, AliasService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, amountToQuantFilter) {\n\n            $scope.cancelAliasForm = angular.copy(multiStepFormScope.cancelAliasForm);\n\n            $scope.disableFields = {};\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                $scope.cancelAliasForm.name = data.name;\n                $scope.cancelAliasForm.price = data.price;\n                $scope.cancelAliasForm.aliasURI = data.aliasURI;\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.cancelAliasForm = angular.copy($scope.cancelAliasForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.cancelAlias = function () {\n\n                var cancelAliasForm = multiStepFormScope.cancelAliasForm;\n                var name = cancelAliasForm.name;\n                var recipientRS = cancelAliasForm.recipientRS || '';\n                var price = cancelAliasForm.price;\n                var fee = cancelAliasForm.fee;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = cancelAliasForm.secretPhrase;\n                var accountRS = CommonsService.getAccountDetailsFromSession('accountRs');\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.cancelAliasPromise = AliasService.cancelAlias(publicKey, name, accountRS, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.cancelAliasModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.cancelAliasModalAlert);\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.cancelAliasPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.cancelAliasModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('aliases').controller('SetAliasFormController',\n    ['$scope', 'AliasService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService',\n        function ($scope, AliasService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService) {\n\n            $scope.setAliasForm = angular.copy(multiStepFormScope.setAliasForm);\n\n            $scope.disableFields={};\n\n            $scope.validBytes = false;\n\n            $scope.initStep1=function(){\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n                    if(data.name){\n                        $scope.setAliasForm.name=data.name;\n                        $scope.disableFields.name=true;\n                    }\n                }\n\n                $scope.prefixes = [\n                  {name:'Account', value:'acct:',placeholder:'XIN______-____-______'},\n                  {name:'URL', value:'url:',placeholder:'http://'},\n                  {name:'BTC', value:'btc:',placeholder:''},\n                  // {name:\"Torrent\", value:\"trnt:\"},\n                  // {name:\"Magnet\", value:\"magnet:\"},\n                  // {name:\"Mail\", value:\"mailto::\"},\n                  // {name:'Zeronet', value:'zero:'},\n                  // {name:'IPFS', value:'ipfs:'},\n                  {name:'Other', value: '' }\n\n                ];\n\n                $scope.setAliasForm.prefix = $scope.prefixes[0];\n\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.setAliasForm = angular.copy($scope.setAliasForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.formFinalAlias=function(){\n                var setAliasForm = multiStepFormScope.setAliasForm;\n\n                var aliasUri = setAliasForm.uri;\n                var aliasPrefix = setAliasForm.prefix.value;\n                var aliasSuffix = '@xin';\n                var aliasFinal = aliasPrefix+aliasUri;\n                if (aliasPrefix !== '') { aliasFinal = aliasFinal + aliasSuffix; }\n\n                if (!aliasUri) { aliasFinal = ''; }\n\n                return aliasFinal;\n            };\n\n            $scope.setAlias= function () {\n                var setAliasForm = multiStepFormScope.setAliasForm;\n                var name = setAliasForm.name;\n                var alias= $scope.formFinalAlias();\n                var fee = setAliasForm.fee;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret=setAliasForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 2;\n                }\n                $scope.setAliasPromise=AliasService.setAlias(publicKey, name, alias, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.setAliasModalAlert\n                            );\n                        }\n                    },  function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.setAliasModalAlert);\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.setAliasPromise=CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                    $scope.$emit('close-modal');\n                    $rootScope.$broadcast('reload-dashboard');\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n                        // $state.go('client.signedin.account.pending');\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.setAliasModalAlert);\n                });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('aliases').controller('DeleteAliasFormController',\n    ['$scope', 'AliasService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService',\n        function ($scope, AliasService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService) {\n\n\n            $scope.deleteAliasForm = angular.copy(multiStepFormScope.deleteAliasForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.deleteAliasForm = angular.copy($scope.deleteAliasForm);\n            });\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                if (data) {\n                    $scope.deleteAliasForm.name = data.name;\n                    $scope.deleteAliasForm.uri = data.uri;\n                }\n            };\n\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.deleteAlias = function () {\n                var deleteAliasForm = multiStepFormScope.deleteAliasForm;\n                var name = deleteAliasForm.name;\n                var fee = deleteAliasForm.fee;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = deleteAliasForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.deleteAliasPromise = AliasService.deleteAlias(publicKey, name, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.deleteAliasModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.deleteAliasModalAlert);\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.deleteAliasPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.deleteAliasModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('aliases').controller('SearchAliasFormCtrl',\n    ['$scope', 'AliasService', 'SessionStorageService', '$state', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'searchTermFilter', '$compile', 'multiStepFormScope', '$validation','supplyFilter','currencyModelFilter',\n        function ($scope, AliasService, SessionStorageService, $state, DTOptionsBuilder,\n                  DTColumnBuilder, searchTermFilter, $compile, multiStepFormScope, $validation,supplyFilter,currencyModelFilter) {\n\n            $scope.searchAliasForm = {};\n\n            $scope.onSubmit = function () {\n                $validation.validate($scope.searchAliasForm);\n                if ($scope.searchAliasForm.$valid) {\n                    $scope.$nextStep();\n                }\n            };\n\n            $scope.searchAliasForm = angular.copy(multiStepFormScope.searchAliasForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.searchAliasForm = angular.copy($scope.searchAliasForm);\n            });\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('serverSide', true)\n                .withDataProp('aliases')\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('ordering', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var query = $scope.searchAliasForm.query;\n                    var endIndex = data.start + data.length - 1;\n\n                    AliasService.searchAlias(query, data.start, endIndex).then(function (response) {\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'aliases': response.aliases\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n                DTColumnBuilder.newColumn('aliasName').withTitle('Name').notSortable(),\n\n                DTColumnBuilder.newColumn('aliasURI').withTitle('URI').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var aliasType=data.split(':')[0];\n                        if(aliasType==='acct'){\n                            var accountId=data.substring(data.lastIndexOf(':')+1,data.lastIndexOf('@'));\n                            return '<a  ng-controller=\"AccountMainCtrl\"' +\n                                ' ' +\n                                'ng-click=\"openSendTokenModal(\\'' + accountId + '\\')\">' + data + '</a>';\n                        }else if(aliasType==='url'){\n                            var url=data.substring(data.lastIndexOf(':')+1,data.lastIndexOf('@'));\n                            if (!/^https?:\\/\\//i.test(url)) {\n                                url = 'http://' + url;\n                            }\n                            return '<a href=\"' + url + '\" target=\"_blank\">'+ data +'</a>';\n                        }else if(aliasType==='btc'){\n                            var address=data.substring(data.lastIndexOf(':')+1,data.lastIndexOf('@'));\n                            return '<a  ng-controller=\"BlockrMainController\"' +\n                                ' ' +\n                                'ng-click=\"openBtcDetailsModal(\\'' + address+ '\\')\">' + data + '</a>';\n                        }\n                        return data;\n                    }),\n\n                DTColumnBuilder.newColumn('accountRS').withTitle('Owner').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                    return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                        ' ' +\n                        'ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                        '<i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i>' + '</button>';\n\n                    }),\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('aliases').controller('SellAliasFormController',\n    ['$scope', 'AliasService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'amountToQuantFilter',\n        function ($scope, AliasService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, amountToQuantFilter) {\n\n            $scope.sellAliasForm = angular.copy(multiStepFormScope.sellAliasForm);\n\n            $scope.disableFields = {};\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                $scope.sellAliasForm.name = data.name;\n                $scope.sellAliasForm.uri = data.uri;\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.sellAliasForm = angular.copy($scope.sellAliasForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: false,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.sellAliasForm.recipientRS = result.accountRS;\n                });\n            };\n\n            $scope.sellAlias = function () {\n\n                var sellAliasForm = multiStepFormScope.sellAliasForm;\n                var name = sellAliasForm.name;\n                var recipientRS = sellAliasForm.recipientRS || '';\n                var price = amountToQuantFilter(sellAliasForm.price);\n                var fee = sellAliasForm.fee;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = sellAliasForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.sellAliasPromise=AliasService.sellAlias(publicKey, name, recipientRS, price, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                            $scope.validBytes = true;\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.setAliasModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.setAliasModalAlert);\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.sellAliasPromise=CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                    $scope.$emit('close-modal');\n                    $rootScope.$broadcast('reload-dashboard');\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n                        // $state.go('client.signedin.account.pending');\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                },  function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.setAliasModalAlert);\n                });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('aliases').controller('BuyAliasFormController',\n    ['$scope', 'AliasService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'amountToQuantFilter',\n        function ($scope, AliasService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, amountToQuantFilter) {\n\n\n            $scope.buyAliasForm = angular.copy(multiStepFormScope.buyAliasForm);\n\n            $scope.disableFields = {};\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                $scope.buyAliasForm.name = data.name;\n                $scope.buyAliasForm.amount = data.amount;\n\n            };\n\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.buyAliasForm = angular.copy($scope.buyAliasForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.buyAlias = function () {\n                var buyAliasForm = multiStepFormScope.buyAliasForm;\n                var name = buyAliasForm.name;\n                var price = parseInt(buyAliasForm.amount);\n\n                var fee = 1; \n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = buyAliasForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n                $scope.buyAliasPromise = AliasService.buyAlias(publicKey, name, price, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.buyAliasModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.buyAliasModalAlert);\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.buyAliasPromise = CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                    $scope.$emit('close-modal');\n                    $rootScope.$broadcast('reload-dashboard');\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n                        // $state.go('client.signedin.account.pending');\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.buyAliasModalAlert);\n                });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('aliases').controller('TransferAliasFormController',\n    ['$scope', 'AliasService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'amountToQuantFilter',\n        function ($scope, AliasService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, amountToQuantFilter) {\n\n            $scope.transferAliasForm = angular.copy(multiStepFormScope.transferAliasForm);\n\n            $scope.disableFields = {};\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                $scope.transferAliasForm.name = data.name;\n                $scope.transferAliasForm.uri = data.uri;\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.transferAliasForm = angular.copy($scope.transferAliasForm);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.openAddressBookModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: false,\n                    templateUrl: 'addressbook/views/addressbook-light.html',\n                    controller: 'AddressBookCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'closeOnClick': true\n                            };\n                        }\n                    }\n                });\n                modalInstance.result.then(function (result) {\n                    $scope.transferAliasForm.recipientRS = result.accountRS;\n                });\n            };\n\n            $scope.TransferAlias = function () {\n\n                var transferAliasForm = multiStepFormScope.transferAliasForm;\n                var name = transferAliasForm.name;\n                var recipientRS = transferAliasForm.recipientRS;\n                var price = amountToQuantFilter(transferAliasForm.price);\n                var fee = transferAliasForm.fee;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = transferAliasForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (!fee) {\n                    fee = 1;\n                }\n\n                $scope.transferAliasPromise=AliasService.sellAlias(publicKey, name, recipientRS, price, fee)\n                    .then(function (success) {\n                        if (!success.errorCode) {\n                            var unsignedBytes = success.unsignedTransactionBytes;\n                            var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                            $scope.transactionBytes =\n                                CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                            $scope.validBytes = true;\n\n                            $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                            $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                }, alertConfig.transferAliasModalAlert\n                            );\n                        }\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.transferAliasModalAlert);\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.transferAliasPromise=CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                    $scope.$emit('close-modal');\n                    $rootScope.$broadcast('reload-dashboard');\n                    if (!success.errorCode) {\n                        AlertService.addAlert(\n                            {\n                                type: 'success',\n                                msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                ''\n                            });\n                        // $state.go('client.signedin.account.pending');\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                            });\n                    }\n\n                }, function (error) {\n                    AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                        alertConfig.transferAliasModalAlert);\n                });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nvar searchApp = angular.module('search',\n    ['baseClient', 'restangular', 'datatables', 'datatables.bootstrap', 'ui.bootstrap', 'ui.router', 'ja.qr']);\n\nangular.module('search').constant('searchConfig', {\n    'searchEndPoint': 'api',\n    'searchAccountString': 'XIN',\n    'searchPeerUrl': 'http://185.103.75.217:8888/api/nodes',\n    'searchPeerEndPoint': 'api/nodes',\n});\n\nangular.module('search').config(['RestangularProvider', 'searchConfig', '$stateProvider', '$urlRouterProvider',\n    function (RestangularProvider, searchConfig, $stateProvider, $urlRouterProvider) {\n        RestangularProvider.setRestangularFields({\n            options: '_options'\n        });\n\n    }]);\n\nangular.module('search').filter('gateways', ['$sce', function ($sce) {\n    return function (toolTip, val) {\n        switch (toolTip) {\n            case 'TenderMint':\n\n                if (val) {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">   <span class=\"label label-default\" >TM</span>  </span>';\n                } else {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >TM</span>   </span>';\n                }\n                break;\n\n            case 'ZeroNet':\n\n                if (val) {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >ZN</span>  </span>';\n                } else {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >ZN</span>  </span>';\n                }\n                break;\n            case 'IPFS':\n\n                if (val) {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-warning\" >IPFS</span>  </span>';\n                } else {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >IPFS</span>  </span>';\n                }\n                break;\n\n            default:\n                return '<small> <span class=\"glyphicon glyphicon-remove\" style=\"color:red\"></span> </small>';\n        }\n    };\n}]);\n\nangular.module('search').filter('proxies', ['$sce', function ($sce) {\n    return function (toolTip, val) {\n\n        switch (toolTip) {\n            case 'BTC':\n\n                if (val) {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">   <span class=\"label label-warning\" >BTC</span>  </span>';\n                } else {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >BTC</span>   </span>';\n                }\n                break;\n\n            case 'ETH':\n\n                if (val) {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >ETH</span>  </span>';\n                } else {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >ETH</span>  </span>';\n                }\n                break;\n            case 'LTC':\n\n                if (val) {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >LTC</span>  </span>';\n                } else {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >LTC</span>  </span>';\n                }\n                break;\n\n            case 'XRP':\n\n                if (val) {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >XRP</span>  </span>';\n                } else {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >XRP</span>  </span>';\n                }\n                break;\n\n            case 'MKT':\n\n                if (val) {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >MKT</span>  </span>';\n                } else {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >MKT</span>  </span>';\n                }\n                break;\n\n            default:\n                return '<small> <span class=\"glyphicon glyphicon-remove\" style=\"color:red\"></span> </small>';\n        }\n\n\n    };\n}]);\n\nangular.module('search').filter('storage', ['$sce', function ($sce) {\n    return function (toolTip, val) {\n\n        switch (toolTip) {\n            case 'PostgreSQL':\n\n                if (val) {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">   <span class=\"label label-default\" >PS</span>  </span>';\n                } else {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >PS</span>   </span>';\n                }\n                break;\n\n            case 'RethinkDB':\n\n                if (val) {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >RT</span>  </span>';\n                } else {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >RT</span>  </span>';\n                }\n                break;\n            case 'MySQL':\n\n                if (val) {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >MY</span>  </span>';\n                } else {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >MY</span>  </span>';\n                }\n                break;\n\n            case 'Mongodb':\n\n                if (val) {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-warning\" >MO</span>  </span>';\n                } else {\n                    return '<span tooltip-placement=\"top\" uib-tooltip=\"' + toolTip + '\">  <span class=\"label label-default\" >MO</span>  </span>';\n                }\n                break;\n\n\n            default:\n                return '<small> <span class=\"glyphicon glyphicon-remove\" style=\"color:red\"></span> </small>';\n        }\n\n\n    };\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('search').service('SearchService',\n    ['Restangular',  'searchConfig','PeerService', function (Restangular, searchConfig,PeerService) {\n\n        this.searchBlocks = function (searchTerm) {\n            var params = {\n                'requestType': 'getBlock',\n                'height': searchTerm,\n                'includeTransactions': true\n            };\n            return Restangular.all(searchConfig.searchEndPoint).customGET('', params);\n        };\n\n        this.searchIp = function (ip) {\n            return PeerService.searchIp(ip);\n        };\n\n        this.searchTransactionById = function (searchTerm) {\n            var params = {\n                'requestType': 'getTransaction',\n                'transaction': searchTerm\n            };\n            return Restangular.all(searchConfig.searchEndPoint).customGET('', params);\n        };\n\n        this.searchBlockById = function (searchTerm) {\n            var params = {\n                'requestType': 'getBlock',\n                'block': searchTerm\n            };\n            return Restangular.all(searchConfig.searchEndPoint).customGET('', params);\n        };\n\n        this.searchAccounts = function (searchTerm) {\n            var params = {\n                'requestType': 'getAccount',\n                'account': searchTerm,\n                'includeAssets': true,\n                'includeCurrencies': true,\n                'includeEffectiveBalance': true,\n                'includeLessors': true\n            };\n            return Restangular.all(searchConfig.searchEndPoint).customGET('', params);\n        };\n\n        this.searchTransactions = function (searchTerm) {\n            var params = {\n                'requestType': 'getTransaction',\n                'fullHash': searchTerm,\n                'includePhasingResult': true,\n            };\n            return Restangular.all(searchConfig.searchEndPoint).customGET('', params);\n        };\n\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('search').controller('SearchCtrl',\n    ['$scope', 'SearchService', 'DTOptionsBuilder', 'DTColumnBuilder', '$interval', '$uibModal', '$compile',\n        'searchConfig', '$q',\n        function ($scope, SearchService, DTOptionsBuilder, DTColumnBuilder, $interval, $uibModal, $compile,\n                  searchConfig, $q) {\n\n            var errorHandler = function (errorMessage) {\n                $uibModal.open({\n                    animation: true,\n                    templateUrl: 'search/search-error.html',\n                    size: 'sm',\n                    controller: 'ErrorSearchCtrl',\n\n                    resolve: {\n                        params: function () {\n                            return {\n                                message: errorMessage\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.searchValue = function (searchTerm, row) {\n\n                if (searchTerm) {\n                    if (searchTerm.startsWith(searchConfig.searchAccountString)) {\n                        SearchService.searchAccounts(searchTerm).then(function (response) {\n                                if (!response.errorCode) {\n                                    var result = $uibModal.open({\n                                        animation: true,\n                                        templateUrl: 'search/search-account-result.html',\n                                        size: 'lg',\n                                        controller: 'AccountSearchCtrl',\n                                        windowClass: 'block-modal-window',\n                                        resolve: {\n                                            params: function () {\n                                                return {\n                                                    account: response,\n                                                    accountId: searchTerm\n                                                };\n                                            }\n                                        },\n\n                                    });\n                                } else {\n                                    errorHandler(searchTerm + ' account doesn\\'t exists ');\n                                }\n                            }\n                        );\n                    } else if (!isNaN(searchTerm)) {\n                        var blockHeightSearch = SearchService.searchBlocks(searchTerm);\n                        var blockIdSearch = SearchService.searchBlockById(searchTerm);\n                        var transactionSearch = SearchService.searchTransactionById(searchTerm);\n\n                        $q.all([blockHeightSearch, blockIdSearch, transactionSearch]).then(function (results) {\n                            var resultSize = results.length;\n                            for (var i = 0; i < resultSize; i++) {\n                                var response = results[i];\n                                if (!response.errorCode) {\n                                    if (!response.transaction) {\n                                        $uibModal.open({\n                                            animation: true,\n                                            templateUrl: 'search/block.html',\n                                            size: 'lg',\n                                            controller: 'SearchBlockCtrl',\n                                            windowClass: 'block-modal-window',\n                                            resolve: {\n                                                /* jshint ignore:start */\n                                                params: function () {\n                                                    return {\n                                                        'block': response,\n                                                    };\n                                                }\n                                                /* jshint ignore:end */\n                                            }\n                                        });\n                                        break;\n                                    } else {\n                                        $uibModal.open({\n                                            animation: true,\n                                            templateUrl: 'search/search-transaction-result.html',\n                                            size: 'lg',\n                                            controller: 'TransactionSearchCtrl',\n                                            windowClass: 'block-modal-window',\n                                            resolve: {\n                                                /* jshint ignore:start */\n                                                params: function () {\n                                                    return {\n                                                        'transaction': response\n                                                    };\n                                                }\n                                                /* jshint ignore:end */\n                                            }\n                                        });\n                                        break;\n                                    }\n                                }\n                            }\n                            if (resultSize === 0) {\n                                errorHandler(searchTerm + ' Block or transaction doesn\\'t exists ');\n                            }\n                        });\n                    } else if (validateIPaddress(searchTerm)) {\n                        SearchService.searchIp(searchTerm).then(function (response) {\n                                if (response._id) {\n                                    $uibModal.open({\n                                        animation: true,\n                                        templateUrl: 'search/search-peer.html',\n                                        size: 'lg',\n                                        controller: 'SearchIpCtrl',\n                                        windowClass: 'block-modal-window',\n                                        resolve: {\n                                            params: function () {\n                                                return {\n                                                    node: response\n                                                };\n                                            }\n                                        }\n                                    });\n                                } else {\n                                    errorHandler(searchTerm + ' ip doesn\\'t exists ');\n                                }\n                            }\n                        );\n                    }\n                    else {\n                        SearchService.searchTransactions(searchTerm).then(function (response) {\n                            if (!response.errorCode) {\n\n                                $uibModal.open({\n                                    animation: true,\n                                    templateUrl: 'search/search-transaction-result.html',\n                                    size: 'lg',\n                                    controller: 'TransactionSearchCtrl',\n                                    windowClass: 'block-modal-window ',\n                                    resolve: {\n                                        params: function () {\n                                            return {\n                                                'transaction': response\n                                            };\n                                        }\n                                    }\n                                });\n                            } else {\n                                errorHandler(searchTerm + ' is not a valid account, block or transaction');\n                            }\n                        });\n                    }\n                }\n\n            };\n\n            function validateIPaddress(ipaddress) {\n                if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\n                        ipaddress)) {\n                    return true;\n                }\n                return (false);\n            }\n\n            $scope.search = function () {\n                var searchTerm = $scope.searchTerm;\n                $scope.searchValue(searchTerm);\n            };\n        }]\n);\n\nangular.module('search').controller('SearchIpCtrl',\n        ['$scope', 'DTOptionsBuilder', 'DTColumnBuilder', '$compile', '$uibModalInstance', '$q', 'params',\n            function ($scope, DTOptionsBuilder, DTColumnBuilder, $compile, $uibModalInstance, $q, params) {\n\n                $scope.chartOptions = {\n                    chart: {\n                        type: 'discreteBarChart',\n                        height: 100,\n                        margin : {\n                            top: 0,\n                            right: 0,\n                            bottom: 0,\n                            left: 0\n                        },\n                        x: function(d){return d.label;},\n                        y: function(d){return d.value;},\n                        showValues: false,\n                        valueFormat: function(d){\n                            return d3.format(',.2f')(d);\n                        },\n                        duration: 500,\n                        xAxis: {\n                            axisLabel: '',\n                            ticks: 8\n                        },\n                        yAxis: {\n                            axisLabel: '',\n                            axisLabelDistance: 0,\n                            ticks: 8\n                        },\n\n                        color: function(){\n                            return '#9e9e9e';\n                        },\n\n\n                    },\n\n                };\n\n                function buildChartDataArray(data){\n                    var obj = {\n                        key: 'SystemLoad',\n                        values: []\n                    };\n\n                    for (var i = 0; i < data.length; i++) {\n                        obj.values.push( { label: i, value: data[i] } );\n                    }\n\n                    return [obj];\n\n                }\n\n                function buildChartSystemLoadAverage(data){\n                    var obj = {\n                        key: 'SystemLoad',\n                        values: []\n                    };\n\n                    for (var i = 0; i < data.length; i++) {\n\n                        var loadAvg = parseFloat( data[i] );\n                        var loadPct  = (loadAvg * 100 /  (1 * 100) ) * 100;\n                        obj.values.push( { label: i, value: loadPct } );\n                    \n                    }\n                    return [obj];\n\n                }\n\n                $scope.cancel = function () {\n                    $uibModalInstance.dismiss('cancel');\n                };\n\n                $scope.showResult = function () {\n                    $scope.nodes = [params.node];\n                    $scope.chartOptions = $scope.chartOptions;\n                    $scope.chartData1 =  buildChartSystemLoadAverage(  params.node.history_SystemLoadAverage );\n                    $scope.chartData2 =  buildChartDataArray(  params.node.history_freeMemory );\n                    $scope.chartData3 =  buildChartDataArray(  params.node.history_requestProcessingTime );\n                    $scope.chartData4 =  buildChartDataArray(  params.node.history_numberOfActivePeers );\n                };\n\n\n            }]);\n\nangular.module('search').controller('AccountSearchCtrl',\n    ['$scope', 'DTOptionsBuilder', 'timestampFilter', 'amountTQTFilter', 'amountTKNFilter',\n        'isEmptyFilter', 'DTColumnBuilder', '$compile', '$uibModalInstance', '$q', 'params',\n        'supplyFilter', 'currencyModelFilter',\n        function ($scope, DTOptionsBuilder, timestampFilter, amountTQTFilter, amountTKNFilter,\n                  isEmptyFilter, DTColumnBuilder, $compile, $uibModalInstance, $q, params,\n                  supplyFilter, votingModelFilter, currencyModelFilter) {\n\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.showResult = function () {\n                $scope.account = params.account;\n                $scope.accountRs = params.account.accountRS;\n            };\n\n            $scope.qrCode = function () {\n                $scope.accountRs = params.account.accountRS;\n            };\n\n        }]);\n\nangular.module('search').controller('TransactionSearchCtrl',\n    ['$scope', 'Restangular', 'DTOptionsBuilder', 'DTColumnBuilder', '$compile', '$uibModalInstance', '$q', 'params',\n        function ($scope, Restangular, DTOptionsBuilder, DTColumnBuilder, $compile, $uibModalInstance, $q, params) {\n\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.showResult = function () {\n                $scope.transaction = Restangular.stripRestangular(params.transaction);\n            };\n\n            $scope.convertCamelToRegular = function (text) {\n                var result = text.replace(/([A-Z])/g, ' $1');\n                return result.charAt(0).toUpperCase() + result.slice(1);\n            };\n\n            $scope.generateSearchLink = function (searchTerm) {\n                var accountHtml = '<a href=\"\" ng-controller=\"SearchCtrl\" ng-click=\"searchValue(\\'' + searchTerm +\n                    '\\')\">' +\n                    searchTerm + '</a>';\n                return accountHtml;\n            };\n\n        }]);\n\nangular.module('search').controller('ErrorSearchCtrl', ['$scope', '$uibModalInstance', '$q', 'params',\n    function ($scope, $uibModalInstance, $q, params) {\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.showResult = function () {\n            $scope.message = params.message;\n        };\n    }]);\n\nangular.module('search').controller('SearchBlockCtrl',\n    ['$scope', 'timestampFilter', 'amountTQTFilter', 'DTOptionsBuilder', 'DTColumnBuilder', '$compile',\n        '$uibModalInstance', 'params', '$uibModal', 'transactionConfFilter', 'transactionTypeFilter',\n        'blockTransactionsFilter', 'SearchService','Restangular', 'transactionIconSubTypeFilter',\n        function ($scope, timestampFilter, amountTQTFilter, DTOptionsBuilder, DTColumnBuilder, $compile,\n                  $uibModalInstance, params, $uibModal, transactionConfFilter, transactionTypeFilter,\n                  blockTransactionsFilter, SearchService,Restangular, transactionIconSubTypeFilter) {\n\n            $scope.block = params.block;\n\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n\n            $scope.transactions = [];\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions()\n                .withPaginationType('full_numbers')\n                .withOption('serverSide', true)\n                .withDataProp('data')\n                .withOption('processing', true)\n                .withOption('paging', false)\n                .withOption('ordering', false)\n                .withOption('info', false)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var convertedResponse = {'data': [$scope.block]};\n                    callback({\n                        'iTotalRecords': 1,\n                        'iTotalDisplayRecords': 1,\n                        'data': convertedResponse.data\n                    });\n                })\n                .withDisplayLength(1)\n                .withBootstrap();\n\n\n            $scope.dtColumns = [\n                DTColumnBuilder.newColumn('height').withTitle('Height').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-click=\"openDetailsModal(' +\n                            data + ')\">' + data + '</button>';\n                    }),\n\n                DTColumnBuilder.newColumn('block').withTitle('Block Id').notSortable(),\n                DTColumnBuilder.newColumn('numberOfTransactions').withTitle('Transactions').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return blockTransactionsFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('totalAmountTQT').withTitle('Amount').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('totalFeeTQT').withTitle('Fee').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('generatorRS').withTitle('Generator').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return '<a href=\"\" ng-controller=\"SearchCtrl\" ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            data + '</a>';\n                    }),\n                DTColumnBuilder.newColumn('payloadLength').withTitle('Payload').notSortable(),\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return timestampFilter(data);\n                        }\n                    ),\n\n                DTColumnBuilder.newColumn('previousBlock').withTitle('Previous Block').withOption('defaultContent', ' ')\n                    .notSortable(),\n\n\n            ];\n\n            $scope.dtOptionsTransactions = DTOptionsBuilder.newOptions()\n                .withDOM('frtip')\n                .withPaginationType('full_numbers')\n                .withOption('serverSide', false)\n                .withDataProp('data')\n                .withOption('processing', true)\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('info', false)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var block = $scope.block;\n                    callback({\n                        'iTotalRecords': block.transactions.length,\n                        'iTotalDisplayRecords': block.transactions.length,\n                        'data': block.transactions\n                    });\n                })\n                .withDisplayLength(5).withBootstrap();\n\n            $scope.dtColumnsTransactions = [\n                DTColumnBuilder.newColumn('transaction').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                      var details = '<a type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                          ' ng-click=\"searchValue(\\'' + row.fullHash  + '\\')\">' + '<i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i>' + '</a>';\n                      return  details;\n\n                    }),\n\n                DTColumnBuilder.newColumn('type').withTitle('Type').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return transactionIconSubTypeFilter(data, row.subtype);\n                    }),\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return timestampFilter(data);\n                        }\n                    ),\n                DTColumnBuilder.newColumn('amountTQT').withTitle('Amount').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('feeTQT').withTitle('Fee').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('confirmations').withTitle('Conf.').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return transactionConfFilter(data);\n                        }\n                    ),\n                DTColumnBuilder.newColumn('senderRS').withTitle('Sender').notSortable()\n                    .withOption('defaultContent', ' ')\n                    .renderWith(function (data, type, row, meta) {\n                        if (data) {\n                            return '<a href=\"\" ng-controller=\"SearchCtrl\" ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                                data + '</a>';\n                        }\n                        return data;\n                    }),\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                    .withOption('defaultContent', ' ').renderWith(function (data, type, row, meta) {\n                    if (data) {\n                        return '<a href=\"\" ng-controller=\"SearchCtrl\" ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                            data + '</a>';\n                    }\n                    return data;\n                }),\n\n\n            ];\n\n            $scope.dtInstanceCallbackTransactions = {};\n\n            $scope.showBlockDetails = function () {\n                SearchService.searchBlocks(params.blockDetails, false)\n                    .then(function (response) {\n                        $scope.blockDetails = Restangular.stripRestangular(response);\n                    });\n\n            };\n\n            $scope.convertCamelToRegular = function (text) {\n                var result = text.replace(/([A-Z])/g, ' $1');\n                return result.charAt(0).toUpperCase() + result.slice(1);\n            };\n\n            $scope.openDetailsModal = function (data) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'search/block-details.html',\n                    size: 'lg',\n                    controller: 'SearchBlockCtrl',\n                    windowClass: 'block-modal-window',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'blockDetails': data,\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.generateSearchLink = function (searchTerm) {\n                var accountHtml = '<a href=\"\" ng-controller=\"SearchCtrl\" ng-click=\"searchValue(\\'' + searchTerm +\n                    '\\')\">' +\n                    searchTerm + '</a>';\n                return accountHtml;\n            };\n\n            $scope.generateNumberOfTxsHtml = function (number) {\n                return getBlocksTxs(number);\n            };\n        }]\n);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('chain-viewer', ['baseClient', 'node', 'options']);\n\nangular.module('chain-viewer').constant('chainViewerConfig', {\n    'apiUrl': 'http://199.127.137.169:23457',\n    'peerUrl':'http://199.127.137.169:8888',\n    'peerEndPoint': 'api/nodes',\n    'endPoint': 'api',\n});\n\nangular.module('chain-viewer').config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n\n    $stateProvider.state('client.signedin.chainviewer', {\n        url: '^/chainviewer',\n        templateUrl: './extensions/chain-viewer/views/main.html',\n        abstract: true\n    }).state('client.signedin.chainviewer.blocks', {\n        url: '^/chainviewer/blocks',\n        templateUrl: './extensions/chain-viewer/views/blocks.html',\n        controller:'ChainViewerBlocksCtrl'\n    }).state('client.signedin.chainviewer.transactions', {\n        url: '^/chainviewer/transactions',\n        templateUrl: './extensions/chain-viewer/views/transactions.html',\n        controller:'ChainViewerTransactionsCtrl'\n    }).state('client.signedin.chainviewer.peers', {\n        url: '^/chainviewer/peers',\n        templateUrl: './extensions/chain-viewer/views/peers.html',\n        controller:'ChainViewerPeersCtrl'\n    }).state('client.signedin.chainviewer.unconfirmed', {\n        url: '^/chainviewer/unconfirmed',\n        templateUrl: './extensions/chain-viewer/views/unconfirmed.html',\n        controller:'ChainViewerUnconfirmedTransactionsCtrl'\n    });\n\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('chain-viewer').service('ChainViewerService',\n    ['Restangular', 'chainViewerConfig', 'NodeService', 'OptionsService', 'PeerService',\n        function (Restangular, chainViewerConfig, NodeService, OptionsService, PeerService) {\n\n            this.getBlocks = function (firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getBlocks',\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(chainViewerConfig.endPoint).customGET('', params);\n\n            };\n\n            this.getTransactions = function (firstIndex, lastIndex) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getTransactions',\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex\n                };\n                return Restangular.all(chainViewerConfig.endPoint).customGET('', params);\n            };\n\n            this.getPeers = function (page, results) {\n                Restangular.setBaseUrl(PeerService.getPeerEndPoints()[0]);\n                var params = {\n                    'page': page,\n                    'results': results,\n                    'filter': 'numberOfActivePeers',\n                    'order': 'desc'\n                };\n                return Restangular.all('').customGET('', params);\n\n\n            };\n\n            this.getUnconfirmedTransactions = function () {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getUnconfirmedTransactions'\n                };\n                return Restangular.all(chainViewerConfig.endPoint).customGET('', params);\n\n            };\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('chain-viewer').controller('ChainViewerBlocksCtrl',\n    ['$scope', 'ChainViewerService', 'baseConfig', 'timestampFilter', 'amountTQTFilter', 'DTOptionsBuilder',\n        'DTColumnBuilder', '$interval', '$uibModal', '$compile', 'transactionConfFilter', 'searchTermFilter',\n        'blockTransactionsFilter', '$sanitize',\n        function ($scope, ChainViewerService, baseConfig, timestampFilter, amountTQTFilter, DTOptionsBuilder,\n                  DTColumnBuilder, $interval, $uibModal, $compile, transactionConfFilter, searchTermFilter,\n                  blockTransactionsFilter, $sanitize) {\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('blocks')\n                .withOption('paging', true)\n                .withOption('info', false)\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    ChainViewerService.getBlocks(data.start, endIndex).then(function (response) {\n\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'blocks': response.blocks\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n                DTColumnBuilder.newColumn('height').withTitle('Details').withOption('bSortable', false).notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var details = '<a type=\"button\" class=\"btn btn-infinity btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' + data + '</a>';\n                        return details;\n                    }),\n\n                DTColumnBuilder.newColumn('block').withTitle('Id').notSortable(),\n\n                DTColumnBuilder.newColumn('numberOfTransactions').withTitle('Txs').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return blockTransactionsFilter(data);\n                        }\n                    ),\n                DTColumnBuilder.newColumn('totalAmountTQT').withTitle('Amount').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('totalFeeTQT').withTitle('Fee').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('generatorRS').withTitle('Generator').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return timestampFilter(data);\n                        }\n                    ),\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n\n            $scope.reloadBlocks = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n\n        }]);\n\nangular.module('chain-viewer').controller('ChainViewerTransactionsCtrl',\n    ['$scope', 'ChainViewerService', 'baseConfig', 'amountTQTFilter',\n        'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder', '$interval', '$uibModal', '$compile',\n        'searchTermFilter', 'transactionTypeFilter', 'transactionConfFilter', 'transactionIconSubTypeFilter', '$sanitize',\n        function ($scope, ChainViewerService, baseConfig, amountTQTFilter, timestampFilter,\n                  DTOptionsBuilder, DTColumnBuilder, $interval, $uibModal, $compile, searchTermFilter,\n                  transactionTypeFilter, transactionConfFilter, transactionIconSubTypeFilter, $sanitize) {\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('serverSide', true)\n                .withDataProp('transactions')\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var endIndex = data.start + data.length - 1;\n                    ChainViewerService.getTransactions(data.start, endIndex)\n                        .then(function (response) {\n                            callback({\n                                'iTotalRecords': 1000,\n                                'iTotalDisplayRecords': 1000,\n                                'transactions': response.transactions\n                            });\n                        });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n                DTColumnBuilder.newColumn('Id').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var details = '<a type=\"button\" class=\"btn btn-infinity btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' + '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</a>';\n                        return details;\n                    }),\n                DTColumnBuilder.newColumn('type').withTitle('Type').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return transactionIconSubTypeFilter(data, row.subtype);\n                    }),\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return timestampFilter(data);\n                        }\n                    ),\n                DTColumnBuilder.newColumn('amountTQT').withTitle('Amount').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('feeTQT').withTitle('Fee').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('confirmations').withTitle('Conf.').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return transactionConfFilter(data);\n                        }\n                    ),\n                DTColumnBuilder.newColumn('senderRS').withTitle('Sender').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    })\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n\n            $scope.reloadTransactions = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n        }]);\n\nangular.module('chain-viewer').controller('ChainViewerPeersCtrl',\n    ['$scope', 'ChainViewerService', 'DTOptionsBuilder', 'DTColumnBuilder', '$interval', '$uibModal', '$compile',\n        'searchTermFilter', 'numericalStringFilter', '$sanitize',\n        function ($scope, ChainViewerService, DTOptionsBuilder, DTColumnBuilder, $interval, $uibModal, $compile,\n                  searchTermFilter, numericalStringFilter, $sanitize) {\n\n            $scope.chartOptions = {\n                chart: {\n                    type: 'discreteBarChart',\n                    height: 20,\n                    margin: {\n                        top: 0,\n                        right: 0,\n                        bottom: 0,\n                        left: 0\n                    },\n                    x: function (d) {\n                        return d.label;\n                    },\n                    y: function (d) {\n                        return d.value;\n                    },\n                    showValues: false,\n\n                    duration: 500,\n                    xAxis: {\n                        axisLabel: '',\n                        axisLabelDistance: 0,\n                        ticks: 0\n                    },\n                    yAxis: {\n                        axisLabel: '',\n                        axisLabelDistance: 0,\n                        ticks: 0\n                    },\n\n                    color: function () {\n                        return '#9e9e9e';\n                    },\n\n\n                },\n\n            };\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('info', false)\n                .withOption('ordering', false)\n                .withOption('info', false)\n                .withOption('serverSide', true)\n                .withDataProp('peers')\n                .withOption('processing', true)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    var pageNum = (data.start / data.length) + 1;\n                    ChainViewerService.getPeers(pageNum, data.length).then(function (response) {\n                        var data = {'peers': response};\n                        callback({\n                            'iTotalRecords': 1000,\n                            'iTotalDisplayRecords': 1000,\n                            'peers': data.peers\n                        });\n                    });\n                })\n                .withDisplayLength(10).withBootstrap()\n                .withOption('rank', [1, 'desc'])\n                .withOption('rowReordering', true);\n\n            $scope.dtColumns = [\n                DTColumnBuilder.newColumn('rank').withTitle('Rank').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return numericalStringFilter(data);\n                    }),\n\n\n                DTColumnBuilder.newColumn('_id').withTitle('Node Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var details = '<a type=\"button\" class=\"btn btn-infinity btn-xs\" style=\"width:75%;\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' + data + '</a>';\n                        return details;\n                    }),\n\n                DTColumnBuilder.newColumn('numberOfActivePeers').withTitle('Peers').notSortable(),\n\n                DTColumnBuilder.newColumn('SystemLoadAverage').withTitle('CPU').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                      var numCPU = parseInt(row.availableProcessors);\n                      var loadAvg = parseFloat(row.SystemLoadAverage);\n                      var loadPct = (loadAvg * 100 / (numCPU * 100) ) * 100;\n\n                      return (loadPct.toFixed(2) + ' %');\n                    }),\n\n                DTColumnBuilder.newColumn('history_SystemLoadAverage').withTitle('CPU Load History').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        var tmpArr = [];\n\n                        for (var i = 0; i < data.length - 30; i++) {\n\n                            var loadAvg = parseFloat(data[i]);\n                            var loadPct = (loadAvg * 100 / (1 * 100) ) * 100;\n\n                            tmpArr.push({label: i, value: loadPct});\n\n                        }\n\n                        var dd = [{values: []}];\n                        dd[0].values = tmpArr;\n\n                        return '<nvd3 options=\"chartOptions\" data=' + JSON.stringify(dd) + '></nvd3>';\n\n                    }),\n\n                DTColumnBuilder.newColumn('lastBlockchainFeeder').withTitle('Last Feeder').notSortable(),\n\n                DTColumnBuilder.newColumn('numberOfBlocks').withTitle('Blocks').notSortable(),\n\n                DTColumnBuilder.newColumn('version').withTitle('Version').notSortable(),\n\n                DTColumnBuilder.newColumn('superNodeEnable').withTitle('Services').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        return getTickMarkUiModel(row.superNodeEnable, 'SuperNode Services Enabled');\n                    }),\n\n                DTColumnBuilder.newColumn('apiServerEnable').withTitle('API').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n\n                        return getTickMarkUiModel(row.apiServerEnable, 'API Enabled');\n                    }),\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n\n            $scope.reloadPeers = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n            function getTickMarkUiModel(value, toolTipText) {\n                if (value === true) {\n                    return '<small> <span tooltip-placement=\"top\" uib-tooltip=\"' + toolTipText +\n                        '\" class=\"glyphicon glyphicon-ok\" style=\"color:black\"></span></small>';\n                } else {\n                    return '<small> <span tooltip-placement=\"top\" uib-tooltip=\"' + toolTipText +\n                        '\" class=\"glyphicon glyphicon-remove\" style=\"color:black\"></span></small>';\n                }\n            }\n\n        }]);\n\nangular.module('chain-viewer').controller('ChainViewerUnconfirmedTransactionsCtrl',\n    ['$scope', 'ChainViewerService', 'baseConfig', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder',\n        'DTColumnBuilder', '$interval', '$uibModal', '$compile', 'searchTermFilter', 'transactionTypeFilter',\n        'transactionConfFilter', 'transactionIconSubTypeFilter',\n        function ($scope, ChainViewerService, baseConfig, amountTQTFilter, timestampFilter,\n                  DTOptionsBuilder, DTColumnBuilder, $interval, $uibModal, $compile, searchTermFilter,\n                  transactionTypeFilter, transactionConfFilter, transactionIconSubTypeFilter) {\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                .withDOM('frtip')\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('info', false)\n                .withOption('serverSide', false)\n                .withDataProp('unconfirmedTransactions')\n                .withOption('paging', true)\n                .withOption('ordering', false)\n                .withOption('processing', false)\n                .withOption('bFilter', false)\n                .withOption('fnRowCallback',\n                    function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                        $compile(nRow)($scope);\n                    })\n                .withOption('ajax', function (data, callback, settings) {\n                    ChainViewerService.getUnconfirmedTransactions()\n                        .then(function (response) {\n                            callback({\n                                'iTotalRecords': response.unconfirmedTransactions.length,\n                                'iTotalDisplayRecords': response.unconfirmedTransactions.length,\n                                'unconfirmedTransactions': response.unconfirmedTransactions\n                            });\n                        });\n                })\n                .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n                DTColumnBuilder.newColumn('transaction').withTitle('Details').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        var details = '<a type=\"button\" class=\"btn btn-infinity btn-xs\" ng-controller=\"SearchCtrl\"' +\n                            ' ng-click=\"searchValue(\\'' + data + '\\')\">' + '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</a>';\n                        return details;\n                    }),\n                DTColumnBuilder.newColumn('type').withTitle('Type').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return transactionIconSubTypeFilter(data, row.subtype);\n                    }),\n\n                DTColumnBuilder.newColumn('timestamp').withTitle('Date').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return timestampFilter(data);\n                        }\n                    ),\n                DTColumnBuilder.newColumn('amountTQT').withTitle('Amount').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('feeTQT').withTitle('Fee').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return amountTQTFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('confirmations').withTitle('Conf.').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                            return transactionConfFilter(data);\n                        }\n                    ),\n                DTColumnBuilder.newColumn('senderRS').withTitle('Sender').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    }),\n                DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                    .renderWith(function (data, type, row, meta) {\n                        return searchTermFilter(data);\n                    })\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n\n            $scope.reloadUnconfirmedTransactions = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('macap-viewer', ['baseClient', 'node', 'options']);\n\nangular.module('macap-viewer').constant('macapViewerConfig', {\n\n    'macapUrl':'http://185.103.75.217:8892',\n    'macapEndPoint': 'api/v1/get',\n\n});\n\nangular.module('macap-viewer').config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n\n    $stateProvider.state('client.signedin.macapviewer', {\n        url: '^/macapviewer',\n        templateUrl: './extensions/macap-viewer/views/main.html',\n        abstract: true\n    }).state('client.signedin.macapviewer.macap', {\n        url: '^/macapviewer/macap',\n        templateUrl: './extensions/macap-viewer/views/macap.html',\n        controller:'MaCapViewerMainCtrl'\n    });\n\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('macap-viewer').service('MaCapViewerService', ['Restangular', 'macapViewerConfig',\n    function (Restangular, macapViewerConfig) {\n\n      this.getMaCap = function (page, results) {\n          Restangular.setBaseUrl(macapViewerConfig.macapUrl  );\n          var params = {\n              'page': page,\n              'results': results,\n          };\n          return Restangular.all(macapViewerConfig.macapEndPoint).customGET('', params);\n\n\n      };\n\n      }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('macap-viewer').controller('MaCapViewerMainCtrl',\n    ['$scope', 'MaCapViewerService', 'baseConfig', 'numericalStringFilter', 'DTOptionsBuilder',\n        'DTColumnBuilder', '$interval', '$uibModal', '$compile', 'upDownFilter', '$sanitize',\n        function ($scope, MaCapViewerService, baseConfig, numericalStringFilter, DTOptionsBuilder,\n                  DTColumnBuilder, $interval, $uibModal, $compile, upDownFilter, $sanitize) {\n\n                    $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                        .withDOM('frtip')\n                        .withOption('info', false)\n                        .withOption('ordering', false)\n                        .withOption('info', false)\n                        .withOption('serverSide', true)\n                        .withDataProp('macap')\n                        .withOption('processing', true)\n                        .withOption('bFilter', false)\n                        .withOption('fnRowCallback',\n                            function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                                $compile(nRow)($scope);\n                            })\n                        .withOption('ajax', function (data, callback, settings) {\n                            var pageNum = (data.start / data.length) + 1;\n                            MaCapViewerService.getMaCap(pageNum, data.length).then(function (response) {\n                              var data = {'macap': response};\n                              callback({\n                                    'iTotalRecords': 1000,\n                                    'iTotalDisplayRecords': 1000,\n                                    'macap': data.macap\n                                });\n                            }, function (error) {\n                                 callback({\n                                     'iTotalRecords': 0,\n                                     'iTotalDisplayRecords': 0,\n                                     'macap': []\n                                 });\n                            });\n\n                        })\n                        .withDisplayLength(10).withBootstrap()\n                        .withOption('rank', [1, 'desc'])\n                        .withOption('rowReordering', true);\n\n                    $scope.dtColumns = [\n                        DTColumnBuilder.newColumn('rank').withTitle('Rank').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n\n                                return $sanitize(data) ;\n                            }),\n\n                      DTColumnBuilder.newColumn('symbol').withTitle('Symbol').notSortable()\n                          .renderWith(function (data, type, row, meta) {\n                              return '<strong>' + $sanitize(data) + '</strong>';\n                          }),\n\n\n                        DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return $sanitize(data);\n                            }),\n\n                        DTColumnBuilder.newColumn('price_usd').withTitle('Price USD').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return data.toLocaleString('en-US', {maximumFractionDigits: 4, minimumFractionDigits: 4});\n                            }),\n\n\n                        DTColumnBuilder.newColumn('price_btc').withTitle('Price BTC').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return data.toLocaleString('en-US', {maximumFractionDigits: 8, minimumFractionDigits: 8});\n                            }),\n\n                        DTColumnBuilder.newColumn('market_cap_usd').withTitle('Market Cap USD').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return data.toLocaleString('en-US', {maximumFractionDigits: 0, minimumFractionDigits: 0});\n                            }),\n\n                        DTColumnBuilder.newColumn('available_supply').withTitle('Supply').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return data.toLocaleString('en-US', {maximumFractionDigits: 0, minimumFractionDigits: 0});\n                            }),\n\n                        DTColumnBuilder.newColumn('percent_change_1h').withTitle('1 H').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return upDownFilter(data);\n                            }),\n\n                        DTColumnBuilder.newColumn('percent_change_24h').withTitle('24 H').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return upDownFilter(data);\n                            }),\n\n                        DTColumnBuilder.newColumn('percent_change_7d').withTitle('7 D').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return upDownFilter(data);\n                            }),\n\n                    ];\n\n                    $scope.dtInstanceCallback = function (_dtInstance) {\n                        $scope.dtInstance = _dtInstance;\n                    };\n\n                    $scope.reloadMaCap = function () {\n                        if ($scope.dtInstance) {\n                            $scope.dtInstance._renderer.rerender();\n                        }\n                    };\n\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('news-viewer',\n    ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node','options']);\n\nangular.module('news-viewer').constant('newsViewerConfig', {\n  'newsUrl':'http://199.127.137.169:8889',\n  'newsEndPoint': 'api/v1/news',\n});\nangular.module('news-viewer').config(['RestangularProvider', 'newsViewerConfig', '$stateProvider', '$urlRouterProvider',\n    function (RestangularProvider, newsViewerConfig, $stateProvider, $urlRouterProvider) {\n\n        $stateProvider.state('client.signedin.newsviewer', {\n            url: '^/newsviewer',\n            templateUrl: './extensions/news-viewer/views/main.html',\n            abstract: true\n        }).state('client.signedin.newsviewer.news', {\n            url: '^/newsviewer/news',\n            templateUrl: './extensions/news-viewer/views/news.html',\n            controller:'NewsViewerMainCtrl'\n        });\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('news-viewer').service('NewsViewerService', ['Restangular', 'newsViewerConfig',\n    function (Restangular, newsViewerConfig) {\n\n      this.getNews = function (page, results) {\n          Restangular.setBaseUrl(newsViewerConfig.newsUrl  );\n          var params = {\n              'page': page,\n              'results': results,\n              'order': 'desc'\n          };\n          return Restangular.all(newsViewerConfig.newsEndPoint).customGET('', params);\n\n      };\n\n      }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\n// Priority  - 0 = low  / 5 = medium / 10 = high\n// Type      - 0 = news / 1 = announcement / 2 = Voting Result\n// section   - 0 = Info / 1 = Feature / 2 = Update / 3 = Security / 4 = Voting / 5 = Improvement / 6 = Alert\n\nangular.module('news-viewer').controller('NewsViewerMainCtrl',\n    ['$scope', 'NewsViewerService', 'baseConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', '$interval', '$uibModal', '$compile', 'timestampFilter',\n        '$sanitize', '$compile', '$sce', 'CommonsService', 'newsTypeFilter', 'newsSectionFilter', 'newsPriorityFilter',\n        function ($scope, NewsViewerService, baseConfig, DTOptionsBuilder,\n                  DTColumnBuilder, $interval, $uibModal, $compile, timestampFilter,\n                  $sanitize, $compile, $sce, CommonsService, newsTypeFilter, newsSectionFilter, newsPriorityFilter) {\n\n            $scope.channel = 'Foundation';\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                                               .withDOM('frtip')\n                                               .withOption('info', false)\n                                               .withOption('ordering', false)\n                                               .withOption('info', false)\n                                               .withOption('serverSide', true)\n                                               .withDataProp('news')\n                                               .withOption('processing', true)\n                                               .withOption('bFilter', false)\n\n                                               .withOption('fnRowCallback',\n                                                   function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                                                       $compile(nRow)($scope);\n                                                   })\n                                               .withOption('ajax', function (data, callback, settings) {\n                                                   var pageNum = (data.start / data.length) + 1;\n                                                   NewsViewerService.getNews(pageNum, data.length)\n                                                                    .then(function (response) {\n\n                                                                      // console.log(response);\n\n                                                                      response = CommonsService.sanitizeJson(response);\n                                                                      $scope.data = {'news': response};\n                                                                        callback({\n                                                                            'iTotalRecords': 1000,\n                                                                            'iTotalDisplayRecords': 1000,\n                                                                            'news': $scope.data.news,\n                                                                        });\n                                                                    }, function (error) {\n                                                                        callback({\n                                                                            'iTotalRecords': 0,\n                                                                            'iTotalDisplayRecords': 0,\n                                                                            'news': []\n                                                                        });\n                                                                    });\n\n                                               })\n                                               .withDisplayLength(10).withBootstrap()\n                                               .withOption('rank', [1, 'desc'])\n                                               .withOption('rowReordering', true);\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('date').withTitle('Date').notSortable()\n                               .renderWith( function (data, type, row, meta) {\n                                   return $sanitize(data);\n                               }),\n\n               DTColumnBuilder.newColumn('priority').withTitle('Priority').notSortable()\n                              .renderWith(function (data, type, row, meta) {\n                                  return newsPriorityFilter(data);\n                              }),\n\n                DTColumnBuilder.newColumn('title').withTitle('Title').notSortable()\n                               .renderWith(  function (data, type, row, meta)  {\n                                   return $sanitize(data);\n                               }),\n\n                DTColumnBuilder.newColumn('section').withTitle('Section').notSortable()\n                               .renderWith( function (data, type, row, meta)  {\n                                   return newsSectionFilter(data);\n                               } ),\n\n                 DTColumnBuilder.newColumn('_id').withTitle('Action').notSortable()\n                                .renderWith(function (data, type, row, meta) {\n\n                                    var but_col_info = 'btn-success';\n                                    var tt_info = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                        ' \"Read News\"';\n\n                                    var info = '<button type=\"button\" class=\"btn ' + but_col_info + ' btn-xs\" + '\n                                        + tt_info +\n                                        ' ng-controller=\"NewsViewerMainCtrl\"' +\n                                        ' ng-click=\"openReadNewsModal(\\'' + meta.row  +\n                                        '\\')\" ng-disabled=\"' + 'false' +\n                                        '\"> <i class=\"fa fa-envelope-open-o\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                                    return info;\n                                }),\n\n            ];\n\n            $scope.openReadNewsModal = function (row) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'extensions/news-viewer/modals/read-news-form.html',\n                    size: 'lg',\n                    controller: 'StepNewsFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return $scope.data.news[row];\n                        }\n                    }\n                });\n            };\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n\n            $scope.reloadNews = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n        }]);\n\nangular.module('news-viewer').controller('StepNewsFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n      $scope.cancel = function () {\n          $uibModalInstance.dismiss('cancel');\n      };\n\n      $scope.$on('close-modal', function () {\n          $uibModalInstance.dismiss('cancel');\n      });\n\n        var readNewsSteps = [\n            {\n                templateUrl: 'extensions/news-viewer/modals/read-news-details.html',\n                title: 'Read News',\n                controller: 'NewsViewerReadCtrl',\n                isolatedScope: true,\n                data: params\n            }\n        ];\n\n        $scope.steps = {};\n\n        $scope.steps.readNewsForm = readNewsSteps;\n\n    }]);\n\nangular.module('news-viewer').controller('NewsViewerReadCtrl',\n    ['$scope', '$state', '$rootScope', 'CommonsService', 'SessionStorageService',\n        'loginConfig', 'NewsViewerService', 'alertConfig', 'AlertService', 'CryptoService',\n        function ($scope, $state, $rootScope, CommonsService, SessionStorageService,\n                  loginConfig, NewsViewerService, alertConfig, AlertService, CryptoService) {\n\n        $scope.readNews = function () {\n          var params = $scope.$getActiveStep().data;\n          $scope.params = params;\n        };\n\n        $scope.getLatestNews = function (page, results) {\n            NewsViewerService.getNews(page, results).then(function (success) {\n                $scope.news_content = success;\n            }, function (error) {\n\n            })\n        }\n\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('servicemon',\n    ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node','options']);\n\nangular.module('servicemon').config(['RestangularProvider', 'serviceMonConfig', '$stateProvider', '$urlRouterProvider',\n    function (RestangularProvider, serviceMonConfig, $stateProvider, $urlRouterProvider) {\n\n        $stateProvider.state('client.signedin.servicemon', {\n            url: '^/servicemon',\n            templateUrl: './extensions/servicemon/views/main.html',\n            abstract: true\n        }).state('client.signedin.servicemon.view', {\n            url: '^/servicemon/view',\n            templateUrl: './extensions/servicemon/views/servicemon.html',\n            controller:'ServiceStatusCtrl'\n        });\n    }]);\n\nangular.module('servicemon').constant('ServicePeerEndpoints', [\n  {'label': 'Peer #1',  'ip': '185.35.137.7'   , 'url': 'http://185.35.137.7:8888/api/nodes'},\n  {'label': 'Peer #2',  'ip': '185.103.75.217' , 'url': 'http://185.103.75.217:8888/api/nodes'},\n  {'label': 'Peer #3',  'ip': '185.35.139.101' , 'url': 'http://185.35.139.101:8888/api/nodes'},\n  {'label': 'Peer #4',  'ip': '185.35.139.102' , 'url': 'http://185.35.139.102:8888/api/nodes'},\n  {'label': 'Peer #5',  'ip': '185.35.139.103' , 'url': 'http://185.35.139.103:8888/api/nodes'},\n  {'label': 'Peer #6',  'ip': '185.35.139.104' , 'url': 'http://185.35.139.104:8888/api/nodes'},\n  {'label': 'Peer #7',  'ip': '185.35.139.105' , 'url': 'http://185.35.139.105:8888/api/nodes'},\n  {'label': 'Peer #8',  'ip': '46.244.20.41'   , 'url': 'http://46.244.20.41:8888/api/nodes'},\n  {'label': 'Peer #9',  'ip': '208.95.1.177'   , 'url': 'http://208.95.1.177:8888/api/nodes'},\n  {'label': 'Peer #10', 'ip': '199.127.137.169', 'url': 'http://199.127.137.169:8888/api/nodes'}\n]);\n\nangular.module('servicemon').constant('ServiceMacapEndpoints', [\n  {'label': 'MaCap', 'ip': '185.103.75.217', 'url': 'http://185.103.75.217:8892/api/v1/get'}\n]);\n\nangular.module('servicemon').constant('ServiceWebsiteEndpoints', [\n    {'label': 'Peerexplorer I', 'ip': '185.103.75.217', 'url': 'http://185.103.75.217/peer/images/logo_nav.png'},\n    {'label': 'Blockexplorer I', 'ip': '185.103.75.217', 'url': 'http://185.103.75.217/block/images/logo_nav.png'},\n\n    {'label': 'Peerexplorer II', 'ip': '185.35.139.101 ', 'url': 'http://185.35.139.101/peer/images/logo_nav.png'},\n    {'label': 'Blockexplorer II', 'ip': '185.35.139.101 ', 'url': 'http://185.35.139.101/block/images/logo_nav.png'},\n\n    {'label': 'Online Wallet #1', 'ip': '46.244.20.41', 'url': 'http://46.244.20.41/wallet/images/logo.png'},\n    {'label': 'Online Wallet #1', 'ip': '185.35.137.7', 'url': 'http://185.35.137.7/wallet/images/logo.png'},\n    {'label': 'Online Wallet #1', 'ip': '208.95.1.177', 'url': 'http://208.95.1.177/wallet/images/logo.png'},\n\n    {'label': 'Online Wallet SSL', 'ip': '185.35.139.105', 'url': 'https://securewallet.infinity-economics.org/wallet/images/logo.png'}\n]);\n\nangular.module('servicemon').constant('ServiceTestnetEndpoints', [\n  {'label': 'Online Wallet', 'ip': '185.35.138.140', 'url': 'http://185.35.138.140/wallet/images/logo.png'},\n  {'label': 'Peerexplorer', 'ip': '185.35.138.140', 'url': 'http://185.35.138.140/peer/images/logo_nav.png'},\n  {'label': 'Blockexplorer', 'ip': '185.35.138.140', 'url': 'http://185.35.138.140/block/images/logo_nav.png'}\n]);\n\nangular.module('servicemon').constant('ServiceApiEndpoints', [\n  {'label': 'API Node', 'ip': '199.127.137.169', 'url': 'http://199.127.137.169:9005/docs/images/favicon-16x16.png'},\n  {'label': 'API Backends', 'ip': '199.127.137.169', 'url': 'http://199.127.137.169:9006/docs/images/favicon-16x16.png'}\n]);\n\nangular.module('servicemon').constant('serviceMonConfig', {\n    'apiUrl': 'api/nodes',\n});\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('servicemon').service('ServiceMonService', ['Restangular', 'serviceMonConfig', '$q',\n    function (Restangular, serviceMonConfig, $q) {\n\n      this.getPeerStatus = function (url, website) {\n          if (!website) {\n              Restangular.setBaseUrl(url);\n              return Restangular.all('').one('').get();\n          } else {\n              return $q(function (resolve, reject) {\n                  var image = new Image();\n                  image.src = url;\n                  image.onload = function () {\n                      resolve(image);\n                  };\n                  image.onerror = function (e) {\n                      reject(e);\n                  };\n              });\n          }\n\n      };\n\n      }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('servicemon').controller('ServiceStatusCtrl',\n    ['$scope', 'ServiceMonService', 'ServicePeerEndpoints', 'ServiceMacapEndpoints','ServiceWebsiteEndpoints', 'ServiceTestnetEndpoints', 'ServiceApiEndpoints' , 'isOnlineFilter', '$sce',\n        function ($scope, ServiceMonService, ServicePeerEndpoints, ServiceMacapEndpoints,ServiceWebsiteEndpoints, ServiceTestnetEndpoints, ServiceApiEndpoints, isOnlineFilter, $sce) {\n\n            $scope.peerEndpoints = ServicePeerEndpoints;\n            $scope.macapEndpoints = ServiceMacapEndpoints;\n            $scope.websiteEndpoints = ServiceWebsiteEndpoints;\n            $scope.testnetEndpoints = ServiceTestnetEndpoints;\n            $scope.apiEndpoints = ServiceApiEndpoints;\n\n            $scope.trustAsHtml = $sce.trustAsHtml;\n\n            $scope.IP_STATUS = {};\n\n            $scope.getAllIpStatus = function (ipArray,website) {\n\n                angular.forEach(ipArray, function (value, key) {\n                    ServiceMonService.getPeerStatus(value.url,website).then(function (success) {\n                        //console.log(success);\n                        $scope.IP_STATUS[value.url] = $scope.IP_STATUS[value.url] || {};\n                        $scope.IP_STATUS[value.url].status = '<span class=\"label label-success\">ONLINE</span>';\n                        $scope.IP_STATUS[value.url].timestamp = new Date().toString();\n                    }, function (error) {\n                        //console.log(error);\n                        $scope.IP_STATUS[value.url] = $scope.IP_STATUS[value] || {};\n                        $scope.IP_STATUS[value.url].status = '<span class=\"label label-warning\">OFFLINE</span>';\n                        $scope.IP_STATUS[value.url].timestamp = new Date().toString();\n                    });\n                });\n            };\n\n            $scope.getStatus = function (check, website) {\n\n                var url = check.url;\n                $scope.IP_STATUS[url] = {};\n                return ServiceMonService.getPeerStatus(url,website).then(function (success) {\n                    $scope.IP_STATUS[url] = $scope.IP_STATUS[url] || {};\n                    $scope.IP_STATUS[url].status = '<span class=\"label label-success\">ONLINE</span>';\n                    $scope.IP_STATUS[url].timestamp = new Date().toString();\n                }, function (error) {\n                    $scope.IP_STATUS[url] = $scope.IP_STATUS[url] || {};\n                    $scope.IP_STATUS[url].status = '<span class=\"label label-warning\">OFFLINE</span>';\n                    $scope.IP_STATUS[url].timestamp = new Date().toString();\n                });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('atworkbench',\n    ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node','options']);\n\nangular.module('atworkbench').constant('ATWorkbenchConfig', {\n\n});\nangular.module('atworkbench').config(['RestangularProvider', 'ATWorkbenchConfig', '$stateProvider', '$urlRouterProvider',\n    function (RestangularProvider, ATWorkbenchConfig, $stateProvider, $urlRouterProvider) {\n\n        $stateProvider.state('client.signedin.atworkbench', {\n            url: '^/atworkbench',\n            templateUrl: './extensions/atworkbench/views/main.html',\n            abstract: true\n        }).state('client.signedin.atworkbench.start', {\n            url: '^/atworkbench/start',\n            templateUrl: './extensions/atworkbench/views/start.html',\n            controller:'ATWorkbenchMainCtrl'\n        });\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('atworkbench').service('ATWorkbenchService', ['Restangular', 'ATWorkbenchConfig',\n    function (Restangular, ATWorkbenchConfig) {\n\n\n\n      }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('atworkbench').controller('ATWorkbenchMainCtrl',\n    ['$scope', 'ATWorkbenchService', 'baseConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', '$interval', '$uibModal', '$compile', 'timestampFilter',\n        '$sanitize', '$compile', '$sce', 'CommonsService',\n        function ($scope, ATWorkbenchService, baseConfig, DTOptionsBuilder,\n                  DTColumnBuilder, $interval, $uibModal, $compile, timestampFilter,\n                  $sanitize, $compile, $sce, CommonsService) {\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('extensions', ['chain-viewer', 'macap-viewer', 'news-viewer', 'servicemon', 'atworkbench']);\n\nangular.module('extensions').constant('extensionsConfig', {\n    'extensionsEndPoint': 'api'\n});\nangular.module('messages').config(['RestangularProvider', 'messagesConfig', '$stateProvider', '$urlRouterProvider',\n    function (RestangularProvider, messagesConfig, $stateProvider, $urlRouterProvider) {\n\n        RestangularProvider.setRestangularFields({\n            options: '_options'\n        });\n\n        $stateProvider.state('client.signedin.extensions', {\n            url: '^/extensions',\n            templateUrl: './extensions/views/main.html',\n            abstract: true\n        }).state('client.signedin.extensions.welcome', {\n            url: '^/extensions/welcome',\n            templateUrl: './extensions/views/welcome.html',\n        });\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('tools',\n    ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node','options']);\n\nangular.module('tools').constant('toolsConfig', {\n    'messagesEndPoint': 'api'\n});\nangular.module('tools').config(['RestangularProvider', 'messagesConfig', '$stateProvider', '$urlRouterProvider',\n    function (RestangularProvider, toolsConfig, $stateProvider, $urlRouterProvider) {\n\n\n\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('tools').service('ToolsService',\n    ['nodeConfig', 'SessionStorageService', 'NodeService', 'baseConfig', 'toolsConfig', 'Restangular', 'loginConfig',\n        'TransactionService', '$rootScope', 'OptionsService',\n        function (nodeConfig, SessionStorageService, NodeService, baseConfig, messagesConfig, Restangular, loginConfig,\n                  TransactionService, $rootScope, OptionsService) {\n\n            this.decodeToken = function (token, website) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'decodeToken',\n                    'website': website,\n                    'token': token\n                };\n                return Restangular.all(messagesConfig.messagesEndPoint).customGET('', params);\n            };\n\n            this.parseTransaction = function (transactionBytes) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'parseTransaction',\n                    'transactionBytes': transactionBytes\n\n                };\n                return Restangular.all(messagesConfig.messagesEndPoint).customGET('', params);\n            };\n\n            this.broadcastTransaction = function (transactionBytes) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'broadcastTransaction',\n                    'transactionBytes': transactionBytes\n                };\n                return Restangular.all(messagesConfig.messagesEndPoint).customPOST('', '', params, '');\n            };\n\n            this.calculateHash = function (hashAlgorithm, secret) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'hash',\n                    'hashAlgorithm': hashAlgorithm,\n                    'secret' : secret,\n                    'secretIsText' : true\n                };\n                return Restangular.all(messagesConfig.messagesEndPoint).customGET('', params);\n            };\n\n            this.getChainStats = function () {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getStatistics',\n                };\n                return Restangular.all(messagesConfig.messagesEndPoint).customGET('', params);\n            };\n\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('tools').controller('ToolsMainCtrl',\n    ['$scope', '$uibModal', 'SessionStorageService', 'NodeService', 'loginConfig', 'nodeConfig', 'DTOptionsBuilder',\n        'DTColumnBuilder', 'AccountService', 'timestampFilter', 'amountTQTFilter', '$compile', 'controlConfig',\n        'CommonsService', 'quantToAmountFilter', 'quantityToShareFilter', 'numericalStringFilter', 'AssetsService',\n        'CurrenciesService', '$timeout', 'numberStringFilter',\n        function ($scope, $uibModal, SessionStorageService, NodeService, loginConfig, nodeConfig, DTOptionsBuilder,\n                  DTColumnBuilder, AccountService, timestampFilter, amountTQTFilter, $compile, controlConfig,\n                  CommonsService, quantToAmountFilter, quantityToShareFilter, numericalStringFilter, AssetsService,\n                  CurrenciesService, $timeout, numberStringFilter) {\n\n            $scope.openTransactionTypeModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'tools/modals/transaction-types.html',\n                    size: 'lg',\n                    controller: 'ToolsStepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openServiceFeesModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'tools/modals/service-fees.html',\n                    size: 'lg',\n                    controller: 'ToolsStepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openGenerateTokenModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'tools/modals/token-generate.html',\n                    size: 'lg',\n                    controller: 'GenerateTokenCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openValidateTokenModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'tools/modals/token-validate.html',\n                    size: 'lg',\n                    controller: 'ValidateTokenCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openTransactionBroadcastModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'tools/modals/transaction-broadcast.html',\n                    size: 'lg',\n                    controller: 'BroadcastTransactionCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openTransactionParseModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'tools/modals/transaction-parse.html',\n                    size: 'lg',\n                    controller: 'ParseTransactionCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openCalculateHashModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'tools/modals/hash-calculate.html',\n                    size: 'lg',\n                    controller: 'CalculateHashCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openUserGuideModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'tools/modals/user-guide.html',\n                    size: 'lg',\n                    controller: 'ToolsStepFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openChainStatisticsModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'tools/modals/chain-statistics.html',\n                    size: 'lg',\n                    controller: 'chainStatisticsCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n        }]);\n\nangular.module('tools').controller('GenerateTokenCtrl',\n    ['$scope', '$uibModalInstance', 'params', 'CryptoService', 'baseConfig', 'AccountService',\n    'SessionStorageService', 'loginConfig',\n    function ($scope, $uibModalInstance, params, CryptoService, baseConfig, AccountService,\n      SessionStorageService, loginConfig) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n        $scope.generateTokenForm = {};\n        $scope.buttonColor = 'default';\n\n        $scope.generateToken = function(message) {\n\n          var accountPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n          var secretPhraseHex = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n          var epoch =  baseConfig.EPOCH;\n\n          $scope.generateTokenForm.output = CryptoService.generateToken(message, secretPhraseHex, accountPublicKey, epoch );\n\n          $scope.buttonColor = 'success';\n\n        };\n\n    }]);\n\nangular.module('tools').controller('ValidateTokenCtrl',\n        ['$scope', '$uibModalInstance', 'params', 'CryptoService', 'baseConfig', 'AccountService',\n        'SessionStorageService', 'loginConfig', 'ToolsService', 'AlertService', 'alertConfig',\n        function ($scope, $uibModalInstance, params, CryptoService, baseConfig, AccountService,\n          SessionStorageService, loginConfig, ToolsService, AlertService, alertConfig) {\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.$on('close-modal', function () {\n                $uibModalInstance.dismiss('cancel');\n            });\n\n            $scope.validateTokenForm = {};\n\n            $scope.color = 'black;';\n            $scope.buttonColor = 'default';\n            $scope.account  = 'Account';\n\n            $scope.validateToken = function(token, message) {\n\n              ToolsService.decodeToken(token, message).then(function (success) {\n                  if (!success.errorCode) {\n\n                    $scope.valid = success.valid;\n                \n\n                    if (success.valid) {\n                      $scope.color = 'green;';\n                      $scope.buttonColor = 'success';\n                      $scope.account = success.accountRS;\n                    } else {\n                      $scope.color = 'red;';\n                      $scope.buttonColor = 'danger';\n                      $scope.account = 'Invalid Account';\n                    }\n\n                  } else {\n                      AlertService.addAlert(\n                          {\n                              type: 'danger',\n                              msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                          }, alertConfig.decodeToken\n                      );\n                  }\n              }, function (error) {\n                  AlertService.addAlert(\n                      {\n                          type: 'danger',\n                          msg: 'Sorry, an error occured! Status: ' + error.status\n                      }, alertConfig.decodeToken\n                  );\n              });\n\n            };\n\n        }]);\n\nangular.module('tools').controller('ParseTransactionCtrl',\n        ['$scope', '$uibModalInstance', 'params', 'CryptoService', 'baseConfig', 'AccountService',\n        'SessionStorageService', 'loginConfig', 'ToolsService', 'AlertService', 'alertConfig',\n        function ($scope, $uibModalInstance, params, CryptoService, baseConfig, AccountService,\n          SessionStorageService, loginConfig, ToolsService, AlertService, alertConfig) {\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.$on('close-modal', function () {\n                $uibModalInstance.dismiss('cancel');\n            });\n\n            $scope.buttonColor = 'default';\n\n            $scope.parseTransaction = function(transactionBytes) {\n\n              ToolsService.parseTransaction(transactionBytes).then(function (success) {\n                  if (!success.errorCode) {\n\n                    delete success.restangularized  ;\n                    delete success.fromServer ;\n                    delete success.parentResource  ;\n                    delete success.restangularCollection ;\n                    delete success.route ;\n                    delete success.reqParams;\n\n                    if (success.verify) {\n                      $scope.buttonColor = 'success';\n                    }else{\n                      $scope.buttonColor = 'danger';\n                    }\n\n                    $scope.parseTransactionForm.json = JSON.stringify(success);\n\n                  } else {\n                      AlertService.addAlert(\n                          {\n                              type: 'danger',\n                              msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                          }, alertConfig.parseTransaction\n                      );\n                  }\n              }, function (error) {\n                  AlertService.addAlert(\n                      {\n                          type: 'danger',\n                          msg: 'Sorry, an error occured! Status: ' + error.status\n                      }, alertConfig.parseTransaction\n                  );\n              });\n\n            };\n\n        }]);\n\nangular.module('tools').controller('BroadcastTransactionCtrl',\n        ['$scope', '$uibModalInstance', 'params', 'CryptoService', 'baseConfig', 'AccountService',\n        'SessionStorageService', 'loginConfig', 'ToolsService', 'AlertService', 'alertConfig',\n        function ($scope, $uibModalInstance, params, CryptoService, baseConfig, AccountService,\n          SessionStorageService, loginConfig, ToolsService, AlertService, alertConfig) {\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.$on('close-modal', function () {\n                $uibModalInstance.dismiss('cancel');\n            });\n\n            $scope.buttonColor = 'default';\n            $scope.showTransaction = false;\n\n            $scope.broadcastTransaction = function(transactionBytes) {\n\n              ToolsService.broadcastTransaction(transactionBytes).then(function (success) {\n                  if (!success.errorCode) {\n\n                    $scope.fullHash = success.fullHash;\n                    $scope.requestProcessingTime = success.requestProcessingTime;\n                    $scope.transaction = success.transaction;\n\n                    if (success.transaction) {\n                      $scope.buttonColor = 'success';\n                      $scope.showTransaction = true;\n                    } else {\n                      $scope.buttonColor = 'danger';\n                    }\n\n                  } else {\n                      AlertService.addAlert(\n                          {\n                              type: 'danger',\n                              msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                          }, alertConfig.broadcastTransaction\n                      );\n                  }\n              }, function (error) {\n                  AlertService.addAlert(\n                      {\n                          type: 'danger',\n                          msg: 'Sorry, an error occured! Status: ' + error.status\n                      }, alertConfig.broadcastTransaction\n                  );\n              });\n\n            };\n\n        }]);\n\nangular.module('tools').controller('CalculateHashCtrl',\n        ['$scope', '$uibModalInstance', 'params', 'CryptoService', 'baseConfig', 'AccountService',\n        'SessionStorageService', 'loginConfig', 'ToolsService', 'AlertService', 'alertConfig',\n        function ($scope, $uibModalInstance, params, CryptoService, baseConfig, AccountService,\n          SessionStorageService, loginConfig, ToolsService, AlertService, alertConfig) {\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.$on('close-modal', function () {\n                $uibModalInstance.dismiss('cancel');\n            });\n\n            $scope.buttonColor = 'default';\n            $scope.showHash = false;\n            $scope.calculateHashForm = {};\n\n            $scope.calculateHash = function(algo, message) {\n\n              ToolsService.calculateHash(algo, message).then(function (success) {\n                  if (!success.errorCode) {\n\n                    $scope.calculateHashForm.hash = success.hash;\n\n                    if (success.hash) {\n                      $scope.buttonColor = 'success';\n                    } else {\n                      $scope.buttonColor = 'danger';\n                    }\n\n                  } else {\n                      AlertService.addAlert(\n                          {\n                              type: 'danger',\n                              msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                          }, alertConfig.calculateHash\n                      );\n                  }\n              }, function (error) {\n                  AlertService.addAlert(\n                      {\n                          type: 'danger',\n                          msg: 'Sorry, an error occured! Status: ' + error.status\n                      }, alertConfig.calculateHash\n                  );\n              });\n\n            };\n\n        }]);\n\nangular.module('tools').controller('chainStatisticsCtrl',\n        ['$scope', '$uibModalInstance', 'params', 'CryptoService', 'baseConfig', 'AccountService',\n        'SessionStorageService', 'loginConfig', 'ToolsService', 'AlertService', 'alertConfig',\n        function ($scope, $uibModalInstance, params, CryptoService, baseConfig, AccountService,\n          SessionStorageService, loginConfig, ToolsService, AlertService, alertConfig) {\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.$on('close-modal', function () {\n                $uibModalInstance.dismiss('cancel');\n            });\n\n\n\n            $scope.getChainStats = function() {\n\n              $scope.getChainStatsPromise = ToolsService.getChainStats().then(function (success) {\n                  if (!success.errorCode) {\n\n                    $scope.numberOfAccountLeases = success.numberOfAccountLeases;\n                    $scope.numberOfAccountLeases = success.numberOfAccountLeases;\n                    $scope.numberOfAccounts = success.numberOfAccounts;\n                    $scope.numberOfActiveAccountLeases = success.numberOfActiveAccountLeases;\n                    $scope.numberOfActivePeers = success.numberOfActivePeers;\n                    $scope.numberOfAliases = success.numberOfAliases;\n                    $scope.numberOfAskOrders = success.numberOfAskOrders;\n                    $scope.numberOfAsks = success.numberOfAsks;\n                    $scope.numberOfAssets = success.numberOfAssets;\n                    $scope.numberOfBidOrders = success.numberOfBidOrders;\n                    $scope.numberOfBids = success.numberOfBids;\n                    $scope.numberOfBlocks = success.numberOfBlocks;\n                    $scope.numberOfCurrencies = success.numberOfCurrencies;\n                    $scope.numberOfAccountLeases = success.numberOfAccountLeases;\n                    $scope.numberOfCurrencyTransfers = success.numberOfCurrencyTransfers;\n                    $scope.numberOfExchangeRequests = success.numberOfExchangeRequests;\n                    $scope.numberOfExchanges = success.numberOfExchanges;\n                    $scope.numberOfOffers = success.numberOfOffers;\n                    $scope.numberOfOrders = success.numberOfOrders;\n                    $scope.numberOfPeers = success.numberOfPeers;\n                    $scope.numberOfPhasingOnlyAccounts = success.numberOfPhasingOnlyAccounts;\n                    $scope.numberOfPolls = success.numberOfPolls;\n                    $scope.numberOfTrades = success.numberOfTrades;\n                    $scope.numberOfTransactions = success.numberOfTransactions;\n                    $scope.numberOfTransfers = success.numberOfTransfers;\n                    $scope.numberOfVotes = success.numberOfVotes;\n\n                  } else {\n                      AlertService.addAlert(\n                          {\n                              type: 'danger',\n                              msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                          }, alertConfig.calculateHash\n                      );\n                  }\n              }, function (error) {\n                  AlertService.addAlert(\n                      {\n                          type: 'danger',\n                          msg: 'Sorry, an error occured! Status: ' + error.status\n                      }, alertConfig.calculateHash\n                  );\n              });\n\n            };\n\n        }]);\n\nangular.module('tools').controller('ToolsStepFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('dashboard',\n    ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'node', 'options']);\n\nangular.module('dashboard').constant('dashboardConfig', {\n    'apiEndPoint': 'api'\n});\n\nangular.module('dashboard')\n    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n    }]);\n\nangular.module('dashboard').filter('informativeCount', ['$sce', function ($sce) {\n    return function (array, maxLength) {\n        if (array) {\n            if (array.length === maxLength) {\n                return '' + maxLength + '+';\n            }\n            return array.length;\n        }\n        return 0;\n    };\n}]);\n\nangular.module('dashboard').filter('arrayCount', ['$sce', function ($sce) {\n    return function (array) {\n        if (array) {\n            return array.length;\n        }\n        return 0;\n    };\n}]);\n\nangular.module('dashboard').filter('balanceStyler', ['$sce', function ($sce) {\n    return function (numeralString) {\n        var decimal = '0';\n        var fraction = '00';\n        if (numeralString) {\n            var splitString = numeralString.split('.');\n            decimal = splitString[0];\n            fraction = splitString[1];\n        }\n        return decimal + '<small>.' + fraction + '<small> XIN </small></small>';\n    };\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('dashboard')\n    .service('DashboardService',\n        ['SessionStorageService', 'Restangular', 'baseConfig', 'dashboardConfig', 'NodeService', '$rootScope',\n            'OptionsService',\n            function (SessionStorageService, Restangular, baseConfig, dashboardConfig, NodeService, $rootScope,\n                      OptionsService) {\n\n                this.getAccountPolls = function (accountRS, firstIndex, lastIndex) {\n                    Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                        OptionsService.getOption('RANDOMIZE_NODES')));\n                    var params = {\n                        'requestType': 'getPolls',\n                        'account': accountRS,\n                        'firstIndex': firstIndex,\n                        'lastIndex': lastIndex,\n                        'includeFinished': true\n\n                    };\n                    return Restangular.all(dashboardConfig.apiEndPoint).customGET('', params);\n                };\n\n                this.getAccountAliases = function (accountId, firstIndex, lastIndex) {\n                    Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                        OptionsService.getOption('RANDOMIZE_NODES')));\n                    var params = {\n                        'requestType': 'getAliases',\n                        'firstIndex': firstIndex,\n                        'lastIndex': lastIndex,\n                        'includeFinished': true,\n                        'account': accountId\n                    };\n                    return Restangular.all(dashboardConfig.apiEndPoint).customGET('', params);\n                };\n\n                this.getAccountAssetsAndBalances = function (accountRS) {\n                    Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                        OptionsService.getOption('RANDOMIZE_NODES')));\n                    var params = {\n                        'requestType': 'getAccount',\n                        'includeAssets': 'true', 'includeCurrencies': 'true', 'includeEffectiveBalance': 'true',\n                        'includeLessors': 'true',\n                        'account': accountRS\n                    };\n                    return Restangular.all(dashboardConfig.apiEndPoint).customGET('', params);\n                };\n\n                this.getAccountBlockChainTransactions = function (accountRS, firstIndex, lastIndex) {\n                    Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                        OptionsService.getOption('RANDOMIZE_NODES')));\n                    var params = {\n                        'requestType': 'getBlockchainTransactions',\n                        'account': accountRS,\n                        'firstIndex': firstIndex,\n                        'lastIndex': lastIndex,\n                        'withMessage': true\n                    };\n                    return Restangular.all(dashboardConfig.apiEndPoint).customGET('', params);\n                };\n\n            }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('dashboard').controller('DashboardCtrl',\n    ['$scope', 'SessionStorageService', '$state', '$uibModal', '$stateParams', 'DashboardService',\n        'informativeCountFilter', 'loginConfig', 'arrayCountFilter', 'balanceStylerFilter', 'amountTQTFilter',\n        function ($scope, SessionStorageService, $state, $uibModal, $stateParams, DashboardService,\n                  informativeCountFilter, loginConfig, arrayCountFilter, balanceStylerFilter, amountTQTFilter) {\n\n            $scope.closeAllDashboards=false;\n\n            $scope.getAccountPollsCount = function () {\n                var accountId = getAccountDetails('accountRs');\n                DashboardService.getAccountPolls(accountId, 0, 100).then(function (success) {\n                    $scope.pollsCount = informativeCountFilter(success.polls, 100);\n                }, function (error) {\n\n                });\n            };\n\n            $scope.getAccountAliasesCount = function () {\n                var accountId = getAccountDetails('accountId');\n                DashboardService.getAccountAliases(accountId, 0, 100).then(function (success) {\n                    $scope.aliasesCount = informativeCountFilter(success.aliases, 100);\n                }, function (error) {\n\n                });\n            };\n\n            $scope.getAccountMessagesCount = function () {\n                var accountId = getAccountDetails('accountRs');\n                DashboardService.getAccountBlockChainTransactions(accountId, 0, 100).then(function (success) {\n                    $scope.messagesCount = informativeCountFilter(success.transactions, 100);\n                }, function (error) {\n\n                });\n            };\n\n            $scope.getAccountAssetsAndBalances = function () {\n                var accountId = getAccountDetails('accountRs');\n                DashboardService.getAccountAssetsAndBalances(accountId).then(function (success) {\n                    $scope.currenciesCount = arrayCountFilter(success.accountCurrencies);\n                    $scope.assetsCount = arrayCountFilter(success.assetBalances);\n                    $scope.accountBalance = amountTQTFilter(success.balanceTQT);\n                }, function (error) {\n\n                });\n            };\n\n            function getAccountDetails(keyName) {\n                var accountDetails = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_DETAILS_KEY);\n                if (keyName) {\n                    return accountDetails[keyName];\n                }\n                return accountDetails;\n            }\n\n            function reloadDashboard() {\n                $scope.getAccountPollsCount();\n                $scope.getAccountAliasesCount();\n                $scope.getAccountAssetsAndBalances();\n                $scope.getAccountMessagesCount();\n            }\n\n            $scope.reloadDashboard = reloadDashboard;\n\n            $scope.$on('reload-dashboard', reloadDashboard);\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('crowdfunding', ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node','options']);\n\nangular.module('crowdfunding').constant('crowdfundingConfig', {\n    'crowdfundingEndPoint':'api'\n});\n\nangular.module('crowdfunding').config(\n  ['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n\n    $stateProvider.state('client.signedin.crowdfunding', {\n        url: '^/crowdfunding',\n        templateUrl: './crowdfunding/views/main.html',\n        abstract:true\n    }).state('client.signedin.crowdfunding.mycampaigns', {\n        url: '^/crowdfunding/mycampaigns',\n        templateUrl: './crowdfunding/views/mycampaigns.html',\n        controller: 'MyCampaignsCtrl'\n    }).state('client.signedin.crowdfunding.allcampaigns', {\n        url: '^/crowdfunding/allcampaigns',\n        templateUrl: './crowdfunding/views/allcampaigns.html',\n        controller: 'AllCampaignsCtrl'\n    });\n\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('crowdfunding').service('CrowdfundingService',\n    ['nodeConfig', 'SessionStorageService', 'NodeService', 'baseConfig', 'Restangular', 'loginConfig',\n        'CryptoService', 'TransactionService', '$rootScope', 'OptionsService', 'crowdfundingConfig',\n        function (nodeConfig, SessionStorageService, NodeService, baseConfig, Restangular, loginConfig,\n                  CryptoService, TransactionService, $rootScope, OptionsService, crowdfundingConfig) {\n\n        this.createCampaign =\n            function (\n              publicKey,\n              name,\n              code,\n              desc,\n              type,\n              initialSupply,\n              reserveSupply,\n              maxSupply,\n              decimals,\n              fee,\n              minReservePerUnitTQT,\n              issuanceHeight\n            ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'publicKey': publicKey,\n                    'requestType': 'issueCurrency',\n                    'name': name,\n                    'code': code,\n                    'description': desc,\n                    'type': type,\n                    'initialSupply': parseInt(initialSupply),\n                    'reserveSupply': parseInt(reserveSupply),\n                    'maxSupply': parseInt(maxSupply),\n                    'minReservePerUnitTQT' : parseInt(minReservePerUnitTQT),\n                    'issuanceHeight': parseInt(issuanceHeight),\n                    'decimals': parseInt(decimals),\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'broadcast': 'false',\n                    'deadline': OptionsService.getOption('DEADLINE')\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n        this.getAllCampaigns = function (firstIndex, lastIndex, account) {\n            Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                OptionsService.getOption('RANDOMIZE_NODES')));\n            var params = {\n                'requestType': 'getAllCrowdfundings',\n                'firstIndex': firstIndex,\n                'lastIndex': lastIndex,\n                'includeCounts': false,\n                'includeAmounts' : true,\n                'account': account,\n                'orderColumn' : 'issuance_height',\n                'order': 'desc'\n            };\n            return Restangular.all(crowdfundingConfig.crowdfundingEndPoint).customGET('', params);\n\n        };\n\n        this.getCampaignFounders = function (currency, firstIndex, lastIndex   ) {\n            Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n            var params = {\n                'requestType': 'getCurrencyFounders',\n                'currency': currency,\n                'firstIndex': firstIndex,\n                'lastIndex': lastIndex,\n            };\n            return Restangular.all(crowdfundingConfig.crowdfundingEndPoint).customGET('', params);\n        };\n\n        this.setCampaignReserve = function (currency, amountPerUnitTQT, publicKey ) {\n            Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n            var params = {\n                'requestType': 'currencyReserveIncrease',\n                'publicKey': publicKey,\n                'currency': currency,\n                'amountPerUnitTQT': amountPerUnitTQT,\n                'feeTQT': parseInt(1 * baseConfig.TOKEN_QUANTS, 10),\n                'broadcast': 'false',\n                'deadline': OptionsService.getOption('DEADLINE')\n\n\n            };\n\n            return TransactionService.createTransaction(params);\n        };\n\n        this.getCampaignClaim = function (currency, units ) {\n            Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n            var params = {\n                'requestType': 'currencyReserveClaim',\n                'currency': currency,\n                'units': units,\n                'lastIndex': lastIndex,\n            };\n            return Restangular.all(crowdfundingConfig.crowdfundingEndPoint).customGET('', params);\n        };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('crowdfunding').controller('CrowdfundingMainCtrl',\n    ['$scope', 'CrowdfundingService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter',\n        function ($scope, CrowdfundingService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter) {\n\n          $scope.openCreateCampaignModal = function () {\n\n              var modalInstance = $uibModal.open({\n                  animation: true,\n                  templateUrl: 'crowdfunding/modals/create-campaign-form.html',\n                  size: 'lg',\n                  controller: 'CampaignFormCtrl',\n                  resolve: {\n                      params: function () {\n                          return {};\n                      }\n                  }\n              });\n          };\n\n          $scope.openReserveCampaignModal = function (currency, decimals, minReservePerUnitTQT, code, reserveSupply) {\n\n              var modalInstance = $uibModal.open({\n                  animation: true,\n                  templateUrl: 'crowdfunding/modals/reserve-campaign-form.html',\n                  size: 'lg',\n                  controller: 'CampaignFormCtrl',\n                  resolve: {\n                      params: function () {\n                          return {\n                            currency : currency,\n                            decimals : decimals,\n                            minReservePerUnitTQT : minReservePerUnitTQT,\n                            code : code,\n                            reserveSupply : reserveSupply\n\n                          };\n                      }\n                  }\n              });\n          };\n\n          $scope.openFoundersCampaignModal = function (currency) {\n\n              var modalInstance = $uibModal.open({\n                  animation: true,\n                  templateUrl: 'crowdfunding/modals/founders-campaign-details.html',\n                  size: 'lg',\n                  controller: 'FoundersCampaignsCtrl',\n                  resolve: {\n                      params: function () {\n                          return {\n                            currency : currency\n                          };\n                      }\n                  }\n              });\n          };\n\n}]);\n\nangular.module('crowdfunding').controller('CampaignFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n        var createCampaignSteps = [\n            {\n                templateUrl: 'crowdfunding/modals/create-campaign-details.html',\n                title: 'Create Campaign Details 1',\n                controller: 'CreateCampaignsCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'crowdfunding/modals/create-campaign-details-2.html',\n                title: 'Create Campaign Details 2',\n                controller: 'CreateCampaignsCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'crowdfunding/modals/create-campaign-confirm.html',\n                title: 'Create Campaign Confirmation',\n                controller: 'CreateCampaignsCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var reserveCampaignSteps = [\n            {\n                templateUrl: 'crowdfunding/modals/reserve-campaign-details.html',\n                title: 'Reserve Campaign Details',\n                controller: 'ReserveCampaignsCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'crowdfunding/modals/reserve-campaign-confirm.html',\n                title: 'Reserve Campaign Confirmation',\n                controller: 'ReserveCampaignsCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        $scope.steps = {};\n\n        $scope.steps.createCampaignSteps = createCampaignSteps;\n        $scope.steps.reserveCampaignSteps = reserveCampaignSteps;\n\n\n    }]);\n\nangular.module('crowdfunding').controller('AllCampaignsCtrl',\n    ['$scope', 'CrowdfundingService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService', 'SessionStorageService',\n        'pollDaysFilter',\n        function ($scope, CrowdfundingService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService, SessionStorageService,\n                  pollDaysFilter) {\n\n                    $scope.dtAllCampaignsOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                        .withDOM('frtip')\n                        .withOption('info', false)\n                        .withOption('ordering', false)\n                        .withOption('serverSide', true)\n                        .withDataProp('currencies')\n                        .withOption('processing', true)\n                        .withOption('bFilter', false)\n                        .withOption('fnRowCallback',\n                            function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                                $compile(nRow)($scope);\n                            })\n                        .withOption('ajax', function (data, callback, settings) {\n                            var endIndex = data.start + data.length - 1;\n                            CrowdfundingService.getAllCampaigns(data.start, endIndex).then(function (response) {\n\n                                callback({\n                                    'iTotalRecords': 1000,\n                                    'iTotalDisplayRecords': 1000,\n                                    'currencies': response.currencies\n                                });\n                            });\n                        })\n                        .withDisplayLength(10).withBootstrap();\n\n                    $scope.dtAllCampaignsColumns = [\n\n                        DTColumnBuilder.newColumn('currency').withTitle('Details').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                                    ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                                    '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                            }),\n\n                        DTColumnBuilder.newColumn('code').withTitle('Ticker').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return '<a ng-click=\"openCurrencyDetailsModal(\\'' + row.code +\n                                    '\\')\" ng-controller=\"CurrenciesMainCtrl\"> ' + data + '</a>';\n                            }),\n\n                        DTColumnBuilder.newColumn('issuanceHeight').withTitle('Blocks').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n\n                                var creationHeight = row.creationHeight;\n                                var issuanceHeight = row.issuanceHeight;\n                                var currentHeight = SessionStorageService.getFromSession(baseConfig.SESSION_CURRENT_BLOCK);\n                                var diffHeight = issuanceHeight - currentHeight;\n                                var days = 0;\n\n                                if ( currentHeight && currentHeight <  data ) {\n                                  days =(parseInt(data) - currentHeight) / 1440;\n                                } else {\n                                  days = 0;\n                                }\n\n                                if(days < 0){\n                                  days = 0;\n                                }\n\n                                if(diffHeight < 0){\n                                  diffHeight = 0;\n                                }\n\n                                return diffHeight;\n\n                            }),\n\n                        DTColumnBuilder.newColumn('issuanceHeight').withTitle('Days').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n\n                                var creationHeight = row.creationHeight;\n                                var issuanceHeight = row.issuanceHeight;\n                                var currentHeight = SessionStorageService.getFromSession(baseConfig.SESSION_CURRENT_BLOCK);\n                                var diffHeight = issuanceHeight - currentHeight;\n                                var days = 0;\n\n                                if ( currentHeight && currentHeight <  data ) {\n                                  days =(parseInt(data) - currentHeight) / 1440;\n                                } else {\n                                  days = 0;\n                                }\n\n                                if(days < 0){\n                                  days = 0;\n                                }\n\n                                if(diffHeight < 0){\n                                  diffHeight = 0;\n                                }\n\n                                return pollDaysFilter( days.toLocaleString('en-US', {maximumFractionDigits: 2, minimumFractionDigits: 2}));\n\n                            }),\n\n\n\n                        DTColumnBuilder.newColumn('reserveSupply').withTitle('Supply').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return supplyFilter(data, row.decimals);\n                            }),\n\n                        DTColumnBuilder.newColumn('decimals').withTitle('Status').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n\n                              var color = 'danger';\n                              var percentage = parseInt( row.currentReservePerUnitTQT * 100 / ( row.minReservePerUnitTQT ) );\n\n                              if (percentage > 25 && percentage <= 50) {\n                                color = 'danger';\n                              } else if (percentage > 50 && percentage <= 75) {\n                                color = 'warning';\n                              } else if (percentage > 75) {\n                                color = 'success';\n                              }\n\n                              var p = '<uib-progressbar class=\"progress-striped active\" value=\"' + percentage + '\" type=\"' + color + '\" style=\"height:20px;margin-bottom:0px;background-color: #aaa;\">' + percentage + '%</uib-progressbar>';\n\n                              return p;\n                            }),\n\n                        DTColumnBuilder.newColumn('currentReservePerUnitTQT').withTitle('Raised').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                              var t_amount = ( row.reserveSupply  * data );\n\n                              return amountTQTFilter(t_amount);\n                            }),\n\n                        DTColumnBuilder.newColumn('reserveSupply').withTitle('Goal').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n\n                              var t_amount = ( data * row.minReservePerUnitTQT );\n\n                              return amountTQTFilter(t_amount);\n                            }),\n\n                        DTColumnBuilder.newColumn('currency').withTitle('Action').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n\n                              var reserve_tag = false;\n                              var founders_tag = false;\n                              var trade_tag = false;\n\n                              var creationHeight = row.creationHeight;\n                              var issuanceHeight = row.issuanceHeight;\n                              var currentHeight = SessionStorageService.getFromSession(baseConfig.SESSION_CURRENT_BLOCK);\n                              var diffHeight = issuanceHeight - currentHeight;\n\n                              if (diffHeight > 0) {\n                                  trade_tag = true;\n                              }\n\n                              if (diffHeight <= 0) {\n                                  reserve_tag = true;\n                              }\n\n                              var tt_desk = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                  ' \"TradeDesk\"';\n\n                              var tt_reserve = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                  ' \"Reserve Units\"';\n\n                              var tt_founders = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                  ' \"Reserve Founders\"';\n\n                              var trade_desk = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_desk + ' ng-controller=\"CurrenciesMainCtrl\"' +\n                                  'ng-disabled=\"' + trade_tag + '\"' + ' ng-click=\"openTradeDesk(\\'' + data +\n                                  '\\',\\'' + row.decimals + '\\')\">' +\n                                  ' <i class=\"fa fa-bar-chart\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                              var reserve_founders = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_founders + ' ng-controller=\"CrowdfundingMainCtrl\"' +\n                                  'ng-disabled=\"' + founders_tag + '\"' + ' ng-click=\"openFoundersCampaignModal(\\'' + data + '\\')\">' +\n                                  ' <i class=\"fa fa-user\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                              var reserve_modal = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_reserve + ' ng-controller=\"CrowdfundingMainCtrl\"' +\n                                  'ng-disabled=\"' + reserve_tag + '\"' + ' ng-click=\"openReserveCampaignModal(\\'' + data +\n                                  '\\',\\'' + row.decimals + '\\',\\'' + row.minReservePerUnitTQT + '\\',\\'' + row.code + '\\',\\'' + row.reserveSupply + '\\')\">' +\n                                  ' <i class=\"fa fa-bus\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                              return trade_desk + ' ' + reserve_founders + ' ' + reserve_modal;\n\n                            })\n\n                    ];\n\n                    $scope.dtAllCampaignsInstanceCallback = function (_dtInstance) {\n                        $scope.dtInstance = _dtInstance;\n                    };\n                    $scope.reloadAllCampaigns = function () {\n                        if ($scope.dtInstance) {\n                            $scope.dtInstance._renderer.rerender();\n                        }\n                    };\n\n}]);\n\nangular.module('crowdfunding').controller('MyCampaignsCtrl',\n    ['$scope', 'CrowdfundingService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService', 'SessionStorageService',\n        'pollDaysFilter', 'AccountService',\n        function ($scope, CrowdfundingService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService, SessionStorageService,\n                  pollDaysFilter, AccountService) {\n\n                    $scope.dtMyCampaignsOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                        .withDOM('frtip')\n                        .withOption('info', false)\n                        .withOption('ordering', false)\n                        .withOption('serverSide', true)\n                        .withDataProp('currencies')\n                        .withOption('processing', true)\n                        .withOption('bFilter', false)\n                        .withOption('fnRowCallback',\n                            function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                                $compile(nRow)($scope);\n                            })\n                        .withOption('ajax', function (data, callback, settings) {\n                            var endIndex = data.start + data.length - 1;\n\n                            var account = AccountService.getAccountDetailsFromSession('accountId');\n                            CrowdfundingService.getAllCampaigns(data.start, endIndex, account).then(function (response) {\n                                if (!response.currencies) { response.currencies = {}; }\n                                callback({\n                                    'iTotalRecords': 1000,\n                                    'iTotalDisplayRecords': 1000,\n                                    'currencies': response.currencies\n                                });\n                            });\n                        })\n                        .withDisplayLength(10).withBootstrap();\n\n                    $scope.dtMyCampaignsColumns = [\n\n                        DTColumnBuilder.newColumn('currency').withTitle('Details').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                                    ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                                    '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                            }),\n\n                        DTColumnBuilder.newColumn('code').withTitle('Ticker').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return '<a ng-click=\"openCurrencyDetailsModal(\\'' + row.code +\n                                    '\\')\" ng-controller=\"CurrenciesMainCtrl\"> ' + data + '</a>';\n                            }),\n\n                        DTColumnBuilder.newColumn('issuanceHeight').withTitle('Blocks').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n\n                                var creationHeight = row.creationHeight;\n                                var issuanceHeight = row.issuanceHeight;\n                                var currentHeight = SessionStorageService.getFromSession(baseConfig.SESSION_CURRENT_BLOCK);\n                                var diffHeight = issuanceHeight - currentHeight;\n                                var days = 0;\n\n                                if ( currentHeight && currentHeight <  data ) {\n                                  days =(parseInt(data) - currentHeight) / 1440;\n                                } else {\n                                  days = 0;\n                                }\n\n                                if(days < 0){\n                                  days = 0;\n                                }\n\n                                if(diffHeight < 0){\n                                  diffHeight = 0;\n                                }\n\n                                return diffHeight;\n\n                            }),\n\n                        DTColumnBuilder.newColumn('issuanceHeight').withTitle('Days').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n\n                                var creationHeight = row.creationHeight;\n                                var issuanceHeight = row.issuanceHeight;\n                                var currentHeight = SessionStorageService.getFromSession(baseConfig.SESSION_CURRENT_BLOCK);\n                                var diffHeight = issuanceHeight - currentHeight;\n                                var days = 0;\n\n                                if ( currentHeight && currentHeight <  data ) {\n                                  days =(parseInt(data) - currentHeight) / 1440;\n                                } else {\n                                  days = 0;\n                                }\n\n                                if(days < 0){\n                                  days = 0;\n                                }\n\n                                if(diffHeight < 0){\n                                  diffHeight = 0;\n                                }\n\n                                return pollDaysFilter( days.toLocaleString('en-US', {maximumFractionDigits: 2, minimumFractionDigits: 2}));\n\n                            }),\n\n                        DTColumnBuilder.newColumn('reserveSupply').withTitle('Supply').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return supplyFilter(data, row.decimals);\n                            }),\n\n                        DTColumnBuilder.newColumn('decimals').withTitle('Status').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n\n                              var color = 'danger';\n                              var percentage = parseInt( row.currentReservePerUnitTQT * 100 / ( row.minReservePerUnitTQT ) );\n\n                              if (percentage > 25 && percentage <= 50) {\n                                color = 'danger';\n                              } else if (percentage > 50 && percentage <= 75) {\n                                color = 'warning';\n                              } else if (percentage > 75) {\n                                color = 'success';\n                              }\n\n                              var p = '<uib-progressbar class=\"progress-striped active\" value=\"' + percentage + '\" type=\"' + color + '\" style=\"height:20px;margin-bottom:0px;background-color: #aaa;\">' + percentage + '%</uib-progressbar>';\n\n                              return p;\n                            }),\n\n                        DTColumnBuilder.newColumn('currentReservePerUnitTQT').withTitle('Raised').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                              var t_amount = ( row.reserveSupply  * data );\n\n                              return amountTQTFilter(t_amount);\n                            }),\n\n                        DTColumnBuilder.newColumn('reserveSupply').withTitle('Goal').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n\n                              var t_amount = ( data * row.minReservePerUnitTQT );\n\n                              return amountTQTFilter(t_amount);\n                            }),\n\n                        DTColumnBuilder.newColumn('currency').withTitle('Action').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n\n                              var reserve_tag = false;\n                              var founders_tag = false;\n                              var trade_tag = false;\n\n                              var creationHeight = row.creationHeight;\n                              var issuanceHeight = row.issuanceHeight;\n                              var currentHeight = SessionStorageService.getFromSession(baseConfig.SESSION_CURRENT_BLOCK);\n                              var diffHeight = issuanceHeight - currentHeight;\n\n                              if (diffHeight > 0) {\n                                  trade_tag = true;\n                              }\n\n                              if (diffHeight <= 0) {\n                                  reserve_tag = true;\n                              }\n\n                              var tt_desk = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                  ' \"TradeDesk\"';\n\n                              var tt_reserve = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                  ' \"Reserve Units\"';\n\n                              var tt_founders = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                  ' \"Reserve Founders\"';\n\n                              var trade_desk = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_desk + ' ng-controller=\"CurrenciesMainCtrl\"' +\n                                  'ng-disabled=\"' + trade_tag + '\"' + ' ng-click=\"openTradeDesk(\\'' + data +\n                                  '\\',\\'' + row.decimals + '\\')\">' +\n                                  ' <i class=\"fa fa-bar-chart\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                              var reserve_founders = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_founders + ' ng-controller=\"CrowdfundingMainCtrl\"' +\n                                  'ng-disabled=\"' + founders_tag + '\"' + ' ng-click=\"openFoundersCampaignModal(\\'' + data + '\\')\">' +\n                                  ' <i class=\"fa fa-user\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n\n                              var reserve_modal = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_reserve + ' ng-controller=\"CrowdfundingMainCtrl\"' +\n                                  'ng-disabled=\"' + reserve_tag + '\"' + ' ng-click=\"openReserveCampaignModal(\\'' + data +\n                                  '\\',\\'' + row.decimals + '\\',\\'' + row.minReservePerUnitTQT + '\\',\\'' + row.code + '\\',\\'' + row.reserveSupply + '\\')\">' +\n                                  ' <i class=\"fa fa-bus\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                              return trade_desk + ' ' + reserve_founders + ' ' + reserve_modal;\n\n                            })\n\n                    ];\n\n                    $scope.dtMyCampaignsInstanceCallback = function (_dtInstance) {\n                        $scope.dtInstance = _dtInstance;\n                    };\n                    $scope.reloadMyCampaigns = function () {\n                        if ($scope.dtInstance) {\n                            $scope.dtInstance._renderer.rerender();\n                        }\n                    };\n\n\n}]);\n\nangular.module('crowdfunding').controller('CreateCampaignsCtrl',\n    ['$scope', 'CrowdfundingService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', '$rootScope',\n        'CommonsService', 'CurrenciesService',\n        function ($scope, CrowdfundingService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope,\n                  $rootScope, CommonsService, CurrenciesService) {\n\n\n            $scope.createCampaignForm1 = angular.copy(multiStepFormScope.createCampaignForm1);\n            $scope.createCampaignForm2 = angular.copy(multiStepFormScope.createCampaignForm2);\n\n            $scope.$watchGroup(['createCampaignForm2.reserveSupply', 'createCampaignForm2.minReservePerUnitTQT'], function () {\n\n                if ($scope.createCampaignForm2) {\n                    $scope.createCampaignForm2.maxSupply = parseInt($scope.createCampaignForm2.reserveSupply);\n                    $scope.createCampaignForm2.totalAmount = parseInt($scope.createCampaignForm2.reserveSupply) * $scope.createCampaignForm2.minReservePerUnitTQT;\n                }\n\n            });\n\n            $scope.issuanceHeight = 1440;\n            $scope.day = 1440;\n            $scope.hmax = 43200;\n            $scope.days = 1;\n\n            $scope.increment = function () {\n                if ($scope.issuanceHeight >= $scope.hmax) {\n                    $scope.issuanceHeight = $scope.hmax;\n                    return;\n                } else {\n                    $scope.issuanceHeight = $scope.issuanceHeight + $scope.day;\n                }\n\n                $scope.createCampaignForm2.issuanceHeight = $scope.issuanceHeight;\n                $scope.days = parseInt($scope.issuanceHeight / $scope.day);\n            };\n\n            $scope.decrement = function () {\n                if ($scope.issuanceHeight <= $scope.day) {\n                    $scope.issuanceHeight = $scope.day;\n                    return;\n                } else {\n                    $scope.issuanceHeight = $scope.issuanceHeight - $scope.day;\n                }\n\n                $scope.createCampaignForm2.issuanceHeight = $scope.issuanceHeight;\n                $scope.days = parseInt($scope.issuanceHeight / $scope.day);\n            };\n\n            $scope.max = function () {\n                $scope.issuanceHeight = $scope.hmax;\n                $scope.createCampaignForm2.issuanceHeight = $scope.hmax;\n\n                $scope.days = parseInt($scope.issuanceHeight / $scope.day);\n\n            };\n\n            $scope.min = function () {\n                $scope.issuanceHeight = $scope.day;\n                $scope.createCampaignForm2.issuanceHeight = $scope.day;\n                $scope.days = parseInt($scope.issuanceHeight / $scope.day);\n            };\n\n            $scope.getBlockChainStatus = function () {\n                CurrenciesService.getBlockChainStatus().then(function (success) {\n                    $scope.createCampaignForm2.currentHeight = success.numberOfBlocks;\n                });\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.createCampaignForm1 = angular.copy($scope.createCampaignForm1);\n                multiStepFormScope.createCampaignForm2 = angular.copy($scope.createCampaignForm2);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.createCampaign = function () {\n\n                var createCampaignForm1 = multiStepFormScope.createCampaignForm1;\n                var createCampaignForm2 = multiStepFormScope.createCampaignForm2;\n\n                var name = createCampaignForm1.name;\n                var code = createCampaignForm1.code.toUpperCase();\n                var desc = createCampaignForm1.desc;\n\n                var decimals = 0;\n                var initialSupply = parseInt(createCampaignForm2.initialSupply) * Math.pow(10, decimals);\n                var issuanceHeight = parseInt(createCampaignForm2.issuanceHeight) +  parseInt(createCampaignForm2.currentHeight);\n                var minReservePerUnitTQT = (createCampaignForm2.minReservePerUnitTQT) * 100000000;\n                var reserveSupply = parseInt(createCampaignForm2.reserveSupply) * Math.pow(10, decimals);\n                var maxSupply = reserveSupply;\n                var type = 5;\n\n                $scope.minReservePerUnitTotal = (maxSupply * minReservePerUnitTQT) / 100000000;\n\n                var fee = 1;\n\n                if (!fee) {\n                    fee = 1;\n                }\n\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = createCampaignForm2.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                $scope.createCampaignPromise = CrowdfundingService.createCampaign(\n                  publicKey,\n                  name,\n                  code,\n                  desc,\n                  type,\n                  initialSupply,\n                  reserveSupply,\n                  maxSupply,\n                  decimals,\n                  fee,\n                  minReservePerUnitTQT,\n                  issuanceHeight\n                  ).then(function (success) {\n\n                      if (!success.errorCode) {\n                          var unsignedBytes = success.unsignedTransactionBytes;\n                          var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                          $scope.transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                          $scope.validBytes = true;\n\n                          $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                          $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                          $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                      } else {\n                          AlertService.addAlert(\n                              {\n                                  type: 'danger',\n                                  msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                              }, alertConfig.createCampaignAlert\n                          );\n                      }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.createCampaignAlert);\n                    });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.createCampaignPromise = CommonsService.broadcastTransaction(transactionBytes)\n                    .then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' +\n                                    success.transaction +\n                                    ''\n                                });\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.createCampaignAlert);\n                    });\n            };\n\n\n}]);\n\nangular.module('crowdfunding').controller('ReserveCampaignsCtrl',\n  ['$scope', 'CrowdfundingService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n    'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', '$rootScope',\n    'CommonsService', 'CurrenciesService', 'amountTQTFilter',\n    function ($scope, CrowdfundingService, SessionStorageService, $state, CryptoService,\n              loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope,\n              $rootScope, CommonsService, CurrenciesService, amountTQTFilter) {\n\n                $scope.form = $scope.$getActiveStep().data;\n\n                $scope.cancel = function () {\n                    $uibModalInstance.dismiss('cancel');\n                };\n\n                $scope.$on('$destroy', function () {\n                    multiStepFormScope.reserveCampaignForm = angular.copy($scope.reserveCampaignForm);\n                });\n\n                $scope.reserveCampaignForm = angular.copy(multiStepFormScope.reserveCampaignForm);\n\n                $scope.initStep1 = function () {\n                    var data = $scope.$getActiveStep().data || {};\n                    if (data.currency) {\n\n                      $scope.reserveCampaignForm.currency = data.currency;\n                      $scope.reserveCampaignForm.decimals = data.decimals;\n                      $scope.reserveCampaignForm.minReservePerUnitTQT = data.minReservePerUnitTQT;\n                      $scope.reserveCampaignForm.code = data.code;\n                      $scope.reserveCampaignForm.reserveSupply = data.reserveSupply;\n\n                      $scope.reserveCampaignForm.goal   = amountTQTFilter( data.reserveSupply * data.minReservePerUnitTQT )  ;\n                      $scope.reserveCampaignForm.raised = amountTQTFilter( data.reserveSupply * data.minReservePerUnitTQT ) ;\n\n                    }\n                };\n\n                $scope.$watchCollection('reserveCampaignForm.amountTotal', function () {\n\n                  $scope.reserveCampaignForm.amountUnit = parseFloat( $scope.reserveCampaignForm.amountTotal /$scope.reserveCampaignForm.reserveSupply );\n\n                });\n\n                $scope.reserveCampaign = function () {\n\n                    var form = multiStepFormScope.reserveCampaignForm;\n\n                    var currency = form.currency;\n                    var decimals = form.decimals;\n                    var amountPerUnitTQT = parseInt( form.amountUnit * 100000000);\n                    var reserveSupply = form.reserveSupply * Math.pow(10, form.decimals);\n\n                    var fee = 1;\n\n                    if (!fee) {\n                        fee = 1;\n                    }\n\n                    var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                    var secret = form.secretPhrase;\n                    var secretPhraseHex;\n                    if (secret) {\n                        secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                    } else {\n                        secretPhraseHex =\n                            SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                    }\n\n                    $scope.reserveCampaignPromise = CrowdfundingService.setCampaignReserve(\n                      currency,\n                      amountPerUnitTQT,\n                      publicKey\n                      ).then(function (success) {\n\n                          if (!success.errorCode) {\n                              var unsignedBytes = success.unsignedTransactionBytes;\n                              var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                              $scope.transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                              $scope.validBytes = true;\n\n                              $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                              $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                              $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                          } else {\n                              AlertService.addAlert(\n                                  {\n                                      type: 'danger',\n                                      msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                  }, alertConfig.reserveCampaignAlert\n                              );\n                          }\n\n                        }, function (error) {\n                            AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                alertConfig.reserveCampaignAlert);\n                        });\n\n                };\n\n                $scope.broadcastTransaction = function (transactionBytes) {\n                    $scope.createCampaignPromise = CommonsService.broadcastTransaction(transactionBytes)\n                        .then(function (success) {\n                            $scope.$emit('close-modal');\n                            $rootScope.$broadcast('reload-dashboard');\n                            if (!success.errorCode) {\n                                AlertService.addAlert(\n                                    {\n                                        type: 'success',\n                                        msg: 'Transaction succesfull broadcasted with Id : ' +\n                                        success.transaction +\n                                        ''\n                                    });\n                            } else {\n                                AlertService.addAlert(\n                                    {\n                                        type: 'danger',\n                                        msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                    });\n                            }\n\n                        }, function (error) {\n                            AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                alertConfig.reserveCampaignAlert);\n                        });\n                };\n\n}]);\n\nangular.module('crowdfunding').controller('FoundersCampaignsCtrl',\n  ['$scope', 'CrowdfundingService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n    'AlertService', 'alertConfig', '$validation', '$uibModal', '$rootScope',\n    'CommonsService', 'CurrenciesService', 'amountTQTFilter', '$uibModalInstance',\n    'DTOptionsBuilder', 'DTColumnBuilder', 'params', '$compile', 'searchTermFilter',\n    function ($scope, CrowdfundingService, SessionStorageService, $state, CryptoService,\n              loginConfig, AlertService, alertConfig, $validation, $uibModal,\n              $rootScope, CommonsService, CurrenciesService, amountTQTFilter, $uibModalInstance,\n              DTOptionsBuilder, DTColumnBuilder, params, $compile, searchTermFilter ) {\n\n                var currency = params.currency;\n\n                $scope.dtFoundersCampaignsOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                    .withDOM('frtip')\n                    .withOption('info', false)\n                    .withOption('ordering', false)\n                    .withOption('serverSide', true)\n                    .withDataProp('data')\n                    .withOption('processing', true)\n                    .withOption('bFilter', false)\n                    .withOption('fnRowCallback',\n                        function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                            $compile(nRow)($scope);\n                        })\n                    .withOption('ajax', function (data, callback, settings) {\n                        var endIndex = data.start + data.length - 1;\n                        CrowdfundingService.getCampaignFounders( currency, data.start, endIndex).then(function (response) {\n\n                            callback({\n                                'iTotalRecords': 1000,\n                                'iTotalDisplayRecords': 1000,\n                                'data': response.founders\n                            });\n                        });\n                    })\n                    .withDisplayLength(10).withBootstrap();\n\n                    $scope.dtFoundersCampaignsColumns = [\n\n                        DTColumnBuilder.newColumn('currency').withTitle('Details').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return searchTermFilter(data);\n                            }),\n\n                        DTColumnBuilder.newColumn('accountRS').withTitle('Account').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return searchTermFilter(data);\n                            }),\n\n                        DTColumnBuilder.newColumn('amountPerUnitTQT').withTitle('Amount per Unit').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return amountTQTFilter(data);\n                            }),\n\n                    ];\n\n                $scope.cancel = function () {\n                    $uibModalInstance.dismiss('cancel');\n                };\n\n                $scope.dtFoundersInstanceCallback = function (_dtInstance) {\n                    $scope.dtInstance = _dtInstance;\n                };\n                $scope.reloadFoundersCampaigns = function () {\n                    if ($scope.dtInstance) {\n                        $scope.dtInstance._renderer.rerender();\n                    }\n                };\n\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('subscription', ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node','options']);\n\nangular.module('subscription').constant('subscriptionConfig', {\n    'subscriptionEndPoint':'api'\n});\n\nangular.module('subscription').config(\n  ['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n\n    $stateProvider.state('client.signedin.subscription', {\n        url: '^/subscriptions',\n        templateUrl: './subscriptions/views/main.html',\n        abstract: true\n    }).state('client.signedin.subscription.mysubscriptions', {\n        url: '^/subscriptions/mysubscriptions',\n        templateUrl: './subscriptions/views/mysubscriptions.html',\n        controller: 'MySubscriptionsCtrl'\n    });\n\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('subscription').service('SubscriptionService',\n    ['nodeConfig', 'SessionStorageService', 'NodeService', 'baseConfig', 'Restangular', 'loginConfig',\n        'CryptoService', 'TransactionService', '$rootScope', 'OptionsService', 'subscriptionConfig',\n        function (nodeConfig, SessionStorageService, NodeService, baseConfig, Restangular, loginConfig,\n                  CryptoService, TransactionService, $rootScope, OptionsService, subscriptionConfig) {\n\n        this.createSubscription =\n            function (\n              publicKey,\n              recipient,\n              amountTQT,\n              frequency,\n              fee\n            ) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'publicKey': publicKey,\n                    'requestType': 'sendMoneySubscription',\n                    'recipient': recipient,\n                    'amountTQT': amountTQT,\n                    'frequency': frequency,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'broadcast': 'false',\n                    'deadline': OptionsService.getOption('DEADLINE')\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n        this.subscriptionCancel = function (publicKey, subscription, fee ) {\n            Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                OptionsService.getOption('RANDOMIZE_NODES')));\n            var params = {\n                'requestType': 'subscriptionCancel',\n                'publicKey': publicKey,\n                'subscription': subscription,\n                'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                'broadcast': 'false',\n                'deadline': OptionsService.getOption('DEADLINE')\n            };\n\n            // return Restangular.all(subscriptionConfig.subscriptionEndPoint).customPOST('', '', params, '');\n\n            return TransactionService.createTransaction(params);\n\n\n        };\n\n        this.getSubscription = function (subscription, firstIndex, lastIndex   ) {\n            Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n            var params = {\n                'requestType': 'getSubscription',\n                'subscription': subscription,\n                'firstIndex': firstIndex,\n                'lastIndex': lastIndex,\n            };\n            return Restangular.all(subscriptionConfig.subscriptionEndPoint).customGET('', params);\n        };\n\n        this.getAccountSubscriptions = function (account, firstIndex, lastIndex   ) {\n            Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n            var params = {\n                'requestType': 'getAccountSubscriptions',\n                'account': account,\n                'firstIndex': firstIndex,\n                'lastIndex': lastIndex,\n            };\n            return Restangular.all(subscriptionConfig.subscriptionEndPoint).customGET('', params);\n        };\n\n        this.getSubscriptionsToAccount = function (account, firstIndex, lastIndex   ) {\n            Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n            var params = {\n                'requestType': 'getSubscriptionsToAccount',\n                'account': account,\n                'firstIndex': firstIndex,\n                'lastIndex': lastIndex,\n            };\n            return Restangular.all(subscriptionConfig.subscriptionEndPoint).customGET('', params);\n        };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('subscription').controller('SubscriptionsMainCtrl',\n    ['$scope', 'SubscriptionService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter',\n        function ($scope, SubscriptionService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter) {\n\n          $scope.openCreateSubscriptionModal = function () {\n\n              var modalInstance = $uibModal.open({\n                  animation: true,\n                  templateUrl: 'subscriptions/modals/create-subscription-form.html',\n                  size: 'lg',\n                  controller: 'SubscriptionFormCtrl',\n                  resolve: {\n                      params: function () {\n                          return {};\n                      }\n                  }\n              });\n          };\n\n          $scope.openCancelSubscriptionModal = function (id, account) {\n\n              var modalInstance = $uibModal.open({\n                  animation: true,\n                  templateUrl: 'subscriptions/modals/cancel-subscription-form.html',\n                  size: 'lg',\n                  controller: 'SubscriptionFormCtrl',\n                  resolve: {\n                      params: function () {\n                          return {\n                            'id': id,\n                            'account': account\n                          };\n                      }\n                  }\n              });\n          };\n\n}]);\n\nangular.module('subscription').controller('SubscriptionFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n        var createSubscriptionSteps = [\n            {\n                templateUrl: 'subscriptions/modals/create-subscription-details.html',\n                title: 'Create Subscription Details',\n                controller: 'CreateSubscriptionCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'subscriptions/modals/create-subscription-confirm.html',\n                title: 'Create Subscription Confirmation',\n                controller: 'CreateSubscriptionCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var cancelSubscriptionSteps = [\n            {\n                templateUrl: 'subscriptions/modals/cancel-subscription-confirm.html',\n                title: 'Cancel Subscription Confirmation',\n                controller: 'CancelSubscriptionCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n        ];\n\n\n        $scope.steps = {};\n\n        $scope.steps.createSubscriptionSteps = createSubscriptionSteps;\n        $scope.steps.cancelSubscriptionSteps = cancelSubscriptionSteps;\n\n    }]);\n\nangular.module('subscription').controller('MySubscriptionsCtrl',\n    ['$scope', 'SubscriptionService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService', 'SessionStorageService',\n        'pollDaysFilter', 'AccountService',\n        function ($scope, SubscriptionService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService, SessionStorageService,\n                  pollDaysFilter, AccountService) {\n\n                    $scope.dtMySubscriptionsOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                        .withDOM('frtip')\n                        .withOption('info', false)\n                        .withOption('ordering', false)\n                        .withOption('serverSide', true)\n                        .withDataProp('data')\n                        .withOption('processing', true)\n                        .withOption('bFilter', false)\n                        .withOption('fnRowCallback',\n                            function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                                $compile(nRow)($scope);\n                            })\n                        .withOption('ajax', function (data, callback, settings) {\n                            var endIndex = data.start + data.length - 1;\n\n                            var account = AccountService.getAccountDetailsFromSession('accountId');\n                            SubscriptionService.getAccountSubscriptions(account, data.start, endIndex ).then(function (response) {\n                                if (!response.subscriptions) { response.subscriptions = {}; }\n                                callback({\n                                    'iTotalRecords': 1000,\n                                    'iTotalDisplayRecords': 1000,\n                                    'data': response.subscriptions\n                                });\n                            });\n                        })\n                        .withDisplayLength(10).withBootstrap();\n\n                    $scope.dtMySubscriptionsColumns = [\n\n                        DTColumnBuilder.newColumn('id').withTitle('Details').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                                    ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                                    '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                            }),\n\n                        DTColumnBuilder.newColumn('frequency').withTitle('Interval (D)').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n\n                                var interval_day = data / 86400;\n                                return  interval_day.toFixed(4);\n                            }),\n\n                        DTColumnBuilder.newColumn('timeNext').withTitle('Next Payment').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return timestampFilter(data);\n                            }),\n\n                        DTColumnBuilder.newColumn('amountTQT').withTitle('Amount').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                                return amountTQTFilter(data);\n                            }),\n\n                        DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n                              if (data) {\n                                  return searchTermFilter(data);\n                              }\n                              return data;\n                            }),\n\n                        DTColumnBuilder.newColumn('id').withTitle('Action').notSortable()\n                            .renderWith(function (data, type, row, meta) {\n\n                              var cancel_tag = false;\n                              var tt_cancel = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                  ' \"Cancel Subscription\"';\n\n                              var cancel_subscription = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + tt_cancel + ' ng-controller=\"SubscriptionsMainCtrl\"' +\n                                  'ng-disabled=\"' + cancel_tag + '\"' + ' ng-click=\"openCancelSubscriptionModal(\\'' + data + '\\',\\'' + row.recipientRS + '\\')\">' +\n                                  ' <i class=\"fa fa-times\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                              return cancel_subscription ;\n\n                            })\n\n                    ];\n\n                    $scope.dtMySubscriptionsInstanceCallback = function (_dtInstance) {\n                        $scope.dtInstance = _dtInstance;\n                    };\n                    $scope.reloadMySubscriptions = function () {\n                        if ($scope.dtInstance) {\n                            $scope.dtInstance._renderer.rerender();\n                        }\n                    };\n\n\n}]);\n\nangular.module('subscription').controller('CreateSubscriptionCtrl',\n    ['$scope', 'SubscriptionService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', '$rootScope',\n        'CommonsService', 'AccountService', 'amountToQuantFilter',\n        function ($scope, SubscriptionService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope,\n                  $rootScope, CommonsService, AccountService, amountToQuantFilter) {\n\n                    $scope.$on('$destroy', function () {\n                        multiStepFormScope.createSubscription = angular.copy($scope.createSubscription);\n                    });\n\n                    $scope.openAddressBookModal = function () {\n                        var modalInstance = $uibModal.open({\n                            animation: true,\n                            templateUrl: 'addressbook/views/addressbook-light.html',\n                            controller: 'AddressBookCtrl',\n                            resolve: {\n                                params: function () {\n                                    return {\n                                        'closeOnClick': true\n                                    };\n                                }\n                            }\n                        });\n                        modalInstance.result.then(function (result) {\n                            $scope.createSubscription.recipientRS = result.accountRS;\n                        });\n                    };\n\n                    $scope.hasPrivateKeyInSession = function () {\n                        if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                            return true;\n                        }\n                        return false;\n                    };\n\n                    $scope.createSubscription = function () {\n\n                        var sendForm = multiStepFormScope.createSubscription;\n\n                        $scope.createSubscription.recipientRS = sendForm.recipientRS;\n                        $scope.createSubscription.amount = sendForm.amount;\n                        $scope.createSubscription.interval = sendForm.interval;\n\n                        var recipientRS = sendForm.recipientRS;\n                        var amountTQT = amountToQuantFilter(sendForm.amount);\n                        var frequency = parseInt(sendForm.interval * 86400);\n\n                        var fee = 1;\n\n                        var senderPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n                        var secretPhraseHex = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n\n                        $scope.setCreateSubscriptionPromise = AccountService.getAccountDetails(recipientRS).then(function (success) {\n\n                            var recipientPublicKey = success.publicKey;\n\n                            if (!success.errorCode || success.errorCode === 5) {\n\n                                $scope.accountDetails = success;\n\n                                if (!recipientPublicKey) {\n                                    AlertService.addAlert(\n                                        {\n                                            type: 'info',\n                                            msg: 'Note: This account never had an outbound transaction. Make sure this account is the right one. In doubt, ask the account holder for his public key and add it on the former page to this transaction.'\n                                        }, alertConfig.createSubscriptionAlert\n                                    );\n                                }\n\n                                $scope.setCreateSubscriptionPromise = SubscriptionService.createSubscription(\n                                    senderPublicKey,\n                                    recipientRS,\n                                    amountTQT,\n                                    frequency,\n                                    fee\n                                  ).then(function (success) {\n\n                                      if (!success.errorCode) {\n                                          var unsignedBytes = success.unsignedTransactionBytes;\n                                          var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                                          $scope.transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                                          $scope.validBytes = true;\n\n                                          $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                                          $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                                          $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                                      } else {\n                                          AlertService.addAlert(\n                                              {\n                                                  type: 'danger',\n                                                  msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                              }, alertConfig.createSubscriptionAlert\n                                          );\n                                      }\n\n                                    }, function (error) {\n                                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                            alertConfig.createSubscriptionAlert);\n                                    });\n\n                            } else {\n                                AlertService.addAlert(\n                                    {\n                                        type: 'danger',\n                                        msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                    }, alertConfig.createSubscriptionAlert\n                                );\n                            }\n                        },function (error) {\n                            AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                alertConfig.createSubscriptionAlert);\n                        });\n                    };\n\n                    $scope.broadcastTransaction = function (transactionBytes) {\n                      $scope.sendTokenPromise =AccountService.broadcastTransaction(transactionBytes).then(function (success) {\n\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n\n                            $scope.$emit('close-modal');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                      }, function (error) {\n                          AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                              alertConfig.createSubscriptionAlert);\n                      });\n                    };\n\n\n}]);\n\nangular.module('subscription').controller('CancelSubscriptionCtrl',\n    ['$scope', 'SubscriptionService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', '$rootScope',\n        'CommonsService', 'AccountService', 'amountToQuantFilter', 'multiStepFormInstance',\n        function ($scope, SubscriptionService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope,\n                  $rootScope, CommonsService, AccountService, amountToQuantFilter, multiStepFormInstance) {\n\n                  $scope.$on('$destroy', function () {\n                      multiStepFormScope.cancelSubscription = angular.copy($scope.cancelSubscription);\n                  });\n\n                  $scope.hasPrivateKeyInSession = function () {\n                      if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                          return true;\n                      }\n                      return false;\n                  };\n\n                  $scope.cancelSubscription = function () {\n\n                    var data = $scope.$getActiveStep().data;\n\n                    if (data) {\n                        $scope.cancelSubscription.id = data.id;\n                        $scope.cancelSubscription.recipientRS = data.account;\n\n                    }\n\n                    var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                    var subscription = $scope.cancelSubscription.id;\n                    var fee = 1;\n                    var secretPhraseHex = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n\n                    $scope.setCancelSubscriptionPromise = SubscriptionService.subscriptionCancel(publicKey, subscription, fee)\n                        .then(function (success) {\n\n                            if (!success.errorCode) {\n                                var unsignedBytes = success.unsignedTransactionBytes;\n                                var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                                $scope.transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n\n                                $scope.validBytes = true;\n                                $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                                $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                                $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n                            } else {\n                                AlertService.addAlert(\n                                    {\n                                        type: 'danger',\n                                        msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                    }, alertConfig.cancelSubscriptionAlert\n                                );\n                            }\n                        }, function (error) {\n                            AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                alertConfig.cancelSubscriptionAlert\n                            );\n                        });\n\n                  };\n\n                  $scope.broadcastTransaction = function (transactionBytes) {\n                      $scope.cancelOrderPromise = CommonsService.broadcastTransaction(transactionBytes)\n                          .then(function (success) {\n                              $scope.$emit('close-modal');\n                              $rootScope.$broadcast('reload-dashboard');\n                              if (!success.errorCode) {\n                                  AlertService.addAlert(\n                                      {\n                                          type: 'success',\n                                          msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                          ''\n                                      });\n                              } else {\n                                  AlertService.addAlert(\n                                      {\n                                          type: 'danger',\n                                          msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                      });\n                              }\n\n                          }, function (error) {\n                              AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                  alertConfig.cancelBidOrderModalAlert);\n                          });\n                  };\n\n\n\n\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('escrow', ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node','options']);\n\nangular.module('escrow').constant('escrowConfig', {\n    'escrowEndPoint':'api'\n});\n\nangular.module('escrow').config(\n  ['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n\n    $stateProvider.state('client.signedin.escrow', {\n        url: '^/escrow',\n        templateUrl: './escrow/views/main.html',\n        abstract: true\n    }).state('client.signedin.escrow.myescrow', {\n        url: '^/escrow/myescrow',\n        templateUrl: './escrow/views/myescrow.html',\n        controller: 'MyEscrowCtrl'\n    });\n\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('escrow').service('EscrowService',\n    ['nodeConfig', 'SessionStorageService', 'NodeService', 'baseConfig', 'Restangular', 'loginConfig',\n        'CryptoService', 'TransactionService', '$rootScope', 'OptionsService', 'escrowConfig',\n        function (nodeConfig, SessionStorageService, NodeService, baseConfig, Restangular, loginConfig,\n                  CryptoService, TransactionService, $rootScope, OptionsService, escrowConfig) {\n\n\n                  this.createEscrow = function (publicKey, recipientRS, amountTQT, escrowDeadline, deadlineAction, requiredSigners, signers, fee ) {\n                      Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                      var params = {\n                          'requestType': 'sendMoneyEscrow',\n                          'publicKey': publicKey,\n                          'recipient': recipientRS,\n                          'amountTQT': amountTQT,\n                          'escrowDeadline': escrowDeadline,\n                          'deadlineAction': deadlineAction,\n                          'requiredSigners' : requiredSigners,\n                          'signers': signers,\n                          'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                          'deadline': OptionsService.getOption('DEADLINE'),\n                          'broadcast': 'false'\n\n                      };\n\n                      // return Restangular.all(escrowConfig.escrowEndPoint).customPOST('', '', params, '');\n\n                      return TransactionService.createTransaction(params);\n                  };\n\n                  this.getAccountEscrowTransactions = function (account, firstIndex, lastIndex   ) {\n                      Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                      var params = {\n                          'requestType': 'getAccountEscrowTransactions',\n                          'account': account,\n                          'firstIndex': firstIndex,\n                          'lastIndex': lastIndex\n                      };\n                      return Restangular.all(escrowConfig.escrowEndPoint).customGET('', params);\n                  };\n\n                  this.getEscrowTransaction = function (escrow, firstIndex, lastIndex   ) {\n                      Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                      var params = {\n                          'requestType': 'getEscrowTransaction',\n                          'escrow': escrow,\n                          'firstIndex': firstIndex,\n                          'lastIndex': lastIndex\n                      };\n                      return Restangular.all(escrowConfig.escrowEndPoint).customGET('', params);\n                  };\n\n                  this.escrowSign = function (publicKey, escrow, decision, fee ) {\n                      Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                      var params = {\n                          'requestType': 'escrowSign',\n                          'publicKey': publicKey,\n                          'escrow': escrow,\n                          'decision': decision,\n                          'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                          'deadline': OptionsService.getOption('DEADLINE'),\n                          'broadcast': 'false'\n\n                      };\n\n                      // return Restangular.all(escrowConfig.escrowEndPoint).customPOST('', '', params, '');\n\n                      return TransactionService.createTransaction(params);\n\n                  };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('escrow').controller('EscrowMainCtrl',\n    ['$scope', 'EscrowService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter',\n        function ($scope, EscrowService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter) {\n\n                  $scope.openCreateEscrowModal = function () {\n\n                      var modalInstance = $uibModal.open({\n                          animation: true,\n                          templateUrl: 'escrow/modals/create-escrow-form.html',\n                          size: 'lg',\n                          controller: 'EscrowFormCtrl',\n                          resolve: {\n                              params: function () {\n                                  return {};\n                              }\n                          }\n                      });\n                  };\n\n                  $scope.openSignEscrowModal = function (escrowId) {\n\n                      var modalInstance = $uibModal.open({\n                          animation: true,\n                          templateUrl: 'escrow/modals/sign-escrow-form.html',\n                          size: 'lg',\n                          controller: 'EscrowFormCtrl',\n                          resolve: {\n                              params: function () {\n                                  return {\n                                  'escrowId' :  escrowId\n                                  };\n                              }\n                          }\n                      });\n                  };\n\n                  $scope.openStatusEscrowModal = function (escrowId) {\n                      var modalInstance = $uibModal.open({\n                          animation: true,\n                          templateUrl: 'escrow/modals/status-escrow-details.html',\n                          size: 'lg',\n                          controller: 'EscrowStatusCtrl',\n                          resolve: {\n                              params: function () {\n                                  return {\n                                  'escrowId' :  escrowId\n                                  };\n                              }\n                          }\n                      });\n                  };\n\n}]);\n\nangular.module('escrow').controller('EscrowFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n        var createEscrowSteps = [\n            {\n                templateUrl: 'escrow/modals/create-escrow-details.html',\n                title: 'Create Escrow Details',\n                controller: 'CreateEscrowCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'escrow/modals/create-escrow-confirm.html',\n                title: 'Create Escrow Confirmation',\n                controller: 'CreateEscrowCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n        var signEscrowSteps = [\n            {\n                templateUrl: 'escrow/modals/sign-escrow-details.html',\n                title: 'Sign Escrow Details',\n                controller: 'SignEscrowCtrl',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'escrow/modals/sign-escrow-confirm.html',\n                title: 'Sign Escrow Confirmation',\n                controller: 'SignEscrowCtrl',\n                isolatedScope: true,\n            },\n        ];\n\n\n        $scope.steps = {};\n\n        $scope.steps.createEscrowSteps = createEscrowSteps;\n        $scope.steps.signEscrowSteps = signEscrowSteps;\n\n\n    }]);\n\nangular.module('escrow').controller('MyEscrowCtrl',\n    ['$scope', 'EscrowService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'AccountService',\n        function ($scope, EscrowService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, AccountService) {\n\n                  $scope.dtMyEscrowOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                      .withDOM('frtip')\n                      .withOption('info', false)\n                      .withOption('ordering', false)\n                      .withOption('serverSide', true)\n                      .withDataProp('data')\n                      .withOption('processing', true)\n                      .withOption('bFilter', false)\n                      .withOption('fnRowCallback',\n                          function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                              $compile(nRow)($scope);\n                          })\n                      .withOption('ajax', function (data, callback, settings) {\n                          var endIndex = data.start + data.length - 1;\n\n                          var account = AccountService.getAccountDetailsFromSession('accountId');\n                          EscrowService.getAccountEscrowTransactions(account, data.start, endIndex ).then(function (response) {\n\n                              if (!response.escrows) { response.escrows = {}; }\n\n                              callback({\n                                  'iTotalRecords': 1000,\n                                  'iTotalDisplayRecords': 1000,\n                                  'data': response.escrows\n                              });\n                          });\n                      })\n                      .withDisplayLength(10).withBootstrap();\n\n                  $scope.dtMyEscrowColumns = [\n\n                      DTColumnBuilder.newColumn('id').withTitle('Details').notSortable()\n                          .renderWith(function (data, type, row, meta) {\n                              return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                                  ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                                  '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' + '</button>';\n\n                          }),\n\n                      DTColumnBuilder.newColumn('id').withTitle('Role').notSortable()\n                          .renderWith(function (data, type, row, meta) {\n\n                            var account = AccountService.getAccountDetailsFromSession('accountRs');\n\n                            var role = 'SENDER';\n                            if (account === row.senderRS) {\n                                role = 'SENDER';\n                              } else if (account === row.recipientRS) {\n                                role = 'RECIPIENT';\n                              } else { role = 'SIGNER';  }\n\n                              return  role;\n                          }),\n\n\n                      DTColumnBuilder.newColumn('deadline').withTitle('Expires').notSortable()\n                          .renderWith(function (data, type, row, meta) {\n                              return timestampFilter(data);\n                          }),\n\n                      DTColumnBuilder.newColumn('deadlineAction').withTitle('Deadline').notSortable()\n                          .renderWith(function (data, type, row, meta) {\n                              return data.toUpperCase();\n                          }),\n\n                      DTColumnBuilder.newColumn('senderRS').withTitle('Sender').notSortable()\n                          .renderWith(function (data, type, row, meta) {\n                            if (data) {\n                                return searchTermFilter(data);\n                            }\n                            return data;\n                          }),\n\n                      DTColumnBuilder.newColumn('amountTQT').withTitle('Amount').notSortable()\n                          .renderWith(function (data, type, row, meta) {\n                              return amountTQTFilter(data);\n                          }),\n\n                      DTColumnBuilder.newColumn('recipientRS').withTitle('Recipient').notSortable()\n                          .renderWith(function (data, type, row, meta) {\n                            if (data) {\n                                return searchTermFilter(data);\n                            }\n                            return data;\n                          }),\n\n                      DTColumnBuilder.newColumn('id').withTitle('Action').notSortable()\n                          .renderWith(function (data, type, row, meta) {\n\n                            var account = AccountService.getAccountDetailsFromSession('accountRs');\n                            var signTag = true;\n                            var signColor = 'btn-default';\n                            var statusTag = false;\n\n                            for (i = 0; i < row.signers.length; i++) {\n\n\n                                if (account === row.signers[i].idRS && row.signers[i].decision === 'undecided') {\n                                  signTag = false;\n                                  signColor = 'btn-success';\n                                }\n                            }\n\n                            var signTooltip = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                ' \"Sign Escrow\"';\n\n                            var signEscrow = '<button type=\"button\" class=\"btn ' + signColor + ' btn-xs\"  ' + signTooltip + ' ng-controller=\"EscrowMainCtrl\"' +\n                                'ng-disabled=\"' + signTag + '\"' + ' ng-click=\"openSignEscrowModal(\\'' + row.id + '\\')\">' +\n                                ' <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                            var statusTooltip = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                ' \"Escrow Status\"';\n\n                            var statusEscrow = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' + statusTooltip + ' ng-controller=\"EscrowMainCtrl\"' +\n                                'ng-disabled=\"' + statusTag + '\"' + ' ng-click=\"openStatusEscrowModal(\\'' + row.id + '\\')\">' +\n                                ' <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' + '</button>';\n\n                            return statusEscrow + ' ' + signEscrow;\n\n                          })\n\n                  ];\n\n                  $scope.dtMyEscrowInstanceCallback = function (_dtInstance) {\n                      $scope.dtInstance = _dtInstance;\n                  };\n                  $scope.reloadMyEscrow = function () {\n                      if ($scope.dtInstance) {\n                          $scope.dtInstance._renderer.rerender();\n                      }\n                  };\n\n\n\n}]);\n\nangular.module('escrow').controller('CreateEscrowCtrl',\n    ['$scope', 'EscrowService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', '$rootScope',\n        'CommonsService', 'AccountService', 'amountToQuantFilter', 'CurrenciesService',\n        function ($scope, EscrowService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope,\n                  $rootScope, CommonsService, AccountService, amountToQuantFilter, CurrenciesService) {\n\n                    $scope.createEscrow = angular.copy(multiStepFormScope.createEscrow);\n\n                    $scope.$on('$destroy', function () {\n                        multiStepFormScope.createEscrow = angular.copy($scope.createEscrow);\n                    });\n\n                    $scope.openAddressBookModal = function () {\n                        var modalInstance = $uibModal.open({\n                            animation: true,\n                            templateUrl: 'addressbook/views/addressbook-light.html',\n                            controller: 'AddressBookCtrl',\n                            resolve: {\n                                params: function () {\n                                    return {\n                                        'closeOnClick': true\n                                    };\n                                }\n                            }\n                        });\n                        modalInstance.result.then(function (result) {\n                            $scope.createEscrow.recipientRS = result.accountRS;\n                        });\n                    };\n\n                    $scope.hasPrivateKeyInSession = function () {\n                        if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                            return true;\n                        }\n                        return false;\n                    };\n\n                    $scope.escrowDeadline = 1;\n                    $scope.day = 1;\n                    $scope.hmax = 90;\n                    $scope.days = 1;\n\n                    $scope.increment = function () {\n                        if ($scope.escrowDeadline >= $scope.hmax) {\n                            $scope.escrowDeadline = $scope.hmax;\n                            return;\n                        } else {\n                            $scope.escrowDeadline = $scope.escrowDeadline + $scope.day;\n                        }\n\n                        $scope.createEscrow.escrowDeadline = $scope.escrowDeadline;\n                        $scope.days = parseInt($scope.escrowDeadline / $scope.day);\n                    };\n\n                    $scope.decrement = function () {\n                        if ($scope.escrowDeadline <= $scope.day) {\n                            $scope.escrowDeadline = $scope.day;\n                            return;\n                        } else {\n                            $scope.escrowDeadline = $scope.escrowDeadline - $scope.day;\n                        }\n\n                        $scope.createEscrow.escrowDeadline = $scope.escrowDeadline;\n                        $scope.days = parseInt($scope.escrowDeadline / $scope.day);\n                    };\n\n                    $scope.deadlineActionOptions = [\n                      { label: 'Refund', value: 'refund' },\n                       { label: 'Relase', value: 'release' },\n                       { label: 'Split', value: 'Split' },\n                     ];\n\n                    $scope.createEscrow = function () {\n\n                        var escrowForm = multiStepFormScope.createEscrow;\n\n                        $scope.createEscrow.recipientRS = escrowForm.recipientRS;\n                        $scope.createEscrow.amount = escrowForm.amount;\n                        $scope.createEscrow.escrowDeadline = escrowForm.escrowDeadline;\n                        $scope.createEscrow.deadlineAction = escrowForm.deadlineAction;\n                        $scope.createEscrow.requiredSigners = escrowForm.requiredSigners;\n                        $scope.createEscrow.signers = escrowForm.signers;\n\n                        var recipientRS = escrowForm.recipientRS;\n                        var amountTQT = amountToQuantFilter(escrowForm.amount);\n                        var escrowDeadline = parseInt(escrowForm.escrowDeadline * 86400);\n                        var deadlineAction = escrowForm.deadlineAction;\n                        var requiredSigners = escrowForm.requiredSigners;\n                        var signers = escrowForm.signers;\n\n                        var fee = 1;\n\n                        var senderPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n                        var secretPhraseHex = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n\n                        $scope.setCreateEscrowPromise = AccountService.getAccountDetails(recipientRS).then(function (success) {\n\n                            var recipientPublicKey = success.publicKey;\n\n                            if (!success.errorCode || success.errorCode === 5) {\n\n                                $scope.accountDetails = success;\n\n                                if (!recipientPublicKey) {\n                                    AlertService.addAlert(\n                                        {\n                                            type: 'info',\n                                            msg: 'Note: This account never had an outbound transaction. Make sure this account is the right one. In doubt, ask the account holder for his public key and add it on the former page to this transaction.'\n                                        }, alertConfig.createEscrowAlert\n                                    );\n                                }\n\n                                $scope.setCreateEscrowPromise = EscrowService.createEscrow(\n                                    senderPublicKey,\n                                    recipientRS,\n                                    amountTQT,\n                                    escrowDeadline,\n                                    deadlineAction,\n                                    requiredSigners,\n                                    signers,\n                                    fee\n                                  ).then(function (success) {\n\n\n                                      if (!success.errorCode) {\n                                          var unsignedBytes = success.unsignedTransactionBytes;\n                                          var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                                          $scope.transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                                          $scope.validBytes = true;\n\n                                          $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                                          $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                                          $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                                      } else {\n                                          AlertService.addAlert(\n                                              {\n                                                  type: 'danger',\n                                                  msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                              }, alertConfig.createEscrowAlert\n                                          );\n                                      }\n\n                                    }, function (error) {\n                                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                            alertConfig.createEscrowAlert);\n                                    });\n\n                            } else {\n                                AlertService.addAlert(\n                                    {\n                                        type: 'danger',\n                                        msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                    }, alertConfig.createEscrowAlert\n                                );\n                            }\n                        },function (error) {\n                            AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                alertConfig.createEscrowAlert);\n                        });\n                    };\n\n                    $scope.broadcastTransaction = function (transactionBytes) {\n                      $scope.createEscrowPromise = AccountService.broadcastTransaction(transactionBytes).then(function (success) {\n\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                    ''\n                                });\n\n                            $scope.$emit('close-modal');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                                });\n                        }\n\n                      }, function (error) {\n                          AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                              alertConfig.createEscrowAlert);\n                      });\n                    };\n\n\n}]);\n\nangular.module('escrow').controller('EscrowStatusCtrl',\n    ['$scope', 'EscrowService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'AccountService', '$uibModalInstance', 'params',\n        function ($scope, EscrowService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, AccountService, $uibModalInstance, params) {\n\n                    $scope.escrowId = params.escrowId;\n\n                    $scope.cancel = function () {\n                        $uibModalInstance.dismiss('cancel');\n                    };\n\n                    $scope.$on('close-modal', function () {\n                        $uibModalInstance.dismiss('cancel');\n                    });\n\n                  $scope.dtStatusEscrowOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                      .withDOM('frtip')\n                      .withOption('info', false)\n                      .withOption('ordering', false)\n                      .withOption('serverSide', true)\n                      .withDataProp('data')\n                      .withOption('processing', true)\n                      .withOption('bFilter', false)\n                      .withOption('fnRowCallback',\n                          function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                              $compile(nRow)($scope);\n                          })\n                      .withOption('ajax', function (data, callback, settings) {\n                          var endIndex = data.start + data.length - 1;\n                          EscrowService.getEscrowTransaction( $scope.escrowId, data.start, endIndex ).then(function (response) {\n\n                              callback({\n                                  'iTotalRecords': 10,\n                                  'iTotalDisplayRecords': 10,\n                                  'data': response.signers\n                              });\n                          });\n                      })\n                      .withDisplayLength(5).withBootstrap();\n\n                  $scope.dtStatusEscrowColumns = [\n\n                      DTColumnBuilder.newColumn('idRS').withTitle('Signer').notSortable()\n                          .renderWith(function (data, type, row, meta) {\n                              return searchTermFilter(data);\n                          }),\n\n                      DTColumnBuilder.newColumn('decision').withTitle('Decision').notSortable()\n                          .renderWith(function (data, type, row, meta) {\n                              return  data.toUpperCase();\n                          }),\n                  ];\n\n                  $scope.dtStatusEscrowInstanceCallback = function (_dtInstance) {\n                      $scope.dtInstance = _dtInstance;\n                  };\n                  $scope.reloadStatusEscrow = function () {\n                      if ($scope.dtInstance) {\n                          $scope.dtInstance._renderer.rerender();\n                      }\n                  };\n\n}]);\n\nangular.module('escrow').controller('SignEscrowCtrl',\n    ['$scope', 'EscrowService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', '$rootScope',\n        'CommonsService', 'AccountService', 'amountToQuantFilter', 'CurrenciesService',\n        function ($scope, EscrowService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope,\n                  $rootScope, CommonsService, AccountService, amountToQuantFilter, CurrenciesService) {\n\n                  $scope.signEscrow = angular.copy(multiStepFormScope.signEscrow);\n\n                  $scope.initStep1 = function () {\n                      var data = $scope.$getActiveStep().data || {};\n                      if (data.escrowId) {\n\n                        $scope.signEscrow.ID = $scope.$getActiveStep().data.escrowId;\n\n                      }\n                  };\n\n\n                  $scope.$on('$destroy', function () {\n                      multiStepFormScope.signEscrow = angular.copy($scope.signEscrow);\n                  });\n\n                  $scope.decisionOptions = [\n                    { label: 'Refund', value: 'refund' },\n                    { label: 'Relase', value: 'release' },\n                    { label: 'Split', value: 'split' },\n                   ];\n\n                   $scope.signEscrow = function () {\n\n                       var escrowForm = multiStepFormScope.signEscrow;\n\n                       $scope.signEscrow.ID = escrowForm.ID;\n                       $scope.signEscrow.decision = escrowForm.decision;\n\n                       var escrow = escrowForm.ID;\n                       var decision = escrowForm.decision;\n                       var fee = 1;\n\n                       var senderPublicKey = AccountService.getAccountDetailsFromSession('publicKey');\n                       var secretPhraseHex = SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n\n                       $scope.setSignEscrowPromise = EscrowService.escrowSign(\n                           senderPublicKey,\n                           escrow,\n                           decision,\n                           fee\n                         ).then(function (success) {\n\n                             if (!success.errorCode) {\n                                 var unsignedBytes = success.unsignedTransactionBytes;\n                                 var signatureHex = CryptoService.signatureHex(unsignedBytes, secretPhraseHex);\n                                 $scope.transactionBytes = CryptoService.signTransactionHex(unsignedBytes, signatureHex);\n                                 $scope.validBytes = true;\n\n                                 $scope.tx_fee = success.transactionJSON.feeTQT / 100000000;\n                                 $scope.tx_amount = success.transactionJSON.amountTQT / 100000000;\n                                 $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                             } else {\n                                 AlertService.addAlert(\n                                     {\n                                         type: 'danger',\n                                         msg: 'Sorry, an error occured! Reason: ' + success.errorDescription\n                                     }, alertConfig.signEscrowAlert\n                                 );\n                             }\n\n                           }, function (error) {\n                               AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                                   alertConfig.signEscrowAlert);\n                           });\n\n                    };\n\n                  $scope.broadcastTransaction = function (transactionBytes) {\n                    $scope.setSignEscrowPromise = AccountService.broadcastTransaction(transactionBytes).then(function (success) {\n\n                      if (!success.errorCode) {\n                          AlertService.addAlert(\n                              {\n                                  type: 'success',\n                                  msg: 'Transaction succesfull broadcasted with Id : ' + success.transaction +\n                                  ''\n                              });\n\n                          $scope.$emit('close-modal');\n                      } else {\n                          AlertService.addAlert(\n                              {\n                                  type: 'danger',\n                                  msg: 'Unable to broadcast transaction. Reason: ' + success.errorDescription\n                              });\n                      }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.signEscrowAlert);\n                    });\n                  };\n\n}]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('shufflings',\n    ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node', 'assets', 'currencies', 'options']);\n\nangular.module('shufflings').constant('shufflingsConfig', {\n    'shufflingEndPoint': 'api',\n});\n\nangular.module('shufflings').config(['RestangularProvider', 'shufflingsConfig', '$stateProvider', '$urlRouterProvider',\n    function (RestangularProvider, shufflingsConfig, $stateProvider, $urlRouterProvider) {\n\n        RestangularProvider.setRestangularFields({\n            options: '_options'\n        });\n\n        $stateProvider.state('client.signedin.shufflings', {\n            url: '^/shufflings',\n            templateUrl: './shufflings/views/main.html',\n            abstract: true,\n        }).state('client.signedin.shufflings.shufflings', {\n            url: '^/shufflings/shufflings',\n            templateUrl: './shufflings/views/shufflings.html',\n            controller: 'ShufflingsCtrl',\n        }).state('client.signedin.shufflings.myshufflings', {\n            url: '^/shufflings/myshufflings',\n            templateUrl: './shufflings/views/myshufflings.html',\n            controller: 'MyShufflingsCtrl',\n        });\n\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('shufflings').service('ShufflingService',\n    ['nodeConfig', 'SessionStorageService', 'NodeService', 'baseConfig', 'shufflingsConfig', 'Restangular',\n        'TransactionService', '$rootScope', 'OptionsService', 'CommonsService',\n        function (nodeConfig, SessionStorageService, NodeService, baseConfig, shufflingsConfig, Restangular,\n                  TransactionService, $rootScope, OptionsService, CommonsService) {\n\n            var ShufflingService = this;\n\n            this.getAllShufflings = function (firstIndex, lastIndex, includeFinished) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAllShufflings',\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeFinished': includeFinished,\n                    'includeHoldingInfo': true\n                };\n                return Restangular.all(shufflingsConfig.shufflingEndPoint).customGET('', params);\n            };\n\n            this.getAccountShufflings = function (account, firstIndex, lastIndex, includeFinished) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAccountShufflings',\n                    'account': account,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'includeFinished': includeFinished,\n                    'includeHoldingInfo': true\n                };\n                return Restangular.all(shufflingsConfig.shufflingEndPoint).customGET('', params);\n            };\n\n            this.createShuffling =\n                function (publicKey, amount, participantCount, registrationPeriod, holding, holdingType, fee) {\n\n                    var params = {\n                        'requestType': 'shufflingCreate',\n                        'amount': parseInt(amount),\n                        'publicKey': publicKey,\n                        'participantCount': participantCount,\n                        'registrationPeriod': registrationPeriod,\n                        'holding': holding,\n                        'holdingType': holdingType,\n                        'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                        'deadline': OptionsService.getOption('DEADLINE'),\n                        'broadcast': 'false',\n                    };\n                    return TransactionService.createTransaction(params);\n                };\n\n            this.registerShuffle = function (publicKey, fee, shufflingFullHash) {\n                var params = {\n                    'requestType': 'shufflingRegister',\n                    'shufflingFullHash': shufflingFullHash,\n                    'publicKey': publicKey,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.isLocalHostOrTestnet = function () {\n                var connectionMode = OptionsService.getOption('CONNECTION_MODE');\n                if (\n                    connectionMode === 'TESTNET' ||\n                    connectionMode === 'LOCAL_HOST' ||\n                    connectionMode === 'DEVTESTNET') {\n                    return true;\n                }\n                if (connectionMode === 'MANUAL') {\n                    var connectedUrl = NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                        OptionsService.getOption('RANDOMIZE_NODES'));\n                    if (connectedUrl.indexOf('localhost') > -1) {\n                        return true;\n                    }\n                }\n\n            }\n\n            this.getShufflingParticipants = function (shufflingId) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getShufflingParticipants',\n                    'shuffling': shufflingId\n                };\n                return Restangular.all(shufflingsConfig.shufflingEndPoint).customGET('', params);\n            };\n\n            this.getShuffling = function (shufflingId) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getShuffling',\n                    'shuffling': shufflingId,\n                    'includeHoldingInfo': true\n                };\n                return Restangular.all(shufflingsConfig.shufflingEndPoint).customGET('', params);\n            };\n\n            this.getShufflers = function (adminPassword, account, shufflingFullHash, secretPhrase) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getShufflers',\n                    'adminPassword': adminPassword,\n                    'account': account,\n                    'shufflingFullHash': shufflingFullHash,\n                    'secretPhrase': secretPhrase,\n                    'adminPassword': adminPassword,\n                    'includeParticipantState': true\n                };\n                return Restangular.all(shufflingsConfig.shufflingEndPoint).customGET('', params);\n            };\n\n            this.getShuffleAndStopIfExpired = function (shuffleId, adminPassword) {\n                return ShufflingService.getShuffling(shuffleId).then(function (success) {\n                    if (!success.errorCode) {\n                        if ((success.stage === 4 || success.stage === 5)) {\n                            return ShufflingService.stopShuffler(success.shufflingFullHash, undefined, 1,\n                                adminPassword, CommonsService.getAccountDetailsFromSession('accountRs'))\n                                                   .then(function (success) {\n                                                       return Promise.resolve(success);\n                                                   }, function (error) {\n                                                       return Promise.resolve(error);\n                                                   });\n                        }\n                        return Promise.resolve('Shuffling is in starat state');\n                    } else {\n                        return Promise.resolve(success);\n                    }\n                }, function (error) {\n                    return Promise.resolve(error);\n                })\n            };\n\n            this.getHoldingShufflings =\n                function (holding, stage, includeFinished, firstIndex, lastIndex, adminPassword) {\n                    Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                        OptionsService.getOption('RANDOMIZE_NODES')));\n                    var params = {\n                        'requestType': 'getHoldingShufflings',\n                        'holding': holding,\n                        'stage': stage,\n                        'includeFinished': includeFinished,\n                        'firstIndex': firstIndex,\n                        'lastIndex': lastIndex,\n                        'adminPassword': adminPassword\n                    };\n                    return Restangular.all(shufflingsConfig.shufflingEndPoint).customGET('', params);\n                };\n\n            this.getAssignedShufflings = function (account, stage, firstIndex, lastIndex, adminPassword) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                    OptionsService.getOption('RANDOMIZE_NODES')));\n                var params = {\n                    'requestType': 'getAssignedShufflings',\n                    'account': account,\n                    'includeHoldingInfo': true,\n                    'firstIndex': firstIndex,\n                    'lastIndex': lastIndex,\n                    'adminPassword': adminPassword\n                };\n                return Restangular.all(shufflingsConfig.shufflingEndPoint).customGET('', params);\n            };\n\n            this.shufflingVerify = function (shuffling, shufflingStateHash, recipientSecretPhrase, secretPhrase, fee) {\n                var params = {\n                    'requestType': 'shufflingVerify',\n                    'shuffling': shuffling,\n                    'shufflingStateHash': shufflingStateHash,\n                    'recipientSecretPhrase': recipientSecretPhrase,\n                    'secretPhrase': secretPhrase,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.startShuffler =\n                function (secretPhrase, shufflingFullHash, recipientSecretPhrase, recipientPublicKey, fee) {\n                    var params = {\n                        'requestType': 'startShuffler',\n                        'secretPhrase': secretPhrase,\n                        'shufflingFullHash': shufflingFullHash,\n                        'recipientSecretPhrase': recipientSecretPhrase,\n                        'recipientPublicKey': recipientPublicKey,\n                        'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                        'deadline': OptionsService.getOption('DEADLINE'),\n                        'broadcast': 'false',\n                    };\n                    return TransactionService.createTransaction(params);\n\n                };\n\n            this.stopShuffler = function (shufflingFullHash, secretPhrase, fee, adminPassword, account) {\n                var params = {\n                    'requestType': 'stopShuffler',\n                    'shufflingFullHash': shufflingFullHash,\n                    'secretPhrase': secretPhrase,\n                    'adminPassword': adminPassword,\n                    'account': account,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n            this.cancelShuffle = function (secretPhrase, shufflingId, shufflingStateHash, cancelAccountId, fee) {\n                var params = {\n                    'requestType': 'shufflingCancel',\n                    'shuffling': shufflingId,\n                    'shufflingStateHash': shufflingStateHash,\n                    'secretPhrase': secretPhrase,\n                    'cancellingAccount': cancelAccountId,\n                    'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                    'deadline': OptionsService.getOption('DEADLINE'),\n                    'broadcast': 'false',\n                };\n                return TransactionService.createTransaction(params);\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\n\nangular.module('shufflings').controller('ShufflingsMainCtrl',\n    ['$scope', 'ShufflingService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'shufflingsConfig', '$q',\n        'AlertService', 'CryptoService', 'CommonsService', 'SessionStorageService', 'loginConfig',\n        function ($scope, ShufflingService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, shufflingsConfig, $q, AlertService,\n                  CryptoService, CommonsService, SessionStorageService, loginConfig) {\n\n            $scope.openCreateShuffleModal = function () {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'shufflings/modals/create-shuffle-form.html',\n                    size: 'lg',\n                    controller: 'ShufflingFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openRegisterShuffleModal = function (shufflingFullHash, amount, shuffling, holding) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'shufflings/modals/register-shuffle-form.html',\n                    size: 'lg',\n                    controller: 'ShufflingFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                shufflingFullHash: shufflingFullHash,\n                                amount: amount,\n                                shuffling: shuffling,\n                                holding: holding\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openStartShuffleModal = function (shufflingFullHash) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'shufflings/modals/start-shuffle-form.html',\n                    size: 'lg',\n                    controller: 'ShufflingFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                shufflingFullHash: shufflingFullHash\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openStopShuffleModal = function (shufflingFullHash) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'shufflings/modals/stop-shuffle-form.html',\n                    size: 'lg',\n                    controller: 'ShufflingFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                shufflingFullHash: shufflingFullHash\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openCancelShuffleModal = function (shufflingId, shufflingStateHash, cancellingAccountId) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'shufflings/modals/cancel-shuffle-form.html',\n                    size: 'lg',\n                    controller: 'ShufflingFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                shufflingId: shufflingId,\n                                shufflingStateHash: shufflingStateHash,\n                                cancellingAccountId: cancellingAccountId\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openShufflingParticipantsModal = function (shufflingId) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'shufflings/modals/shuffling-participants.html',\n                    size: 'lg',\n                    controller: 'ShufflingParticipantsCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                shufflingId: shufflingId\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.openShufflingDetailsModal = function (shufflingId) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'shufflings/modals/shuffling-details.html',\n                    size: 'lg',\n                    controller: 'ShufflingDetailsCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                shufflingId: shufflingId\n                            };\n                        }\n                    }\n                });\n            };\n\n            $scope.clearAllShufflers = function () {\n                var account = CommonsService.getAccountDetailsFromSession('accountId');\n                var secretPhraseHex =\n                    SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                $scope.clearShufflerPromise =\n                    ShufflingService.getAccountShufflings(account, undefined, undefined, true).then(function (success) {\n                        var existingShufflers = success.shufflings;\n                        if (existingShufflers.length > 0) {\n                            var promisesArray = [];\n                            var maxLength = Math.min(existingShufflers.length, 10);\n                            for (var i = 0; i < maxLength; i++) {\n                                var current = existingShufflers[i];\n                                if ((current.stage === 4 || current.stage === 5)) {\n                                    promisesArray.push(ShufflingService.stopShuffler(current.shufflingFullHash,\n                                        CryptoService.secretPhraseFromPrivateKey(secretPhraseHex)));\n                                }\n                            }\n                            if (promisesArray.length > 0) {\n                                $scope.clearShufflerPromise = $q.all(promisesArray).then(function (success) {\n                                    AlertService.addAlert({\n                                        type: 'success',\n                                        msg: 'Succesfully stopped all the shufflers on testnet node'\n                                    });\n                                }, function (error) {\n\n                                });\n                            }\n                        }\n                    }, function (error) {\n\n                    })\n            };\n\n        }]);\n\nangular.module('shufflings').controller('ShufflingsCtrl',\n    ['$scope', 'ShufflingService', 'DTOptionsBuilder', 'DTColumnBuilder', '$interval', '$uibModal', '$compile',\n        'amountTQTFilter', 'baseConfig', 'searchTermFilter', 'SessionStorageService', 'shufflingStageFilter',\n        'holdingTypeFilter', 'CommonsService', 'quantityToShareFilter', 'numberStringFilter', '$sanitize',\n        function ($scope, ShufflingService, DTOptionsBuilder, DTColumnBuilder, $interval, $uibModal, $compile,\n                  amountTQTFilter, baseConfig, searchTermFilter, SessionStorageService, shufflingStageFilter,\n                  holdingTypeFilter, CommonsService, quantityToShareFilter, numberStringFilter, $sanitize) {\n\n\n            $scope.includeFinished = false;\n\n            $scope.account = CommonsService.getAccountDetailsFromSession('accountRs');\n\n            $scope.filterNone = function () {\n                $scope.includeFinished = false;\n                $scope.reloadShufflings();\n            };\n\n            $scope.activeShuffles = function () {\n                $scope.includeFinished = false;\n                $scope.reloadShufflings();\n            };\n\n            $scope.allShuffles = function () {\n                $scope.includeFinished = true;\n                $scope.reloadShufflings();\n            };\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                                               .withDOM('frtip')\n                                               .withOption('info', false)\n                                               .withOption('ordering', false)\n                                               .withOption('serverSide', true)\n                                               .withDataProp('shufflings')\n                                               .withOption('processing', true)\n                                               .withOption('ordering', false)\n                                               .withOption('bFilter', false)\n                                               .withOption('fnRowCallback',\n                                                   function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                                                       $compile(nRow)($scope);\n                                                   })\n                                               .withOption('ajax', function (data, callback, settings) {\n                                                   var endIndex = data.start + data.length - 1;\n                                                   ShufflingService.getAllShufflings(data.start, endIndex,\n                                                       $scope.includeFinished)\n                                                                   .then(function (response) {\n                                                                       callback({\n                                                                           'iTotalRecords': 1000,\n                                                                           'iTotalDisplayRecords': 1000,\n                                                                           'shufflings': response.shufflings || []\n                                                                       });\n                                                                   });\n                                               })\n                                               .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('shuffling').withTitle('Details').notSortable()\n\n                               .renderWith(function (data, type, row, meta) {\n                                   return '<button class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                                       ' ' +\n                                       'ng-click=\"searchValue(\\'' + $sanitize(data) + '\\')\">' +\n                                       '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' +\n                                       '</button>';\n                               }),\n\n                DTColumnBuilder.newColumn('participantCount').withTitle('Participants').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return $sanitize(data) + '/' + $sanitize(row['registrantCount']);\n                               }),\n\n                DTColumnBuilder.newColumn('shuffling').withTitle('Shuffling').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   var but_col_info = 'btn-default';\n                                   var tt_info = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                       ' \"Shuffling Details\"';\n\n                                   var info = '<button type=\"button\" class=\"btn ' + but_col_info + ' btn-xs\" + '\n                                       + tt_info +\n                                       ' ng-controller=\"ShufflingsMainCtrl\"' +\n                                       ' ng-click=\"openShufflingDetailsModal(\\'' + $sanitize(data) +\n                                       '\\')\" ng-disabled=\"' + 'false' +\n                                       '\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                                   return info;\n\n                               }),\n\n                DTColumnBuilder.newColumn('stage').withTitle('Stage').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return shufflingStageFilter( $sanitize(data));\n                               }),\n\n\n                DTColumnBuilder.newColumn('holdingType').withTitle('Type').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return holdingTypeFilter($sanitize(data));\n                               }),\n\n                DTColumnBuilder.newColumn('holding').withTitle('Holding').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n\n                                   var holdingType = row['holdingType'];\n                                   if (holdingType === 1) {\n                                       return '<a ng-click=\"openAssetDetailsModal(\\'' + $sanitize(data) +\n                                           '\\')\" ng-controller=\"AssetsMainCtrl\"> ' + 'Details' + '</a>';\n\n                                   } else if (holdingType === 2) {\n                                       return '<a ng-click=\"openCurrencyDetailsModal(\\'' + $sanitize(row.holdingInfo.code) +\n                                           '\\')\" ng-controller=\"CurrenciesMainCtrl\"> ' + 'Details' + '</a>';\n                                   } else {\n                                       return '';\n                                   }\n\n                               }),\n\n                DTColumnBuilder.newColumn('amount').withTitle('Amount').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   var holdingTYpe = row.holdingType;\n                                   if (holdingTYpe === 0) {\n                                       return amountTQTFilter($sanitize(data));\n                                   } else if (holdingTYpe === 1 || holdingTYpe === 2) {\n                                       return numberStringFilter(quantityToShareFilter(data, $sanitize(row.holdingInfo.decimals)));\n                                   }\n\n                               }),\n\n\n                DTColumnBuilder.newColumn('issuerRS').withTitle('Assigne').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return searchTermFilter($sanitize(data));\n                               }),\n\n                DTColumnBuilder.newColumn('blocksRemaining').withTitle('Blocks').notSortable(),\n\n                DTColumnBuilder.newColumn('shufflingFullHash').withTitle('Action').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   var canRegisterDisabled = false; // row.stage > 0;\n                                   var but_col = 'btn-success';\n\n                                   if (row.stage > 0 || row.issuerRS === $scope.account) {\n                                       canRegisterDisabled = true;\n                                       but_col = 'btn-default';\n                                   }\n                                   ;\n\n                                   var tt_join = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                       ' \"Join Shuffling\"';\n\n                                   var register = '<button type=\"button\" class=\"btn ' + but_col + ' btn-xs\" + '\n                                       + tt_join +\n                                       ' ng-controller=\"ShufflingsMainCtrl\"' +\n                                       ' ng-click=\"openRegisterShuffleModal(\\'' + $sanitize(data) + '\\',' + '\\'' + $sanitize(row.amount) +\n                                       '\\',' + '\\'' + $sanitize(row.shuffling) + '\\',' + '\\'' + $sanitize(row.holding) +\n                                       '\\')\" ng-disabled=\"' + canRegisterDisabled +\n                                       '\"> <i class=\"fa fa-plus\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                                   return register;\n\n                               }),\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadShufflings = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n        }]);\n\nangular.module('shufflings').controller('MyShufflingsCtrl',\n    ['$scope', 'ShufflingService', 'DTOptionsBuilder', 'DTColumnBuilder', '$interval', '$uibModal', '$compile',\n        'amountTQTFilter', 'baseConfig', 'searchTermFilter', 'SessionStorageService', 'shufflingStageFilter',\n        'holdingTypeFilter', 'CommonsService', 'quantityToShareFilter', 'numberStringFilter', 'shufflingsConfig', '$q',\n        'loginConfig','CryptoService', '$sanitize',\n        function ($scope, ShufflingService, DTOptionsBuilder, DTColumnBuilder, $interval, $uibModal, $compile,\n                  amountTQTFilter, baseConfig, searchTermFilter, SessionStorageService, shufflingStageFilter,\n                  holdingTypeFilter, CommonsService, quantityToShareFilter, numberStringFilter, shufflingsConfig, $q,\n                  loginConfig,CryptoService, $sanitize) {\n\n\n            $scope.includeFinished = false;\n\n            $scope.filterNone = function () {\n                $scope.includeFinished = false;\n                $scope.reloadShufflings();\n            };\n\n            $scope.activeShuffles = function () {\n                $scope.includeFinished = false;\n                $scope.reloadShufflings();\n            };\n\n            $scope.allShuffles = function () {\n                $scope.includeFinished = true;\n                $scope.reloadShufflings();\n            };\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                                               .withDOM('frtip')\n                                               .withOption('info', false)\n                                               .withOption('ordering', false)\n                                               .withOption('serverSide', true)\n                                               .withDataProp('shufflings')\n                                               .withOption('processing', true)\n                                               .withOption('ordering', false)\n                                               .withOption('bFilter', false)\n                                               .withOption('fnRowCallback',\n                                                   function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                                                       $compile(nRow)($scope);\n                                                   })\n                                               .withOption('ajax', function (data, callback, settings) {\n                                                   var endIndex = data.start + data.length - 1;\n                                                   var account = CommonsService.getAccountDetailsFromSession(\n                                                       'accountId');\n                                                   var secretPhraseHex =\n                                                       SessionStorageService.getFromSession(\n                                                           loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                                                   var shufflersPromise = ShufflingService.getShufflers(undefined,\n                                                       account,undefined,\n                                                       CryptoService.secretPhraseFromPrivateKey(secretPhraseHex));\n                                                   var accountShufflings = ShufflingService.getAccountShufflings(\n                                                       account, data.start, endIndex,\n                                                       $scope.includeFinished);\n                                                   $q.all([accountShufflings, shufflersPromise])\n                                                     .then(function (response) {\n                                                         var accountShufflings = response[0];\n                                                         $scope.shufflersState = {};\n                                                         angular.forEach(response[1].shufflers, function (newValue) {\n                                                             $scope.shufflersState[newValue.shuffling] = newValue;\n                                                         });\n                                                         callback({\n                                                             'iTotalRecords': 1000,\n                                                             'iTotalDisplayRecords': 1000,\n                                                             'shufflings': accountShufflings.shufflings || []\n                                                         });\n                                                     });\n                                               })\n                                               .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('shuffling').withTitle('Details').notSortable()\n\n                               .renderWith(function (data, type, row, meta) {\n                                   return '<button class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                                       ' ' +\n                                       'ng-click=\"searchValue(\\'' + $sanitize(data) + '\\')\">' +\n                                       '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' +\n                                       '</button>';\n                               }),\n\n                DTColumnBuilder.newColumn('participantCount').withTitle('Participants').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return '<a  ng-controller=\"ShufflingsMainCtrl\"' +\n                                       ' ng-click=\"openShufflingParticipantsModal(\\'' + $sanitize(row.shuffling) + '\\')\">' + $sanitize(data) +\n                                       '/' + row['registrantCount'] + '</a>';\n                               }),\n\n                DTColumnBuilder.newColumn('shuffling').withTitle('Shuffling').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   var but_col_info = 'btn-default';\n                                   var tt_info = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                       ' \"Shuffling Details\"';\n\n                                   var info = '<button type=\"button\" class=\"btn ' + but_col_info + ' btn-xs\" + '\n                                       + tt_info +\n                                       ' ng-controller=\"ShufflingsMainCtrl\"' +\n                                       ' ng-click=\"openShufflingDetailsModal(\\'' + $sanitize(data) +\n                                       '\\')\" ng-disabled=\"' + 'false' +\n                                       '\"> <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                                   return info;\n\n                               }),\n\n                DTColumnBuilder.newColumn('stage').withTitle('Stage').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return shufflingStageFilter($sanitize(data));\n                               }),\n\n\n                DTColumnBuilder.newColumn('holdingType').withTitle('Type').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return holdingTypeFilter($sanitize(data));\n                               }),\n\n                DTColumnBuilder.newColumn('holding').withTitle('Holding').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n\n                                   var holdingType = row['holdingType'];\n                                   if (holdingType === 1) {\n                                       return '<a ng-click=\"openAssetDetailsModal(\\'' + $sanitize(data) +\n                                           '\\')\" ng-controller=\"AssetsMainCtrl\"> ' + 'Details' + '</a>';\n\n                                   } else if (holdingType === 2) {\n                                       return '<a ng-click=\"openCurrencyDetailsModal(\\'' + $sanitize(row.holdingInfo.code) +\n                                           '\\')\" ng-controller=\"CurrenciesMainCtrl\"> ' + 'Details' + '</a>';\n                                   } else {\n                                       return '';\n                                   }\n\n                               }),\n\n                DTColumnBuilder.newColumn('amount').withTitle('Amount').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   var holdingTYpe = row.holdingType;\n                                   if (holdingTYpe === 0) {\n                                       return amountTQTFilter($sanitize(data));\n                                   } else if (holdingTYpe === 1 || holdingTYpe === 2) {\n                                       return numberStringFilter(quantityToShareFilter($sanitize(data), $sanitize(row.holdingInfo.decimals)));\n                                   }\n                               }),\n\n                DTColumnBuilder.newColumn('issuerRS').withTitle('Assigne').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return searchTermFilter($sanitize(data));\n                               }),\n\n                DTColumnBuilder.newColumn('blocksRemaining').withTitle('Blocks').notSortable(),\n\n                DTColumnBuilder.newColumn('shufflingFullHash').withTitle('Action').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   var canStartDisabled = row.stage !== 1;\n                                   var canStopDisabled = row.stage !== 1;\n                                   var canCancelDisabled = false;\n\n                                   var but_col_start = 'btn-default';\n                                   var but_col_stop = 'btn-default';\n                                   var but_col_cancel = 'btn-default';\n\n                                   canStartDisabled = $scope.shufflersState[row.shuffling]?true:false;\n                                   canStopDisabled = !$scope.shufflersState[row.shuffling]?true:false;\n                                   canCancelDisabled = false;\n\n                                   var tt_start = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                       ' \"Start Shuffling\"';\n\n                                   var tt_stop = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                       ' \"Stop Shuffling\"';\n\n                                   var start = '<button type=\"button\" class=\"btn ' + but_col_start + ' btn-xs\" + '\n                                       + tt_start +\n                                       ' ng-controller=\"ShufflingsMainCtrl\"' +\n                                       ' ng-click=\"openStartShuffleModal(\\'' + $sanitize(data) + '\\',' + '\\'' + $sanitize(row.amount) +\n                                       '\\')\" ng-disabled=\"' + canStartDisabled +\n                                       '\"> <i class=\"fa fa-play\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>';\n\n                                   var stop = '<button type=\"button\" class=\"btn ' + but_col_stop + ' btn-xs\" + '\n                                       + tt_stop +\n                                       ' ng-controller=\"ShufflingsMainCtrl\"' +\n                                       ' ng-click=\"openStopShuffleModal(\\'' + $sanitize(data) + '\\')\" ng-disabled=\"' +\n                                       canStopDisabled +\n                                       '\"> <i class=\"fa fa-stop\" aria-hidden=\"true\" style=\"width:15px;\"></i> </button>'\n\n                                   return start + '&nbsp;' + stop;\n\n                               }),\n\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadShufflings = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n        }]);\n\nangular.module('shufflings').controller('ShufflingFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n        var createShuffleSteps = [\n            {\n                templateUrl: 'shufflings/modals/create-shuffle-details.html',\n                title: 'Create Shuffle Details',\n                controller: 'CreateShuffleFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'shufflings/modals/create-shuffle-confirm.html',\n                title: 'Create Shuffle Confirmation',\n                controller: 'CreateShuffleFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var cancelShuffleSteps = [\n            {\n                templateUrl: 'shufflings/modals/cancel-shuffle-details.html',\n                title: 'Cancel Shuffle Details',\n                controller: 'CancelShuffleFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'shufflings/modals/cancel-shuffle-confirm.html',\n                title: 'Cacnel Shuffle Confirmation',\n                controller: 'CancelShuffleFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var registerShuffleSteps = [\n            {\n                templateUrl: 'shufflings/modals/register-shuffle-details.html',\n                title: 'Join Shuffle Details',\n                controller: 'RegisterShuffleFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'shufflings/modals/register-shuffle-confirm.html',\n                title: 'Join Shuffle Confirmation',\n                controller: 'RegisterShuffleFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        var startShuffleSteps = [\n            {\n                templateUrl: 'shufflings/modals/start-shuffle-details.html',\n                title: 'Start Shuffle Details',\n                controller: 'StartShuffleFormController',\n                isolatedScope: true,\n                data: params,\n            }\n        ];\n\n        var stopShuffleSteps = [\n            {\n                templateUrl: 'shufflings/modals/stop-shuffle-details.html',\n                title: 'Stop Shuffle Details',\n                controller: 'StopShuffleFormController',\n                isolatedScope: true,\n                data: params,\n            }\n        ];\n\n        $scope.steps = {};\n\n        $scope.steps.createShuffleForm = createShuffleSteps;\n        $scope.steps.registerShuffleForm = registerShuffleSteps;\n        $scope.steps.startShuffleForm = startShuffleSteps;\n        $scope.steps.stopShuffleForm = stopShuffleSteps;\n        $scope.steps.cancelShuffleForm = cancelShuffleSteps;\n\n    }]);\n\nangular.module('shufflings').controller('ShufflingParticipantsCtrl',\n    ['$scope', 'ShufflingService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'FeeService', '$rootScope',\n        'CommonsService', 'AssetsService', 'CurrenciesService', 'amountToQuantFilter', 'OptionsService',\n        '$uibModalInstance', 'params', 'searchTermFilter', 'shufflingStageFilter', 'DTOptionsBuilder',\n        'DTColumnBuilder', '$compile', '$sanitize',\n        function ($scope, ShufflingService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, FeeService,\n                  $rootScope, CommonsService, AssetsService, CurrenciesService, amountToQuantFilter, OptionsService,\n                  $uibModalInstance, params, searchTermFilter, shufflingStageFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $compile, $sanitize) {\n\n            $scope.params = params;\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                                               .withDOM('frtip')\n                                               .withOption('info', false)\n                                               .withOption('ordering', false)\n                                               .withOption('serverSide', true)\n                                               .withDataProp('participants')\n                                               .withOption('processing', true)\n                                               .withOption('ordering', false)\n                                               .withOption('bFilter', false)\n                                               .withOption('fnRowCallback',\n                                                   function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                                                       $compile(nRow)($scope);\n                                                   })\n                                               .withOption('ajax', function (data, callback, settings) {\n                                                   var endIndex = data.start + data.length - 1;\n                                                   ShufflingService.getShufflingParticipants(params.shufflingId)\n                                                                   .then(function (response) {\n\n                                                                       // console.log(response);\n\n                                                                       callback({\n                                                                           'iTotalRecords': response.participants.length,\n                                                                           'iTotalDisplayRecords': response.participants.length,\n                                                                           'participants': response.participants ||\n                                                                           []\n                                                                       });\n                                                                   });\n                                               })\n                                               .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('state').withTitle('Stage').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return shufflingStageFilter($sanitize(data));\n                               }),\n                DTColumnBuilder.newColumn('accountRS').withTitle('Assigne').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return searchTermFilter($sanitize(data));\n                               }),\n\n            ];\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.$on('close-modal', function () {\n                $uibModalInstance.dismiss('cancel');\n            });\n\n\n        }]);\n\nangular.module('shufflings').controller('ShufflingDetailsCtrl',\n    ['$scope', 'ShufflingService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'FeeService', '$rootScope',\n        'CommonsService', 'AssetsService', 'CurrenciesService', 'amountToQuantFilter', 'OptionsService',\n        '$uibModalInstance', 'params', 'searchTermFilter', 'shufflingStageFilter', 'DTOptionsBuilder',\n        'DTColumnBuilder', '$compile',\n        function ($scope, ShufflingService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, FeeService,\n                  $rootScope, CommonsService, AssetsService, CurrenciesService, amountToQuantFilter, OptionsService,\n                  $uibModalInstance, params, searchTermFilter, shufflingStageFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $compile) {\n\n            $scope.params = params;\n\n            $scope.getShuffleDetails = function (shufflingId) {\n                shufflingId = shufflingId || params.shufflingId;\n                $scope.shuffleDetailsPromise = ShufflingService.getShuffling(shufflingId).then(function (success) {\n                    $scope.shuffle = success;\n                }, function (error) {\n                    console.log(error);\n                });\n            };\n\n            $scope.cancel = function () {\n                $uibModalInstance.dismiss('cancel');\n            };\n\n            $scope.$on('close-modal', function () {\n                $uibModalInstance.dismiss('cancel');\n            });\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('shufflings').controller('CreateShuffleFormController',\n    ['$scope', 'ShufflingService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'AssetsService', 'CurrenciesService', 'amountToQuantFilter', 'OptionsService',\n        'shareToQuantiyFilter', '$sanitize', '$timeout',\n        function ($scope, ShufflingService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, AssetsService, CurrenciesService, amountToQuantFilter, OptionsService,\n                  shareToQuantiyFilter,$sanitize, $timeout) {\n\n\n            $scope.createShuffleForm = angular.copy(multiStepFormScope.createShuffleForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.createShuffleForm = angular.copy($scope.createShuffleForm);\n            });\n\n            $scope.alerts = [\n                {\n                    type: 'warning',\n                    msg: 'After creating or joining a shuffling you must keep your node online and your shuffler running. Make sure your balance is able to cover the 12 XIN shuffling fees until the shuffling completes. If you don\\'t and miss your turn you will be charged 1.000 XIN.'\n                }\n            ];\n\n            $scope.closeAlert = function (index) {\n                $scope.alerts.splice(index, 1);\n            };\n\n            $scope.isLocalhostOrTestnet = ShufflingService.isLocalHostOrTestnet() || false;\n\n            if (!$scope.isLocalhostOrTestnet) {\n\n              $timeout(function () {\n                  AlertService.addAlert(\n                      {\n                          type: 'danger',\n                          msg: 'Localhost (127.0.0.1) is not available. For security reasons localhost is mandatory to create a shuffle.'\n                      }, alertConfig.createShuffleModalAlert);\n              }, 1000);\n\n            }\n\n            $scope.finishHeight = 1440;\n\n            $scope.increment = function () {\n                if ($scope.finishHeight >= 20000) {\n                    $scope.finishHeight = 20000;\n                    return;\n                } else {\n                    $scope.finishHeight = $scope.finishHeight + 1440;\n                }\n\n                $scope.createShuffleForm.finishHeight = $scope.finishHeight;\n            };\n\n            $scope.decrement = function () {\n                if ($scope.finishHeight <= 1440) {\n                    $scope.finishHeight = 1440;\n                    return;\n                } else {\n                    $scope.finishHeight = $scope.finishHeight - 1440;\n                }\n\n                $scope.createShuffleForm.finishHeight = $scope.finishHeight;\n            };\n\n            $scope.max = function () {\n                $scope.finishHeight = 20000;\n                $scope.createShuffleForm.finishHeight = 20000;\n            };\n\n            $scope.min = function () {\n                $scope.finishHeight = 1440;\n                $scope.createShuffleForm.finishHeight = 1440;\n            };\n\n            $scope.getAsset = function (assetId) {\n                AssetsService.getAsset(assetId).then(function (success) {\n                    $scope.createShuffleForm.asset = success;\n                });\n            };\n\n            $scope.getCurrency = function (currencyCode) {\n                CurrenciesService.getCurrency(currencyCode).then(function (success) {\n                    $scope.createShuffleForm.currency = success;\n                });\n            };\n\n            $scope.getBlockChainStatus = function () {\n                CurrenciesService.getBlockChainStatus().then(function (success) {\n                    $scope.createShuffleForm.currentHeight = success.numberOfBlocks;\n                });\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.holdingOptions = [\n                {label: 'XIN', value: '0'},\n                {label: 'Asset', value: '1'},\n                {label: 'Currency', value: '2'}\n            ];\n\n            $scope.isLocalhostOrTestnet = ShufflingService.isLocalHostOrTestnet();\n\n            $scope.createShuffle = function () {\n                var createShuffleForm = multiStepFormScope.createShuffleForm;\n                var shuffleJson = {};\n                shuffleJson.amount = createShuffleForm.amount;\n                shuffleJson.holdingType = createShuffleForm.holdingType;\n                shuffleJson.holding = createShuffleForm.holding;\n                shuffleJson.participantCount = createShuffleForm.participantCount;\n                if (shuffleJson.holdingType === '2') {\n                    shuffleJson.holding = createShuffleForm.currency.currency;\n                    shuffleJson.amount = shareToQuantiyFilter(shuffleJson.amount, createShuffleForm.currency.decimals);\n                } else if (shuffleJson.holdingType === '1') {\n                    shuffleJson.amount = shareToQuantiyFilter(shuffleJson.amount, createShuffleForm.asset.decimals);\n                } else if (shuffleJson.holdingType === '0') {\n                    shuffleJson.amount = amountToQuantFilter(shuffleJson.amount);\n                }\n\n                shuffleJson.fee = 1;\n\n\n                shuffleJson.publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n\n                shuffleJson.finishHeight = createShuffleForm.finishHeight;\n\n                var secret = createShuffleForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                if (ShufflingService.isLocalHostOrTestnet()) {\n                    $scope.createShufflePromise =\n                        ShufflingService.createShuffling(shuffleJson.publicKey, shuffleJson.amount,\n                            shuffleJson.participantCount, shuffleJson.finishHeight, shuffleJson.holding,\n                            shuffleJson.holdingType, shuffleJson.fee)\n                                        .then(function (success) {\n                                            if (!success.errorCode) {\n                                                var unsignedBytes = success.unsignedTransactionBytes;\n                                                var signatureHex = CryptoService.signatureHex(\n                                                    unsignedBytes, secretPhraseHex);\n\n                                                $scope.transactionBytes =\n                                                    CryptoService.signTransactionHex(unsignedBytes,\n                                                        signatureHex);\n\n                                                $scope.tx_fee =\n                                                    success.transactionJSON.feeTQT / 100000000;\n                                                $scope.tx_amount =\n                                                    success.transactionJSON.amountTQT / 100000000;\n                                                $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                                                $scope.validBytes = true;\n\n\n                                            } else {\n                                                AlertService.addAlert(\n                                                    {\n                                                        type: 'danger',\n                                                        msg: 'Sorry, an error occured! Reason: ' +\n                                                        $sanitize(success.errorDescription)\n                                                    }, alertConfig.createShuffleModalAlert\n                                                );\n                                            }\n                                        }, function (error) {\n                                            AlertService.addAlert(\n                                                AlertService.getNoConnectionMessage(error),\n                                                alertConfig.createShuffleModalAlert);\n                                        });\n                } else {\n                    AlertService.addAlert(\n                        {\n                            type: 'danger',\n                            msg: 'You must be connected to localhost or testnet to perform shuffling'\n                        },\n                        alertConfig.createShuffleModalAlert);\n                }\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.createPollPromise =\n                    CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + $sanitize(success.transaction) +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + $sanitize(success.errorDescription)\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.createShuffleModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('shufflings').controller('RegisterShuffleFormController',\n    ['$scope', 'ShufflingService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'AssetsService', 'CurrenciesService', 'amountToQuantFilter', '$sanitize',\n        function ($scope, ShufflingService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, AssetsService, CurrenciesService, amountToQuantFilter,$sanitize) {\n\n\n            $scope.registerShuffleForm = angular.copy(multiStepFormScope.registerShuffleForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                $scope.registerShuffleForm = $scope.registerShuffleForm || {};\n                if (data) {\n                    $scope.registerShuffleForm.shufflingFullHash = data.shufflingFullHash;\n                    $scope.registerShuffleForm.amount = data.amount;\n                    $scope.registerShuffleForm.shuffling = data.shuffling;\n                    $scope.registerShuffleForm.holding = data.holding;\n                }\n            };\n\n            $scope.isLocalhostOrTestnet = ShufflingService.isLocalHostOrTestnet() || false;\n\n\n            if (!$scope.isLocalhostOrTestnet) {\n\n              AlertService.addAlert(\n                  {\n                      type: 'danger',\n                      msg: 'You must be connected to localhost or testnet to perform shuffling'\n                  },\n                  alertConfig.createShuffleModalAlert);\n\n            }\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.registerShuffleForm = angular.copy($scope.registerShuffleForm);\n            });\n\n            $scope.alerts = [\n                { type: 'warning', msg: 'After creating or joining a shuffling you must keep your node online and your shuffler running. Make sure your balance is able to cover the 12 XIN shuffling fees until the shuffling completes. If you don\\'t and miss your turn you will be charged 1.000 XIN.' }\n              ];\n\n            $scope.closeAlert = function(index) {\n              $scope.alerts.splice(index, 1);\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.registerShuffle = function () {\n                var registerShuffleForm = multiStepFormScope.registerShuffleForm;\n                var fee = 1;\n\n                var shufflingFullHash = registerShuffleForm.shufflingFullHash;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n\n                var secret = registerShuffleForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                if ($scope.isLocalhostOrTestnet) {\n                    $scope.registerShufflePromise =\n                        ShufflingService.registerShuffle(publicKey, fee, shufflingFullHash)\n                                        .then(function (success) {\n                                            if (!success.errorCode) {\n                                                var unsignedBytes = success.unsignedTransactionBytes;\n                                                var signatureHex = CryptoService.signatureHex(\n                                                    unsignedBytes, secretPhraseHex);\n\n                                                $scope.transactionBytes =\n                                                    CryptoService.signTransactionHex(unsignedBytes,\n                                                        signatureHex);\n\n                                                $scope.tx_fee =\n                                                    success.transactionJSON.feeTQT / 100000000;\n                                                $scope.tx_amount =\n                                                    success.transactionJSON.amountTQT / 100000000;\n                                                $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                                                $scope.validBytes = true;\n\n\n                                            } else {\n                                                AlertService.addAlert(\n                                                    {\n                                                        type: 'danger',\n                                                        msg: 'Sorry, an error occured! Reason: ' +\n                                                        $sanitize(success.errorDescription)\n                                                    }, alertConfig.registerShuffleModalAlert\n                                                );\n                                            }\n                                        }, function (error) {\n                                            AlertService.addAlert(\n                                                AlertService.getNoConnectionMessage(error),\n                                                alertConfig.registerShuffleModalAlert);\n                                        });\n                } else {\n                    AlertService.addAlert(\n                        {\n                            type: 'danger',\n                            msg: 'You must be connected to localhost or testnet to perform shuffling'\n                        },\n                        alertConfig.createShuffleModalAlert);\n                }\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.createPollPromise =\n                    CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + $sanitize(success.transaction) +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + $sanitize(success.errorDescription)\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.registerShuffleModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('shufflings').controller('StartShuffleFormController',\n    ['$scope', 'ShufflingService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'AssetsService', 'CurrenciesService', 'amountToQuantFilter', '$sanitize',\n        function ($scope, ShufflingService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, AssetsService, CurrenciesService, amountToQuantFilter, $sanitize) {\n\n\n            $scope.startShuffleForm = angular.copy(multiStepFormScope.startShuffleForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                $scope.startShuffleForm = $scope.startShuffleForm || {};\n                if (data) {\n                    $scope.startShuffleForm.shufflingFullHash = data.shufflingFullHash;\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.startShuffleForm = angular.copy($scope.startShuffleForm);\n            });\n\n            $scope.alerts = [\n                { type: 'warning', msg: 'Your passphrase is needed to start the shuffle on the connected node. Due to security reason this is only allowed on a local node or the dedicated SSL node provided by the foundation. The most secure way is to run your own local node for shuffling. To proceed please enter the recipient public key where to send token/assets or currencies. The recipient account has to be an unused, new account. You can generate a new account from login. Write down the passphrase!' }\n              ];\n\n            $scope.closeAlert = function(index) {\n              $scope.alerts.splice(index, 1);\n            };\n\n            $scope.showStart = true;\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.startShuffle = function (startShuffleForm) {\n                startShuffleForm = startShuffleForm||multiStepFormScope.startShuffleForm;\n                var fee = 1;\n\n                $scope.showStart = false;\n\n                $scope.closeAlert(0);\n\n                var shufflingFullHash = startShuffleForm.shufflingFullHash;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var recipientPublickey = startShuffleForm.recipientPublickey;\n\n                var secret = startShuffleForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                $scope.stopShufflePromise =\n                    ShufflingService.startShuffler(CryptoService.secretPhraseFromPrivateKey(secretPhraseHex),\n                        shufflingFullHash, undefined, recipientPublickey, fee)\n                                    .then(function (success) {\n\n                                    //  console.log (success)\n\n                                        if (!success.errorCode) {\n\n                                            AlertService.addAlert(\n                                                {\n                                                    type: 'success',\n                                                    msg: 'Shuffling ' + $sanitize(success.shuffling) + ' successfull started. Recipient: ' +\n                                                    success.recipientRS + ' '\n\n                                                }, alertConfig.startShuffleModalAlert\n                                            );\n\n                                        } else {\n                                            AlertService.addAlert(\n                                                {\n                                                    type: 'danger',\n                                                    msg: 'Sorry, an error occured! Reason: ' +\n                                                    $sanitize(success.errorDescription)\n                                                }, alertConfig.startShuffleModalAlert\n                                            );\n                                        }\n                                    }, function (error) {\n                                        AlertService.addAlert(\n                                            AlertService.getNoConnectionMessage(error),\n                                            alertConfig.startShuffleModalAlert);\n                                    });\n            };\n\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('shufflings').controller('StopShuffleFormController',\n    ['$scope', 'ShufflingService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'AssetsService', 'CurrenciesService', 'amountToQuantFilter', '$sanitize',\n        function ($scope, ShufflingService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, AssetsService, CurrenciesService, amountToQuantFilter, $sanitize) {\n\n\n            $scope.stopShuffleForm = angular.copy(multiStepFormScope.stopShuffleForm);\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                $scope.stopShuffleForm = $scope.stopShuffleForm || {};\n                if (data) {\n                    $scope.stopShuffleForm.shufflingFullHash = data.shufflingFullHash;\n                }\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.stopShuffleForm = angular.copy($scope.stopShuffleForm);\n            });\n\n            $scope.alerts = [\n                { type: 'warning', msg: 'If you stop your already started shuffle (an already fully joined running shuffle) you will be charged 1.000 XIN. ' }\n              ];\n\n            $scope.closeAlert = function(index) {\n              $scope.alerts.splice(index, 1);\n            };\n\n            $scope.showStop = true;\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.stopShuffle = function (stopShuffleForm) {\n\n                stopShuffleForm = stopShuffleForm||multiStepFormScope.stopShuffleForm;\n                var fee = 1;\n\n                $scope.showStop = false;\n\n                $scope.closeAlert(0);\n\n                var shufflingFullHash = stopShuffleForm.shufflingFullHash;\n\n                var secret = stopShuffleForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                $scope.stopShufflePromise =\n                    ShufflingService.stopShuffler(shufflingFullHash,CryptoService.secretPhraseFromPrivateKey(secretPhraseHex),fee)\n                                    .then(function (success) {\n                                        if (!success.errorCode) {\n\n\n                                          var result = 'Shuffler succesfully stopped';\n                                          var resType = 'success';\n\n                                          if ( success.stoppedShuffler == false) {\n                                            result = \"No running shuffler found. Please start the shuffler before stopping.\";\n                                            var resType = 'info';\n                                          };\n\n                                            AlertService.addAlert(\n                                                {\n                                                    type: resType,\n                                                    msg: 'Stop shuffle: '+ $sanitize(result)\n\n                                                }, alertConfig.stopShuffleModalAlert\n                                            );\n\n                                        } else {\n                                            AlertService.addAlert(\n                                                {\n                                                    type: 'danger',\n                                                    msg: 'Sorry, an error occured! Reason: ' +\n                                                    $sanitize(success.errorDescription)\n                                                }, alertConfig.stopShuffleModalAlert\n                                            );\n                                        }\n                                    }, function (error) {\n                                        AlertService.addAlert(\n                                            AlertService.getNoConnectionMessage(error),\n                                            alertConfig.stopShuffleModalAlert);\n                                    });\n            };\n\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('shufflings').controller('CancelShuffleFormController',\n    ['$scope', 'ShufflingService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'AssetsService', 'CurrenciesService', 'amountToQuantFilter', 'OptionsService', '$sanitize',\n        function ($scope, ShufflingService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, AssetsService, CurrenciesService, amountToQuantFilter, OptionsService, $sanitize) {\n\n            $scope.cancelShuffleForm = angular.copy(multiStepFormScope.cancelShuffleForm);\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.cancelShuffleForm = angular.copy($scope.cancelShuffleForm);\n            });\n\n            $scope.initStep1 = function () {\n                var data = $scope.$getActiveStep().data;\n                $scope.cancelShuffleForm = $scope.cancelShuffleForm || {};\n                if (data) {\n                    $scope.cancelShuffleForm.shufflingId = data.shufflingId;\n                    if (!(data.shufflingStateHash && data.cancellingAccountId)) {\n                        ShufflingService.getShuffling(data.shufflingId).then(function (success) {\n                            $scope.cancelShuffleForm.shufflingStateHash = success.shufflingStateHash;\n                            $scope.cancelShuffleForm.cancellingAccountId = success.assignee;\n                            console.log($scope.cancelShuffleForm);\n                        }, function (error) {\n\n                        })\n                    } else {\n                        $scope.cancelShuffleForm.shufflingStateHash = data.shufflingStateHash;\n                        $scope.cancelShuffleForm.cancellingAccountId = data.cancellingAccountId;\n                    }\n\n                }\n            };\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.isLocalhostOrTestnet = ShufflingService.isLocalHostOrTestnet();\n\n            $scope.cancelShuffle = function () {\n                var cancelShuffleForm = multiStepFormScope.cancelShuffleForm;\n                var shufflingId = cancelShuffleForm.shufflingId;\n                var shufflingStateHash = cancelShuffleForm.shufflingStateHash;\n                var cancellingAccountId = cancelShuffleForm.cancellingAccountId;\n                var fee = 1;\n\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n\n\n                var secret = cancelShuffleForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n                $scope.cancelShufflePromise =\n                    ShufflingService.cancelShuffle(CryptoService.secretPhraseFromPrivateKey(secretPhraseHex),\n                        shufflingId, shufflingStateHash, cancellingAccountId, fee)\n                                    .then(function (success) {\n                                        if (!success.errorCode) {\n                                            var unsignedBytes = success.unsignedTransactionBytes;\n                                            var signatureHex = CryptoService.signatureHex(\n                                                unsignedBytes, secretPhraseHex);\n\n                                            $scope.transactionBytes =\n                                                CryptoService.signTransactionHex(unsignedBytes,\n                                                    signatureHex);\n\n                                            $scope.tx_fee =\n                                                success.transactionJSON.feeTQT / 100000000;\n                                            $scope.tx_amount =\n                                                success.transactionJSON.amountTQT / 100000000;\n                                            $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                                            $scope.validBytes = true;\n\n\n                                        } else {\n                                            AlertService.addAlert(\n                                                {\n                                                    type: 'danger',\n                                                    msg: 'Sorry, an error occured! Reason: ' +\n                                                    $sanitize(success.errorDescription)\n                                                }, alertConfig.cancelShuffleModalAlert\n                                            );\n                                        }\n                                    }, function (error) {\n                                        AlertService.addAlert(\n                                            AlertService.getNoConnectionMessage(error),\n                                            alertConfig.cancelShuffleModalAlert);\n                                    });\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.createPollPromise =\n                    CommonsService.broadcastTransaction(transactionBytes).then(function (success) {\n                        $scope.$emit('close-modal');\n                        $rootScope.$broadcast('reload-dashboard');\n                        if (!success.errorCode) {\n                            AlertService.addAlert(\n                                {\n                                    type: 'success',\n                                    msg: 'Transaction succesfull broadcasted with Id : ' + $sanitize(success.transaction) +\n                                    ''\n                                });\n                            // $state.go('client.signedin.account.pending');\n                        } else {\n                            AlertService.addAlert(\n                                {\n                                    type: 'danger',\n                                    msg: 'Unable to broadcast transaction. Reason: ' + $sanitize(success.errorDescription)\n                                });\n                        }\n\n                    }, function (error) {\n                        AlertService.addAlert(AlertService.getNoConnectionMessage(error),\n                            alertConfig.cancelShuffleModalAlert);\n                    });\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\n angular.module('AT',\n     ['baseClient', 'crypto', 'ui.router', 'ui.bootstrap', 'multiStepForm', 'node', 'options']);\n\n angular.module('AT').constant('ATConfig', {\n     'ATEndPoint': 'api',\n });\n\n angular.module('AT').config(['RestangularProvider', 'ATConfig', '$stateProvider', '$urlRouterProvider',\n     function (RestangularProvider, ATConfig, $stateProvider, $urlRouterProvider) {\n\n         RestangularProvider.setRestangularFields({\n             options: '_options'\n         });\n\n         $stateProvider.state('client.signedin.at', {\n             url: '^/at',\n             templateUrl: './at/views/main.html',\n             abstract: true,\n         }).state('client.signedin.at.allats', {\n             url: '^/at/allats',\n             templateUrl: './at/views/allats.html',\n             controller: 'AllATsCtrl',\n         }).state('client.signedin.at.myats', {\n             url: '^/at/myats',\n             templateUrl: './at/views/myats.html',\n             controller: 'MyATsCtrl',\n         });\n\n     }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('AT').service('ATService',\n    ['nodeConfig', 'SessionStorageService', 'NodeService', 'baseConfig', 'Restangular', 'loginConfig',\n        'CryptoService', 'TransactionService', '$rootScope', 'OptionsService', 'ATConfig',\n        function (nodeConfig, SessionStorageService, NodeService, baseConfig, Restangular, loginConfig,\n                  CryptoService, TransactionService, $rootScope, OptionsService, ATConfig) {\n\n            this.createATProgram =\n                function (publicKey, name, description, creationBytes, code, data, dpages, cspages, uspages,\n                          minActivationAmountTQT, fee) {\n                    Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'),\n                        OptionsService.getOption('RANDOMIZE_NODES')));\n                    var params = {\n                        'publicKey': publicKey,\n                        'requestType': 'createATProgram',\n\n                        'name': name,\n                        'description': description,\n                        'creationBytes': creationBytes,\n                        'code': code,\n                        'data': data,\n                        'dpages': dpages,\n                        'cspages': cspages,\n                        'uspages': uspages,\n                        'minActivationAmountTQT': parseInt(minActivationAmountTQT),\n\n                        'feeTQT': parseInt(fee * baseConfig.TOKEN_QUANTS, 10),\n                        'broadcast': 'false',\n                        'deadline': OptionsService.getOption('DEADLINE')\n                    };\n                    return TransactionService.createTransaction(params);\n                };\n\n            this.getAT = function (at) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getAT',\n                    'at': at\n                };\n                return Restangular.all(ATConfig.ATEndPoint).customGET('', params);\n            };\n\n            this.getATDetails = function (at) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getATDetails',\n                    'at': at\n                };\n                return Restangular.all(ATConfig.ATEndPoint).customGET('', params);\n            };\n\n            this.getATDetails = function (at) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getATDetails',\n                    'at': at\n                };\n                return Restangular.all(ATConfig.ATEndPoint).customGET('', params);\n            };\n\n            this.getATIds = function () {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getATIds'\n                };\n                return Restangular.all(ATConfig.ATEndPoint).customGET('', params);\n            };\n\n            this.getAllATs = function () {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getAllATs'\n                };\n                return Restangular.all(ATConfig.ATEndPoint).customGET('', params);\n            };\n\n            this.getATLong = function (hexString) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getATLong',\n                    'hexString': hexString\n                };\n                return Restangular.all(ATConfig.ATEndPoint).customGET('', params);\n            };\n\n            this.getAccountATs = function (account) {\n                Restangular.setBaseUrl(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')));\n                var params = {\n                    'requestType': 'getAccountATs',\n                    'account': account\n                };\n                return Restangular.all(ATConfig.ATEndPoint).customGET('', params);\n            };\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('AT').controller('MainATCtrl',\n    ['$scope', 'SubscriptionService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter',\n        function ($scope, SubscriptionService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter) {\n\n            $scope.openCreateATModal = function () {\n\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'at/modals/create-at-form.html',\n                    size: 'lg',\n                    controller: 'ATFormCtrl',\n                    resolve: {\n                        params: function () {\n                            return {};\n                        }\n                    }\n                });\n            };\n\n            $scope.openATDetailsModal = function (atId) {\n                var modalInstance = $uibModal.open({\n                    animation: true,\n                    templateUrl: 'at/modals/at-details.html',\n                    size: 'lg',\n                    controller: 'ATDetailsCtrl',\n                    resolve: {\n                        params: function () {\n                            return {\n                                'at': atId,\n                            };\n                        }\n                    }\n                });\n            };\n\n        }]);\n\nangular.module('AT').controller('AllATsCtrl',\n    ['$scope', 'ATService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService',\n        'SessionStorageService',\n        'txIsValidFilter',\n        function ($scope, ATService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService,\n                  SessionStorageService, txIsValidFilter) {\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                                               .withDOM('frtip')\n                                               .withOption('serverSide', false)\n                                               .withDataProp('ats')\n                                               .withOption('processing', true)\n                                               .withOption('info', false)\n                                               .withOption('paging', true)\n                                               .withOption('ordering', false)\n                                               .withOption('bFilter', false)\n                                               .withOption('fnRowCallback',\n                                                   function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                                                       $compile(nRow)($scope);\n                                                   })\n                                               .withOption('ajax', function (data, callback, settings) {\n                                                   var endIndex = data.start + data.length - 1;\n                                                   ATService.getAllATs(data.start, endIndex).then(function (response) {\n                                                       callback({\n                                                           'iTotalRecords': 1000,\n                                                           'iTotalDisplayRecords': 1000,\n                                                           'ats': response.ats\n                                                       });\n                                                   });\n                                               })\n                                               .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('at').withTitle('AT').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                                       ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                                       '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' +\n                                       '</button>';\n\n                               }),\n\n                DTColumnBuilder.newColumn('atRS').withTitle('Account').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return searchTermFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('at').withTitle('Details').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n\n                                   var tt_details = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                       ' \"AT Details\"';\n\n                                   var atDetaills = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' +\n                                       tt_details + ' ng-controller=\"MainATCtrl\"' +\n                                       ' ng-click=\"openATDetailsModal(\\'' + data + '\\')\">' +\n                                       ' <i class=\"fa fa-cog\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' +\n                                       '</button>';\n\n                                   return atDetaills;\n\n\n                               }),\n\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return data;\n                               }),\n\n                DTColumnBuilder.newColumn('balanceTQT').withTitle('Balance').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   return amountTQTFilter(data);\n\n                               }),\n\n                DTColumnBuilder.newColumn('minActivation').withTitle('Activation').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return amountTQTFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('finished').withTitle('Finished').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return txIsValidFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('frozen').withTitle('Frozen').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return txIsValidFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('running').withTitle('Running').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return txIsValidFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('stopped').withTitle('Stopped').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return txIsValidFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('dead').withTitle('Dead').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return txIsValidFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('at').withTitle('Action').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   var runAt = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                       ' \"Run AT\"';\n\n                                   var sendToken = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' +\n                                       runAt + ' ng-controller=\"AccountMainCtrl\"' +\n                                       ' ng-click=\"openSendTokenModal (\\'' + data + '\\')\">' +\n                                       ' <i class=\"fa fa-cogs\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' +\n                                       '</button>';\n\n                                   return sendToken;\n                               }),\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n\n            $scope.reloadAllATs = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n        }]);\n\nangular.module('AT').controller('MyATsCtrl',\n    ['$scope', 'ATService', 'amountTQTFilter', 'timestampFilter', 'DTOptionsBuilder', 'DTColumnBuilder',\n        '$uibModal', '$compile', 'baseConfig', 'supplyFilter', 'searchTermFilter', 'CommonsService', 'ATService','txIsValidFilter',\n        function ($scope, SubscriptionService, amountTQTFilter, timestampFilter, DTOptionsBuilder, DTColumnBuilder,\n                  $uibModal, $compile, baseConfig, supplyFilter, searchTermFilter, CommonsService, ATService,txIsValidFilter) {\n\n            $scope.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers')\n                                              .withDOM('frtip')\n                                              .withOption('serverSide', false)\n                                              .withDataProp('ats')\n                                              .withOption('processing', true)\n                                              .withOption('info', false)\n                                              .withOption('paging', true)\n                                              .withOption('ordering', false)\n                                              .withOption('bFilter', false)\n                                               .withOption('fnRowCallback',\n                                                   function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n                                                       $compile(nRow)($scope);\n                                                   })\n                                               .withOption('ajax', function (data, callback, settings) {\n                                                   var accountId = CommonsService.getAccountDetailsFromSession(\n                                                       'accountId');\n                                                   ATService.getAccountATs(accountId).then(function (response) {\n                                                       callback({\n                                                           'iTotalRecords': response.ats.length,\n                                                           'iTotalDisplayRecords': response.ats.length,\n                                                           'ats': response.ats\n                                                       });\n                                                   });\n                                               })\n                                               .withDisplayLength(10).withBootstrap();\n\n            $scope.dtColumns = [\n\n                DTColumnBuilder.newColumn('at').withTitle('AT').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return '<button type=\"button\" class=\"btn btn-success btn-xs\" ng-controller=\"SearchCtrl\"' +\n                                       ' ng-click=\"searchValue(\\'' + data + '\\')\">' +\n                                       '<i class=\"fa fa-list-ul\" aria-hidden=\"true\" style=\"width:15px;\"></i>' +\n                                       '</button>';\n\n\n                               }),\n\n                DTColumnBuilder.newColumn('atRS').withTitle('Account').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return searchTermFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('at').withTitle('Details').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n\n                                   var tt_details = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                       ' \"AT Details\"';\n\n                                   var atDetaills = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' +\n                                       tt_details + ' ng-controller=\"MainATCtrl\"' +\n                                       ' ng-click=\"openATDetailsModal(\\'' + data + '\\')\">' +\n                                       ' <i class=\"fa fa-cog\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' +\n                                       '</button>';\n\n                                   return atDetaills;\n\n\n                               }),\n\n                DTColumnBuilder.newColumn('name').withTitle('Name').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   return data;\n\n                               }),\n\n                DTColumnBuilder.newColumn('balanceTQT').withTitle('Balance').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   return amountTQTFilter(data);\n\n                               }),\n\n                DTColumnBuilder.newColumn('minActivation').withTitle('Activation').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return amountTQTFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('finished').withTitle('Finished').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return txIsValidFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('frozen').withTitle('Frozen').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return txIsValidFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('running').withTitle('Running').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return txIsValidFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('stopped').withTitle('Stopped').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return txIsValidFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('dead').withTitle('Dead').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n                                   return txIsValidFilter(data);\n                               }),\n\n                DTColumnBuilder.newColumn('at').withTitle('Action').notSortable()\n                               .renderWith(function (data, type, row, meta) {\n\n                                   var runAt = ' popover-placement=\"left\" popover-trigger=\"\\'mouseenter\\'\" uib-popover=' +\n                                       ' \"Run AT\"';\n\n                                   var sendToken = '<button type=\"button\" class=\"btn btn-default btn-xs\"  ' +\n                                       runAt + ' ng-controller=\"AccountMainCtrl\"' +\n                                       ' ng-click=\"openSendTokenModal (\\'' + data + '\\')\">' +\n                                       ' <i class=\"fa fa-cogs\" aria-hidden=\"true\" style=\"width:15px;\"></i> ' +\n                                       '</button>';\n\n                                   return sendToken;\n                               }),\n\n\n            ];\n\n            $scope.dtInstanceCallback = function (_dtInstance) {\n                $scope.dtInstance = _dtInstance;\n            };\n            $scope.reloadAllATs = function () {\n                if ($scope.dtInstance) {\n                    $scope.dtInstance._renderer.rerender();\n                }\n            };\n\n\n        }]);\n\nangular.module('AT').controller('ATDetailsCtrl', ['$scope', 'ATService', 'params', '$uibModalInstance',\n    function ($scope, ATService, params, $uibModalInstance) {\n\n        $scope.initATDetails = function () {\n            ATService.getAT(params.at).then(function (success) {\n                $scope.atDetails = success;\n            }, function (error) {\n            });\n        };\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n    }]);\n\nangular.module('AT').controller('ATFormCtrl',\n    ['$scope', '$uibModalInstance', 'params', function ($scope, $uibModalInstance, params) {\n\n        $scope.cancel = function () {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n        $scope.$on('close-modal', function () {\n            $uibModalInstance.dismiss('cancel');\n        });\n\n        var createATSteps = [\n            {\n                templateUrl: 'at/modals/create-at-details.html',\n                title: 'Create AT Step 1',\n                controller: 'CreateATFormController',\n                isolatedScope: true,\n                data: params,\n            },\n            {\n                templateUrl: 'at/modals/create-at-details-2.html',\n                title: 'Create AT Step 2',\n                controller: 'CreateATFormController',\n                isolatedScope: true,\n                data: params,\n            },\n\n            {\n                templateUrl: 'at/modals/create-at-confirm.html',\n                title: 'Create AT Confirmation',\n                controller: 'CreateATFormController',\n                isolatedScope: true,\n            },\n        ];\n\n        $scope.steps = {};\n\n        $scope.steps.createATForm = createATSteps;\n\n    }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('AT').controller('CreateATFormController',\n    ['$scope', 'ATService', 'SessionStorageService', '$state', 'CryptoService', 'loginConfig',\n        'AlertService', 'alertConfig', '$validation', '$uibModal', 'multiStepFormScope', 'FeeService', '$rootScope',\n        'CommonsService', 'baseConfig',\n        function ($scope, ATService, SessionStorageService, $state, CryptoService,\n                  loginConfig, AlertService, alertConfig, $validation, $uibModal, multiStepFormScope, FeeService,\n                  $rootScope, CommonsService, baseConfig) {\n\n\n            $scope.createATForm = angular.copy(multiStepFormScope.createATForm);\n            $scope.createATForm2 = angular.copy(multiStepFormScope.createATForm2);\n\n\n            $scope.validateAndMoveNextStep = function () {\n                var createATForm2 = $scope.createATForm2;\n                $scope.$nextStep();\n            };\n\n            $scope.$on('$destroy', function () {\n                multiStepFormScope.createATForm = angular.copy($scope.createATForm);\n                multiStepFormScope.createATForm2 = angular.copy($scope.createATForm2);\n            });\n\n            $scope.hasPrivateKeyInSession = function () {\n                if (SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY)) {\n                    return true;\n                }\n                return false;\n            };\n\n            $scope.createAT = function () {\n                var createATForm = multiStepFormScope.createATForm;\n                var createATForm2 = multiStepFormScope.createATForm2;\n\n                var name = createATForm.name;\n                var description = createATForm.description;\n                var minActivationAmountTQT = parseInt(createATForm.minActivationAmount * baseConfig.TOKEN_QUANTS);\n                var code = createATForm2.code;\n                var data = createATForm2.data||'';\n                var creationBytes = createATForm2.bytes||'';\n                var dpages = createATForm2.dpages;\n                var cspages = createATForm2.cspages;\n                var uspages = createATForm2.uspages;\n\n                var fee = 1;\n                var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                var secret = createATForm.secretPhrase;\n                var secretPhraseHex;\n                if (secret) {\n                    secretPhraseHex = CryptoService.secretPhraseToPrivateKey(secret);\n                } else {\n                    secretPhraseHex =\n                        SessionStorageService.getFromSession(loginConfig.SESSION_ACCOUNT_PRIVATE_KEY);\n                }\n\n                $scope.createATPromise = ATService.createATProgram(publicKey, name, description, creationBytes, code,\n                    data, dpages, cspages, uspages, minActivationAmountTQT, fee).then(function (success) {\n\n                    if (!success.errorCode) {\n                        var unsignedBytes = success.unsignedTransactionBytes;\n                        var signatureHex = CryptoService.signatureHex(\n                            unsignedBytes, secretPhraseHex);\n                        $scope.transactionBytes =\n                            CryptoService.signTransactionHex(unsignedBytes,\n                                signatureHex);\n                        $scope.validBytes = true;\n\n                        $scope.tx_fee =\n                            success.transactionJSON.feeTQT / 100000000;\n                        $scope.tx_amount =\n                            success.transactionJSON.amountTQT / 100000000;\n                        $scope.tx_total = $scope.tx_fee + $scope.tx_amount;\n\n                    } else {\n                        AlertService.addAlert(\n                            {\n                                type: 'danger',\n                                msg: 'Sorry, an error occured! Reason: ' +\n                                success.errorDescription\n                            }, alertConfig.createATModalAlert\n                        );\n                    }\n                }, function (error) {\n                    AlertService.addAlert(\n                        AlertService.getNoConnectionMessage(error),\n                        alertConfig.createATModalAlert);\n                });\n\n            };\n\n            $scope.broadcastTransaction = function (transactionBytes) {\n                $scope.createATPromise = CommonsService.broadcastTransaction(transactionBytes)\n                                                       .then(function (success) {\n                                                           $scope.$emit('close-modal');\n                                                           $rootScope.$broadcast('reload-dashboard');\n                                                           if (!success.errorCode) {\n                                                               AlertService.addAlert(\n                                                                   {\n                                                                       type: 'success',\n                                                                       msg: 'Transaction succesfull broadcasted with Id : ' +\n                                                                       success.transaction +\n                                                                       ''\n                                                                   });\n                                                               // $state.go('client.signedin.account.pending');\n                                                           } else {\n                                                               AlertService.addAlert(\n                                                                   {\n                                                                       type: 'danger',\n                                                                       msg: 'Unable to broadcast transaction. Reason: ' +\n                                                                       success.errorDescription\n                                                                   });\n                                                           }\n\n                                                       }, function (error) {\n                                                           AlertService.addAlert(\n                                                               AlertService.getNoConnectionMessage(error),\n                                                               alertConfig.createATModalAlert);\n                                                       });\n            };\n\n        }\n\n    ]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('client',\n    ['login', 'baseClient', 'node', 'account', 'assets', 'ui.router', 'dashboard', 'clientAlert', 'search',\n        'addressbook', 'currencies', 'poll', 'messages', 'aliases', 'options', 'exchanges', 'extensions',\n        'tools', 'crowdfunding', 'subscription', 'escrow', 'shufflings', 'AT']);\n\nangular.module('client').config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n    $stateProvider.state('client', {\n        abstract: true,\n        url: '/',\n        template: '<div ui-view></div>'\n    }).state('client.signedin', {\n        abstract: true,\n        url: '/',\n        templateUrl: './commons/signedin.html'\n    });\n\n    $urlRouterProvider.otherwise('/welcome');\n}]);\n\nangular.module('client').service('OptionsConfigurationService',\n    ['StateAuthService', '$rootScope', 'OptionsService', 'OptionsConfigureService', 'CommonsService', 'AccountService',\n        'controlConfig', 'SessionStorageService', 'PeerService', 'nodeConfig', 'baseConfig',\n        function (StateAuthService, $rootScope, OptionsService, OptionsConfigureService, CommonsService, AccountService,\n                  controlConfig, SessionStorageService, PeerService, nodeConfig, baseConfig) {\n\n            this.loadOptions = loadOptions;\n\n            function loadOptions() {\n                if (!$rootScope.options) {\n                    var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n                    OptionsService.loadOptions(publicKey, function (optionsObject) {\n                        $rootScope.options = optionsObject;\n                        SessionStorageService.saveToSession(baseConfig.SESSION_APP_OPTIONS, optionsObject);\n                        getPhasingDetails();\n                    }, function (e) {\n                        $rootScope.options = DEFAULT_OPTIONS;\n                        SessionStorageService.saveToSession(baseConfig.SESSION_APP_OPTIONS, DEFAULT_OPTIONS);\n                        getPhasingDetails();\n                    }, function (error) {\n                        alert('Unable to get active nodes');\n                    });\n\n                }\n            }\n\n            function getPhasingDetails() {\n                var accountRS = CommonsService.getAccountDetailsFromSession('accountRs');\n                AccountService.getPhasingOnlyControl(accountRS).then(function (success) {\n                    if (success.account) {\n                        SessionStorageService.saveToSession(controlConfig.SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY, true);\n                        SessionStorageService.saveToSession(controlConfig.SESSION_ACCOUNT_CONTROL_JSONCONTROL_KEY,\n                            success);\n                    } else {\n                        SessionStorageService.saveToSession(controlConfig.SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY,\n                            false);\n                        SessionStorageService.saveToSession(controlConfig.SESSION_ACCOUNT_CONTROL_JSONCONTROL_KEY,\n                            undefined);\n                    }\n                });\n            }\n\n        }]);\n\nangular.module('client').run(\n    ['StateAuthService', '$rootScope', 'OptionsService', 'OptionsConfigureService', 'CommonsService', 'AccountService',\n        'controlConfig', 'SessionStorageService', 'PeerService', 'nodeConfig', 'baseConfig', '$confirmModalDefaults',\n        function (StateAuthService, $rootScope, OptionsService, OptionsConfigureService, CommonsService, AccountService,\n                  controlConfig, SessionStorageService, PeerService, nodeConfig, baseConfig, $confirmModalDefaults) {\n            $rootScope.$on('$stateChangeStart', function (event, nextState) {\n                StateAuthService.authenticate(event, nextState);\n                if (!SessionStorageService.getFromSession(nodeConfig.SESSION_PEER_NODES)) {\n                    PeerService.getPeers().then(function (response) {\n                        SessionStorageService.saveToSession(nodeConfig.SESSION_PEER_NODES, response);\n                        loadOptions();\n                    }, function (error) {\n                        window.alert('Unable to get Active nodes');\n                    });\n                }\n                loadOptions();\n\n\n            });\n\n            $confirmModalDefaults.templateUrl = 'global/views/confirm-modal.html';\n\n            function loadOptions() {\n                if (!$rootScope.options) {\n                    var publicKey = CommonsService.getAccountDetailsFromSession('publicKey');\n\n                    OptionsService.loadOptions(publicKey, function (optionsObject) {\n                        $rootScope.options = optionsObject;\n                        SessionStorageService.saveToSession(baseConfig.SESSION_APP_OPTIONS, optionsObject);\n                        getPhasingDetails();\n                    }, function (e) {\n                        $rootScope.options = DEFAULT_OPTIONS;\n                        SessionStorageService.saveToSession(baseConfig.SESSION_APP_OPTIONS, DEFAULT_OPTIONS);\n                        getPhasingDetails();\n                    }, function (error) {\n                        alert('Unable to get active nodes');\n                    });\n\n                }\n            }\n\n            function getPhasingDetails() {\n                var accountRS = CommonsService.getAccountDetailsFromSession('accountRs');\n                AccountService.getPhasingOnlyControl(accountRS).then(function (success) {\n                    if (success.account) {\n                        SessionStorageService.saveToSession(controlConfig.SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY, true);\n                        SessionStorageService.saveToSession(controlConfig.SESSION_ACCOUNT_CONTROL_JSONCONTROL_KEY,\n                            success);\n                    } else {\n                        SessionStorageService.saveToSession(controlConfig.SESSION_ACCOUNT_CONTROL_HASCONTROL_KEY,\n                            false);\n                        SessionStorageService.saveToSession(controlConfig.SESSION_ACCOUNT_CONTROL_JSONCONTROL_KEY,\n                            undefined);\n                    }\n                });\n            }\n\n        }]);\n\n/******************************************************************************\n * Copyright © 2017 XIN Community                                             *\n *                                                                            *\n * See the DEVELOPER-AGREEMENT.txt and LICENSE.txt files at  the top-level    *\n * directory of this distribution for the individual copyright  holder        *\n * information and the developer policies on copyright and licensing.         *\n *                                                                            *\n * Unless otherwise agreed in a custom licensing agreement, no part of the    *\n * XIN software, including this file, may be copied, modified, propagated,    *\n * or distributed except according to the terms contained in the LICENSE.txt  *\n * file.                                                                      *\n *                                                                            *\n * Removal or modification of this copyright notice is prohibited.            *\n *                                                                            *\n ******************************************************************************/\n\nangular.module('client').controller('FooterController',\n    ['NodeService', 'OptionsService', '$scope', 'TransactionService', 'PeerService', '$timeout', 'LocalHostService',\n        'SessionStorageService', 'baseConfig','$rootScope',\n        function (NodeService, OptionsService, $scope, TransactionService, PeerService, $timeout, LocalHostService,\n                  SessionStorageService, baseConfig,$rootScope) {\n\n            $scope.init = function () {\n                $scope.connectionMode = OptionsService.getOption('CONNECTION_MODE');\n                $scope.connectedURL = NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE'));\n                $scope.totalNodes = NodeService.getNodesCount();\n                TransactionService.getBlockChainStatus().then(function (success) {\n                    $scope.currentHeight = success.numberOfBlocks;\n\n                    SessionStorageService.saveToSession(baseConfig.SESSION_CURRENT_BLOCK, success.numberOfBlocks);\n\n                });\n                $scope.AssignedDate = Date;\n            };\n\n            $scope.getState = function () {\n                LocalHostService.getPeerState(NodeService.getNodeUrl(OptionsService.getOption('CONNECTION_MODE')))\n                                .then(function (success) {\n                                    $scope.peerState = success;\n                                });\n            };\n\n            $scope.$on('reload-options', function () {\n                $scope.init();\n            });\n\n\n            $rootScope.$on('peers-updated', function () {\n                $scope.init();\n            });\n\n        }]);\n"]}